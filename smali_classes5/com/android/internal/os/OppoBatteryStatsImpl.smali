.class public Lcom/android/internal/os/OppoBatteryStatsImpl;
.super Landroid/os/BatteryStats;
.source "OppoBatteryStatsImpl.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$OverflowArrayMap;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$DurationTimer;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$BatchTimer;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$SystemClocks;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$MyHandler;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$BatteryCallback;,
        Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;
    }
.end annotation


# static fields
.field private static blacklist ACTIVITY_MONITOR_MIN_TIME:I = 0x0

.field static final blacklist BATTERY_DELTA_LEVEL_FLAG:I = 0x1

.field public static final blacklist BATTERY_PLUGGED_NONE:I = 0x0

.field private static final blacklist BATTERY_REALTIME_CAPACITY:Ljava/lang/String; = "/sys/class/power_supply/battery/batt_rm"

.field private static final blacklist BATTERY_REALTIME_CAPACITY_GKI:Ljava/lang/String; = "/sys/class/oplus_chg/battery/battery_rm"

.field public static final greylist CREATOR:Landroid/os/Parcelable$Creator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/Parcelable$Creator<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl;",
            ">;"
        }
    .end annotation
.end field

.field static final blacklist DATA_CONNECTION_NONE:I = 0x0

.field private static final blacklist DEBUG:Z = false

.field public static final blacklist DEBUG_ENERGY:Z = false

.field private static final blacklist DEBUG_ENERGY_CPU:Z = false

.field private static final blacklist DEBUG_HISTORY:Z = false

.field private static final blacklist DEBUG_MEMORY:Z = false

.field static final blacklist DELAY_SYSTEM_READY:J = 0x1388L

.field static final blacklist DELAY_UPDATE_WAKELOCKS:J = 0x1388L

.field static final blacklist DELTA_BATTERY_CHARGE_FLAG:I = 0x1000000

.field static final blacklist DELTA_BATTERY_LEVEL_FLAG:I = 0x80000

.field static final blacklist DELTA_EVENT_FLAG:I = 0x800000

.field static final blacklist DELTA_STATE2_FLAG:I = 0x200000

.field static final blacklist DELTA_STATE_FLAG:I = 0x100000

.field static final blacklist DELTA_STATE_MASK:I = -0x2000000

.field static final blacklist DELTA_TIME_ABS:I = 0x7fffd

.field static final blacklist DELTA_TIME_INT:I = 0x7fffe

.field static final blacklist DELTA_TIME_LONG:I = 0x7ffff

.field static final blacklist DELTA_TIME_MASK:I = 0x7ffff

.field static final blacklist DELTA_WAKELOCK_FLAG:I = 0x400000

.field private static blacklist HIGH_POWER_THRESHOLD:J = 0x0L

.field private static final blacklist MAGIC:I = -0x458a8b8b

.field static final blacklist MAX_DAILY_ITEMS:I = 0xa

.field static final blacklist MAX_LEVEL_STEPS:I = 0xc8

.field private static final blacklist MAX_WAKELOCKS_PER_UID:I

.field private static final blacklist MILLISECONDS_IN_HOUR:D = 3600000.0

.field private static final blacklist MILLISECONDS_IN_YEAR:J = 0x757b12c00L

.field static final blacklist MSG_CHECK_AVERAGE_CURRENT:I = 0x100

.field static final blacklist MSG_REPORT_CHARGING:I = 0x3

.field static final blacklist MSG_REPORT_CPU_UPDATE_NEEDED:I = 0x1

.field static final blacklist MSG_REPORT_POWER_CHANGE:I = 0x2

.field static final blacklist MSG_REPORT_RESET_STATS:I = 0x4

.field static final blacklist MSG_SYSTEM_READY:I = 0x80

.field private static final blacklist NUM_BT_TX_LEVELS:I = 0x1

.field private static final blacklist NUM_WIFI_TX_LEVELS:I = 0x1

.field static final blacklist ONE_HOUR_IN_MS:J = 0x36ee80L

.field private static final blacklist RPM_STATS_UPDATE_FREQ_MS:J = 0x3e8L

.field static final blacklist STATE_BATTERY_HEALTH_MASK:I = 0x7

.field static final blacklist STATE_BATTERY_HEALTH_SHIFT:I = 0x1a

.field static final blacklist STATE_BATTERY_MASK:I = -0x1000000

.field static final blacklist STATE_BATTERY_PLUG_MASK:I = 0x3

.field static final blacklist STATE_BATTERY_PLUG_SHIFT:I = 0x18

.field static final blacklist STATE_BATTERY_STATUS_MASK:I = 0x7

.field static final blacklist STATE_BATTERY_STATUS_SHIFT:I = 0x1d

.field private static final blacklist TAG:Ljava/lang/String; = "OppoBatteryStatsImpl"

.field private static final blacklist UPLOAD_ACTIVITY_BATTERY_RECORD:Ljava/lang/String; = "activity_battery_record"

.field private static final blacklist UPLOAD_BATTERYSTATS_RESET:Ljava/lang/String; = "batterystats_reset"

.field private static final blacklist UPLOAD_LOGTAG:Ljava/lang/String; = "20089"

.field private static final blacklist USB_DATA_CONNECTED:I = 0x2

.field private static final blacklist USB_DATA_DISCONNECTED:I = 0x1

.field private static final blacklist USB_DATA_UNKNOWN:I = 0x0

.field private static final blacklist USE_OLD_HISTORY:Z = false

.field static final blacklist VERSION:I = 0xbb

.field public static final blacklist WAKE_LOCK_WEIGHT:I = 0x32


# instance fields
.field final blacklist mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

.field blacklist mActiveHistoryStates:I

.field blacklist mActiveHistoryStates2:I

.field blacklist mAudioOnNesting:I

.field blacklist mAudioOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field final blacklist mAudioTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final blacklist mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

.field blacklist mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

.field blacklist mBluetoothScanNesting:I

.field final blacklist mBluetoothScanOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected blacklist mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field private blacklist mCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$BatteryCallback;

.field blacklist mCameraOnNesting:I

.field blacklist mCameraOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field final blacklist mCameraTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mChangedStates:I

.field blacklist mChangedStates2:I

.field final blacklist mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field blacklist mCharging:Z

.field public final blacklist mCheckinFile:Landroid/util/AtomicFile;

.field protected blacklist mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

.field final blacklist mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

.field private blacklist mContext:Landroid/content/Context;

.field private blacklist mCpuFreqs:[J

.field private blacklist mCpuTimeReadsTrackingStartTime:J

.field protected blacklist mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

.field protected blacklist mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

.field protected blacklist mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

.field protected blacklist mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

.field final blacklist mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field blacklist mCurStepCpuSystemTime:J

.field blacklist mCurStepCpuUserTime:J

.field blacklist mCurStepMode:I

.field blacklist mCurStepStatIOWaitTime:J

.field blacklist mCurStepStatIdleTime:J

.field blacklist mCurStepStatIrqTime:J

.field blacklist mCurStepStatSoftIrqTime:J

.field blacklist mCurStepStatSystemTime:J

.field blacklist mCurStepStatUserTime:J

.field blacklist mCurrentBatteryLevel:I

.field final blacklist mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field final blacklist mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field public final blacklist mDailyFile:Landroid/util/AtomicFile;

.field final blacklist mDailyItems:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Landroid/os/BatteryStats$DailyItem;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mDailyPackageChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Landroid/os/BatteryStats$PackageChange;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mDailyStartTime:J

.field private final blacklist mDeferSetCharging:Ljava/lang/Runnable;

.field blacklist mDeviceIdleMode:I

.field blacklist mDeviceIdleModeFullTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mDeviceIdleModeLightTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mDeviceIdling:Z

.field blacklist mDeviceIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mDeviceLightIdling:Z

.field blacklist mDeviceLightIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mDischargeAmountScreenDoze:I

.field blacklist mDischargeAmountScreenDozeSinceCharge:I

.field blacklist mDischargeAmountScreenOff:I

.field blacklist mDischargeAmountScreenOffSinceCharge:I

.field blacklist mDischargeAmountScreenOn:I

.field blacklist mDischargeAmountScreenOnSinceCharge:I

.field private blacklist mDischargeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

.field blacklist mDischargeCurrentLevel:I

.field private blacklist mDischargeDeepDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

.field private blacklist mDischargeLightDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

.field blacklist mDischargePlugLevel:I

.field private blacklist mDischargeScreenDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

.field blacklist mDischargeScreenDozeUnplugLevel:I

.field private blacklist mDischargeScreenOffCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

.field blacklist mDischargeScreenOffUnplugLevel:I

.field blacklist mDischargeScreenOnUnplugLevel:I

.field blacklist mDischargeStartLevel:I

.field final blacklist mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field blacklist mDischargeUnplugLevel:I

.field blacklist mDistributeWakelockCpu:Z

.field final blacklist mDrawTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mEndPlatformVersion:Ljava/lang/String;

.field private blacklist mEstimatedBatteryCapacity:I

.field private blacklist mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

.field blacklist mFlashlightOnNesting:I

.field blacklist mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field final blacklist mFlashlightTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final greylist mFullTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final blacklist mFullWifiLockTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mGlobalWifiRunning:Z

.field blacklist mGlobalWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mGpsNesting:I

.field blacklist mGpsSignalQualityBin:I

.field protected final blacklist mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field public blacklist mHandler:Landroid/os/Handler;

.field blacklist mHasBluetoothReporting:Z

.field blacklist mHasModemReporting:Z

.field private blacklist mHasUid0:Z

.field private blacklist mHasUid1k:Z

.field blacklist mHasWifiReporting:Z

.field protected blacklist mHaveBatteryLevel:Z

.field blacklist mHighDischargeAmountSinceCharge:I

.field blacklist mHistory:Landroid/os/BatteryStats$HistoryItem;

.field final blacklist mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

.field blacklist mHistoryBaseTime:J

.field final blacklist mHistoryBuffer:Landroid/os/Parcel;

.field blacklist mHistoryBufferLastPos:I

.field blacklist mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

.field final blacklist mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

.field blacklist mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

.field private blacklist mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

.field blacklist mHistoryLastEnd:Landroid/os/BatteryStats$HistoryItem;

.field final blacklist mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

.field final blacklist mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

.field final blacklist mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

.field final blacklist mHistoryTagPool:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Landroid/os/BatteryStats$HistoryTag;",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mInitStepMode:I

.field private blacklist mInitialAcquireWakeName:Ljava/lang/String;

.field private blacklist mInitialAcquireWakeUid:I

.field blacklist mInteractive:Z

.field blacklist mInteractiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mIsCellularTxPowerHigh:Z

.field private blacklist mIsPerProcessStateCpuDataStale:Z

.field final blacklist mIsolatedUids:Landroid/util/SparseIntArray;

.field private blacklist mIteratingHistory:Z

.field protected blacklist mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

.field private final blacklist mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

.field private final blacklist mKernelMemoryStats:Landroid/util/LongSparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/LongSparseArray<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected blacklist mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

.field private final blacklist mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

.field private final blacklist mKernelWakelockStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field private final blacklist mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

.field blacklist mLastChargeStepLevel:I

.field blacklist mLastChargingStateLevel:I

.field blacklist mLastDischargeStepLevel:I

.field blacklist mLastHistoryElapsedRealtime:J

.field blacklist mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field blacklist mLastHistoryStepLevel:B

.field blacklist mLastIdleTimeStart:J

.field private blacklist mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

.field private blacklist mLastModemNetworkStats:Landroid/net/NetworkStats;

.field protected blacklist mLastPartialTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field private blacklist mLastRpmStatsUpdateTimeMs:J

.field blacklist mLastStepCpuSystemTime:J

.field blacklist mLastStepCpuUserTime:J

.field blacklist mLastStepStatIOWaitTime:J

.field blacklist mLastStepStatIdleTime:J

.field blacklist mLastStepStatIrqTime:J

.field blacklist mLastStepStatSoftIrqTime:J

.field blacklist mLastStepStatSystemTime:J

.field blacklist mLastStepStatUserTime:J

.field blacklist mLastWakeupReason:Ljava/lang/String;

.field blacklist mLastWakeupUptimeMs:J

.field private blacklist mLastWifiNetworkStats:Landroid/net/NetworkStats;

.field blacklist mLastWriteTime:J

.field blacklist mLongestFullIdleTime:J

.field blacklist mLongestLightIdleTime:J

.field blacklist mLowDischargeAmountSinceCharge:I

.field blacklist mMaxChargeStepLevel:I

.field private blacklist mMaxLearnedBatteryCapacity:I

.field blacklist mMinDischargeStepLevel:I

.field private blacklist mMinLearnedBatteryCapacity:I

.field blacklist mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

.field blacklist mMobileRadioActivePerAppTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mMobileRadioActiveStartTime:J

.field blacklist mMobileRadioActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mMobileRadioActiveUnknownCount:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

.field blacklist mMobileRadioActiveUnknownTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

.field blacklist mMobileRadioPowerState:I

.field blacklist mModStepMode:I

.field blacklist mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

.field private blacklist mModemIfaces:[Ljava/lang/String;

.field private final blacklist mModemNetworkLock:Ljava/lang/Object;

.field final blacklist mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

.field final blacklist mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

.field private final blacklist mNetworkStatsPool:Landroid/util/Pools$Pool;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/Pools$Pool<",
            "Landroid/net/NetworkStats;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mNextHistoryTagIdx:I

.field blacklist mNextMaxDailyDeadline:J

.field blacklist mNextMinDailyDeadline:J

.field blacklist mNoAutoReset:Z

.field private blacklist mNumAllUidCpuTimeReads:I

.field private blacklist mNumBatchedSingleUidCpuTimeReads:J

.field private blacklist mNumConnectivityChange:I

.field blacklist mNumHistoryItems:I

.field blacklist mNumHistoryTagChars:I

.field private blacklist mNumSingleUidCpuTimeReads:J

.field private blacklist mNumUidsRemoved:I

.field blacklist mOnBattery:Z

.field protected blacklist mOnBatteryInternal:Z

.field protected final blacklist mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

.field protected final blacklist mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

.field protected greylist mPartialTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected blacklist mPendingRemovedUids:Ljava/util/Queue;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Queue<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;",
            ">;"
        }
    .end annotation
.end field

.field protected final blacklist mPendingUids:Landroid/util/SparseIntArray;

.field public blacklist mPerProcStateCpuTimesAvailable:Z

.field blacklist mPhoneDataConnectionType:I

.field final blacklist mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mPhoneOn:Z

.field blacklist mPhoneOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field private blacklist mPhoneServiceState:I

.field private blacklist mPhoneServiceStateRaw:I

.field blacklist mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mPhoneSignalStrengthBin:I

.field blacklist mPhoneSignalStrengthBinRaw:I

.field final blacklist mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field private blacklist mPhoneSimStateRaw:I

.field private final blacklist mPlatformIdleStateCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;

.field protected blacklist mPowerProfile:Lcom/android/internal/os/PowerProfile;

.field blacklist mPowerSaveModeEnabled:Z

.field blacklist mPowerSaveModeEnabledTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mPretendScreenOff:Z

.field public final blacklist mRailEnergyDataCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;

.field blacklist mReadHistoryChars:I

.field final blacklist mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field blacklist mReadHistoryStrings:[Ljava/lang/String;

.field blacklist mReadHistoryUids:[I

.field private blacklist mReadOverflow:Z

.field blacklist mRealtime:J

.field blacklist mRealtimeStart:J

.field public blacklist mRecordAllHistory:Z

.field protected blacklist mRecordingHistory:Z

.field private final blacklist mRpmStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mScreenBrightnessBin:I

.field final blacklist mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field protected blacklist mScreenDozeTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field private final blacklist mScreenOffRpmStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected blacklist mScreenOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field protected blacklist mScreenState:I

.field blacklist mSensorNesting:I

.field final blacklist mSensorTimers:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;>;"
        }
    .end annotation
.end field

.field blacklist mShuttingDown:Z

.field blacklist mStartClockTime:J

.field blacklist mStartCount:I

.field blacklist mStartPlatformVersion:Ljava/lang/String;

.field private final blacklist mStatsFile:Landroid/util/AtomicFile;

.field blacklist mTempTotalCpuSystemTimeUs:J

.field blacklist mTempTotalCpuUserTimeUs:J

.field final blacklist mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field private final blacklist mTmpRailStats:Lcom/android/internal/os/RailStats;

.field private final blacklist mTmpRpmStats:Lcom/android/internal/os/RpmStats;

.field private final blacklist mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

.field blacklist mTrackRunningHistoryElapsedRealtime:J

.field blacklist mTrackRunningHistoryUptime:J

.field final blacklist mUidStats:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;",
            ">;"
        }
    .end annotation
.end field

.field private blacklist mUidTopActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

.field blacklist mUptime:J

.field blacklist mUptimeStart:J

.field blacklist mUsbDataState:I

.field protected blacklist mUserInfoProvider:Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

.field blacklist mVideoOnNesting:I

.field blacklist mVideoOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field final blacklist mVideoTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mWakeLockAllocationsUs:[[J

.field blacklist mWakeLockImportant:Z

.field blacklist mWakeLockNesting:I

.field private final blacklist mWakeupReasonStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mWifiActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

.field final blacklist mWifiBatchedScanTimers:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;>;"
        }
    .end annotation
.end field

.field blacklist mWifiFullLockNesting:I

.field private blacklist mWifiIfaces:[Ljava/lang/String;

.field blacklist mWifiMulticastNesting:I

.field final blacklist mWifiMulticastTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field private final blacklist mWifiNetworkLock:Ljava/lang/Object;

.field blacklist mWifiOn:Z

.field blacklist mWifiOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mWifiRadioPowerState:I

.field final blacklist mWifiRunningTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mWifiScanNesting:I

.field final blacklist mWifiScanTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field blacklist mWifiSignalStrengthBin:I

.field final blacklist mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mWifiState:I

.field final blacklist mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field blacklist mWifiSupplState:I

.field final blacklist mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

.field final greylist mWindowTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final blacklist mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

.field blacklist pausedBatteryLevel:I

.field blacklist pausedElapsedRealtime:J

.field blacklist resumedBatteryLevel:I

.field blacklist resumedBatteryRealtimeCapacity:I

.field blacklist resumedClass:Ljava/lang/String;

.field blacklist resumedElapsedRealtime:J

.field blacklist resumedPackage:Ljava/lang/String;

.field blacklist resumedUid:I


# direct methods
.method static constructor blacklist <clinit>()V
    .locals 2

    .line 178
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 179
    const/16 v0, 0x28

    sput v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    goto :goto_0

    .line 181
    :cond_0
    const/16 v0, 0xc8

    sput v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    .line 231
    :goto_0
    const/16 v0, 0x14

    sput v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->ACTIVITY_MONITOR_MIN_TIME:I

    .line 232
    const-wide/16 v0, 0x320

    sput-wide v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->HIGH_POWER_THRESHOLD:J

    .line 15299
    new-instance v0, Lcom/android/internal/os/OppoBatteryStatsImpl$6;

    invoke-direct {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$6;-><init>()V

    sput-object v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->CREATOR:Landroid/os/Parcelable$Creator;

    return-void
.end method

.method public constructor blacklist <init>()V
    .locals 1

    .line 1139
    new-instance v0, Lcom/android/internal/os/OppoBatteryStatsImpl$SystemClocks;

    invoke-direct {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$SystemClocks;-><init>()V

    invoke-direct {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;)V

    .line 1140
    return-void
.end method

.method public constructor greylist <init>(Landroid/os/Parcel;)V
    .locals 1
    .param p1, "p"    # Landroid/os/Parcel;

    .line 10128
    new-instance v0, Lcom/android/internal/os/OppoBatteryStatsImpl$SystemClocks;

    invoke-direct {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$SystemClocks;-><init>()V

    invoke-direct {p0, v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Landroid/os/Parcel;)V

    .line 10129
    return-void
.end method

.method public constructor blacklist <init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;)V
    .locals 13
    .param p1, "clocks"    # Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    .line 1142
    invoke-direct {p0}, Landroid/os/BatteryStats;-><init>()V

    .line 240
    new-instance v0, Lcom/android/internal/os/KernelWakelockReader;

    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    .line 241
    new-instance v0, Lcom/android/internal/os/KernelWakelockStats;

    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    .line 243
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    const/4 v1, 0x1

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    .line 248
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    .line 251
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    .line 254
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    .line 260
    new-instance v0, Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-direct {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    .line 262
    new-instance v0, Landroid/util/LongSparseArray;

    invoke-direct {v0}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    .line 267
    iput-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 284
    new-instance v0, Landroid/util/SparseIntArray;

    invoke-direct {v0}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    .line 292
    nop

    .line 293
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    .line 300
    new-instance v0, Lcom/android/internal/os/RpmStats;

    invoke-direct {v0}, Lcom/android/internal/os/RpmStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    .line 304
    const-wide/16 v2, -0x3e8

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 307
    new-instance v0, Lcom/android/internal/os/RailStats;

    invoke-direct {v0}, Lcom/android/internal/os/RailStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    .line 321
    new-instance v0, Ljava/util/LinkedList;

    invoke-direct {v0}, Ljava/util/LinkedList;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 410
    new-instance v0, Lcom/android/internal/os/OppoBatteryStatsImpl$1;

    invoke-direct {v0, p0}, Lcom/android/internal/os/OppoBatteryStatsImpl$1;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;)V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    .line 679
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    .line 680
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    .line 688
    new-instance v2, Landroid/util/SparseIntArray;

    invoke-direct {v2}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    .line 693
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .line 699
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    .line 702
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    .line 704
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    .line 706
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    .line 707
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    .line 708
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    .line 709
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    .line 710
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    .line 711
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    .line 712
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    .line 713
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    .line 714
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    .line 715
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    .line 716
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    .line 721
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    .line 724
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    .line 729
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 733
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 741
    new-instance v2, Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    .line 744
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 745
    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    .line 748
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v3

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    .line 749
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 750
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 751
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 752
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 753
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    .line 757
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 758
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumHistoryTagChars:I

    .line 759
    const/4 v3, -0x1

    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 760
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates:I

    .line 761
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates2:I

    .line 762
    const-wide/16 v4, 0x0

    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 763
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 764
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 768
    new-instance v6, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 776
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 777
    iput-byte v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 778
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 779
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 780
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 828
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    .line 835
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessBin:I

    .line 836
    const/4 v6, 0x5

    new-array v7, v6, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 877
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUsbDataState:I

    .line 879
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 880
    const/4 v7, 0x2

    new-array v7, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 884
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 885
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 886
    new-array v7, v6, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 891
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 892
    sget v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    new-array v7, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 895
    const/16 v7, 0xa

    new-array v8, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iput-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 897
    new-array v7, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 927
    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasWifiReporting:Z

    .line 933
    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 939
    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasModemReporting:Z

    .line 947
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiState:I

    .line 948
    const/16 v7, 0x8

    new-array v7, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 950
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplState:I

    .line 951
    const/16 v7, 0xd

    new-array v7, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 953
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 954
    new-array v6, v6, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 963
    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    .line 965
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioPowerState:I

    .line 973
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiRadioPowerState:I

    .line 986
    iput-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCharging:Z

    .line 1017
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitStepMode:I

    .line 1018
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    .line 1019
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    .line 1023
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v6, 0xc8

    invoke-direct {v1, v6}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1024
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v7, 0x190

    invoke-direct {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1029
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v1, v6}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1030
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1034
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyStartTime:J

    .line 1035
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 1036
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 1038
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    .line 1040
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWriteTime:J

    .line 1042
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneServiceState:I

    .line 1043
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 1044
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 1048
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 1050
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 1051
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 1065
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    .line 1067
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    .line 1083
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    .line 1090
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 1091
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 1092
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    .line 3785
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChangedStates:I

    .line 3786
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChangedStates2:I

    .line 4263
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 5519
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedUid:I

    .line 5520
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedBatteryLevel:I

    .line 5521
    const-wide/16 v6, -0x1

    iput-wide v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedElapsedRealtime:J

    .line 5522
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedBatteryRealtimeCapacity:I

    .line 5523
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedPackage:Ljava/lang/String;

    .line 5524
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedClass:Ljava/lang/String;

    .line 5525
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->pausedBatteryLevel:I

    .line 5526
    iput-wide v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->pausedElapsedRealtime:J

    .line 6053
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6083
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanNesting:I

    .line 6123
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastNesting:I

    .line 10947
    new-instance v1, Landroid/util/Pools$SynchronizedPool;

    const/4 v6, 0x6

    invoke-direct {v1, v6}, Landroid/util/Pools$SynchronizedPool;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 10949
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    .line 10951
    sget-object v1, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 10954
    new-instance v1, Landroid/net/NetworkStats;

    invoke-direct {v1, v4, v5, v3}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 10957
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    .line 10959
    sget-object v1, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 10962
    new-instance v1, Landroid/net/NetworkStats;

    invoke-direct {v1, v4, v5, v3}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    .line 11256
    new-instance v1, Landroid/telephony/ModemActivityInfo;

    new-array v11, v2, [I

    const-wide/16 v7, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v12, 0x0

    move-object v6, v1

    invoke-direct/range {v6 .. v12}, Landroid/telephony/ModemActivityInfo;-><init>(JII[II)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11516
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-direct {v1, p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Lcom/android/internal/os/OppoBatteryStatsImpl$1;)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    .line 13572
    new-instance v1, Ljava/util/concurrent/locks/ReentrantLock;

    invoke-direct {v1}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    .line 1143
    invoke-direct {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->init(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;)V

    .line 1144
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    .line 1145
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCheckinFile:Landroid/util/AtomicFile;

    .line 1146
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    .line 1147
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    .line 1148
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    .line 1149
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;

    .line 1150
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRailEnergyDataCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;

    .line 1151
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    .line 1152
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    invoke-direct {v1, p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Landroid/os/Handler;)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    .line 1153
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->clearHistoryLocked()V

    .line 1154
    return-void
.end method

.method public constructor blacklist <init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Landroid/os/Parcel;)V
    .locals 13
    .param p1, "clocks"    # Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;
    .param p2, "p"    # Landroid/os/Parcel;

    .line 10131
    invoke-direct {p0}, Landroid/os/BatteryStats;-><init>()V

    .line 240
    new-instance v0, Lcom/android/internal/os/KernelWakelockReader;

    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    .line 241
    new-instance v0, Lcom/android/internal/os/KernelWakelockStats;

    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    .line 243
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    const/4 v1, 0x1

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    .line 248
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    .line 251
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    .line 254
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    .line 260
    new-instance v0, Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-direct {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    .line 262
    new-instance v0, Landroid/util/LongSparseArray;

    invoke-direct {v0}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    .line 267
    iput-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 284
    new-instance v0, Landroid/util/SparseIntArray;

    invoke-direct {v0}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    .line 292
    nop

    .line 293
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    .line 300
    new-instance v0, Lcom/android/internal/os/RpmStats;

    invoke-direct {v0}, Lcom/android/internal/os/RpmStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    .line 304
    const-wide/16 v2, -0x3e8

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 307
    new-instance v0, Lcom/android/internal/os/RailStats;

    invoke-direct {v0}, Lcom/android/internal/os/RailStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    .line 321
    new-instance v0, Ljava/util/LinkedList;

    invoke-direct {v0}, Ljava/util/LinkedList;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 410
    new-instance v0, Lcom/android/internal/os/OppoBatteryStatsImpl$1;

    invoke-direct {v0, p0}, Lcom/android/internal/os/OppoBatteryStatsImpl$1;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;)V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    .line 679
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    .line 680
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    .line 688
    new-instance v2, Landroid/util/SparseIntArray;

    invoke-direct {v2}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    .line 693
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .line 699
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    .line 702
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    .line 704
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    .line 706
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    .line 707
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    .line 708
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    .line 709
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    .line 710
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    .line 711
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    .line 712
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    .line 713
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    .line 714
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    .line 715
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    .line 716
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    .line 721
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    .line 724
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    .line 729
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 733
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 741
    new-instance v2, Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    .line 744
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 745
    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    .line 748
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v3

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    .line 749
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 750
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 751
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 752
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 753
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    .line 757
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 758
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumHistoryTagChars:I

    .line 759
    const/4 v3, -0x1

    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 760
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates:I

    .line 761
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates2:I

    .line 762
    const-wide/16 v4, 0x0

    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 763
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 764
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 768
    new-instance v6, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 776
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 777
    iput-byte v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 778
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 779
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 780
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 828
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    .line 835
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessBin:I

    .line 836
    const/4 v6, 0x5

    new-array v7, v6, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 877
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUsbDataState:I

    .line 879
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 880
    const/4 v7, 0x2

    new-array v7, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 884
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 885
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 886
    new-array v7, v6, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 891
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 892
    sget v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    new-array v7, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 895
    const/16 v7, 0xa

    new-array v8, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iput-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 897
    new-array v7, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 927
    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasWifiReporting:Z

    .line 933
    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 939
    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasModemReporting:Z

    .line 947
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiState:I

    .line 948
    const/16 v7, 0x8

    new-array v7, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 950
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplState:I

    .line 951
    const/16 v7, 0xd

    new-array v7, v7, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 953
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 954
    new-array v6, v6, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 963
    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    .line 965
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioPowerState:I

    .line 973
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiRadioPowerState:I

    .line 986
    iput-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCharging:Z

    .line 1017
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitStepMode:I

    .line 1018
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    .line 1019
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    .line 1023
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v6, 0xc8

    invoke-direct {v1, v6}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1024
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v7, 0x190

    invoke-direct {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1029
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v1, v6}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1030
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1034
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyStartTime:J

    .line 1035
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 1036
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 1038
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    .line 1040
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWriteTime:J

    .line 1042
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneServiceState:I

    .line 1043
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 1044
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 1048
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 1050
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 1051
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 1065
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    .line 1067
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    .line 1083
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    .line 1090
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 1091
    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 1092
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    .line 3785
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChangedStates:I

    .line 3786
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChangedStates2:I

    .line 4263
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 5519
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedUid:I

    .line 5520
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedBatteryLevel:I

    .line 5521
    const-wide/16 v6, -0x1

    iput-wide v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedElapsedRealtime:J

    .line 5522
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedBatteryRealtimeCapacity:I

    .line 5523
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedPackage:Ljava/lang/String;

    .line 5524
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedClass:Ljava/lang/String;

    .line 5525
    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->pausedBatteryLevel:I

    .line 5526
    iput-wide v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->pausedElapsedRealtime:J

    .line 6053
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6083
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanNesting:I

    .line 6123
    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastNesting:I

    .line 10947
    new-instance v1, Landroid/util/Pools$SynchronizedPool;

    const/4 v6, 0x6

    invoke-direct {v1, v6}, Landroid/util/Pools$SynchronizedPool;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 10949
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    .line 10951
    sget-object v1, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 10954
    new-instance v1, Landroid/net/NetworkStats;

    invoke-direct {v1, v4, v5, v3}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 10957
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    .line 10959
    sget-object v1, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 10962
    new-instance v1, Landroid/net/NetworkStats;

    invoke-direct {v1, v4, v5, v3}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    .line 11256
    new-instance v1, Landroid/telephony/ModemActivityInfo;

    new-array v11, v2, [I

    const-wide/16 v7, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v12, 0x0

    move-object v6, v1

    invoke-direct/range {v6 .. v12}, Landroid/telephony/ModemActivityInfo;-><init>(JII[II)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11516
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-direct {v1, p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Lcom/android/internal/os/OppoBatteryStatsImpl$1;)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    .line 13572
    new-instance v1, Ljava/util/concurrent/locks/ReentrantLock;

    invoke-direct {v1}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    .line 10132
    invoke-direct {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->init(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;)V

    .line 10133
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    .line 10134
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCheckinFile:Landroid/util/AtomicFile;

    .line 10135
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    .line 10136
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    .line 10137
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    .line 10138
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    invoke-direct {v1, p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Landroid/os/Handler;)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    .line 10139
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->clearHistoryLocked()V

    .line 10140
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsHistory;

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-direct {v1, p0, v2}, Lcom/android/internal/os/OppoBatteryStatsHistory;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Landroid/os/Parcel;)V

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    .line 10141
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readFromParcel(Landroid/os/Parcel;)V

    .line 10142
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;

    .line 10143
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRailEnergyDataCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;

    .line 10144
    return-void
.end method

.method private constructor blacklist <init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;)V
    .locals 26
    .param p1, "clocks"    # Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;
    .param p2, "systemDir"    # Ljava/io/File;
    .param p3, "handler"    # Landroid/os/Handler;
    .param p4, "cb"    # Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;
    .param p5, "railStatsCb"    # Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;
    .param p6, "userInfoProvider"    # Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    .line 10021
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    invoke-direct/range {p0 .. p0}, Landroid/os/BatteryStats;-><init>()V

    .line 240
    new-instance v2, Lcom/android/internal/os/KernelWakelockReader;

    invoke-direct {v2}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    .line 241
    new-instance v2, Lcom/android/internal/os/KernelWakelockStats;

    invoke-direct {v2}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    .line 243
    new-instance v2, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    const/4 v3, 0x1

    invoke-direct {v2, v3}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;-><init>(Z)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    .line 248
    new-instance v2, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-direct {v2, v3}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;-><init>(Z)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    .line 251
    new-instance v2, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-direct {v2, v3}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;-><init>(Z)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    .line 254
    new-instance v2, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-direct {v2, v3}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;-><init>(Z)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    .line 260
    new-instance v2, Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-direct {v2}, Lcom/android/internal/os/KernelMemoryBandwidthStats;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    .line 262
    new-instance v2, Landroid/util/LongSparseArray;

    invoke-direct {v2}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    .line 267
    iput-boolean v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 284
    new-instance v2, Landroid/util/SparseIntArray;

    invoke-direct {v2}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    .line 292
    nop

    .line 293
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    iput-wide v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    .line 300
    new-instance v2, Lcom/android/internal/os/RpmStats;

    invoke-direct {v2}, Lcom/android/internal/os/RpmStats;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    .line 304
    const-wide/16 v4, -0x3e8

    iput-wide v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 307
    new-instance v2, Lcom/android/internal/os/RailStats;

    invoke-direct {v2}, Lcom/android/internal/os/RailStats;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    .line 321
    new-instance v2, Ljava/util/LinkedList;

    invoke-direct {v2}, Ljava/util/LinkedList;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 410
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$1;

    invoke-direct {v2, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$1;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    .line 679
    const/4 v2, 0x0

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    .line 680
    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    .line 688
    new-instance v4, Landroid/util/SparseIntArray;

    invoke-direct {v4}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    .line 693
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .line 699
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    .line 702
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    .line 704
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    .line 706
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    .line 707
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    .line 708
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    .line 709
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    .line 710
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    .line 711
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    .line 712
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    .line 713
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    .line 714
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    .line 715
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    .line 716
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    .line 721
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    .line 724
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    .line 729
    new-instance v4, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v4, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 733
    new-instance v4, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v4, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 741
    new-instance v4, Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-direct {v4}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    .line 744
    const/4 v4, 0x0

    iput-boolean v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 745
    iput-boolean v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    .line 748
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v5

    iput-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    .line 749
    new-instance v5, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v5}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 750
    new-instance v5, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v5}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 751
    new-instance v5, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v5}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 752
    new-instance v5, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v5}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 753
    new-instance v5, Ljava/util/HashMap;

    invoke-direct {v5}, Ljava/util/HashMap;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    .line 757
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 758
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumHistoryTagChars:I

    .line 759
    const/4 v5, -0x1

    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 760
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates:I

    .line 761
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates2:I

    .line 762
    const-wide/16 v6, 0x0

    iput-wide v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 763
    iput-wide v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 764
    iput-wide v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 768
    new-instance v8, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v8}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 776
    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 777
    iput-byte v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 778
    new-instance v8, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v8}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 779
    new-instance v8, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v8}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 780
    new-instance v8, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v8}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 828
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    .line 835
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessBin:I

    .line 836
    const/4 v8, 0x5

    new-array v9, v8, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 877
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUsbDataState:I

    .line 879
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 880
    const/4 v9, 0x2

    new-array v10, v9, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 884
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 885
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 886
    new-array v10, v8, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 891
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 892
    sget v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    new-array v10, v10, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 895
    const/16 v10, 0xa

    new-array v11, v10, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iput-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 897
    new-array v11, v10, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iput-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 927
    iput-boolean v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasWifiReporting:Z

    .line 933
    iput-boolean v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 939
    iput-boolean v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasModemReporting:Z

    .line 947
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiState:I

    .line 948
    const/16 v11, 0x8

    new-array v12, v11, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 950
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplState:I

    .line 951
    const/16 v12, 0xd

    new-array v13, v12, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 953
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 954
    new-array v13, v8, [Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 963
    iput-boolean v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    .line 965
    iput v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioPowerState:I

    .line 973
    iput v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiRadioPowerState:I

    .line 986
    iput-boolean v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCharging:Z

    .line 1017
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitStepMode:I

    .line 1018
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    .line 1019
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    .line 1023
    new-instance v13, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v14, 0xc8

    invoke-direct {v13, v14}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1024
    new-instance v13, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v15, 0x190

    invoke-direct {v13, v15}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1029
    new-instance v13, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v13, v14}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1030
    new-instance v13, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v13, v15}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1034
    iput-wide v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyStartTime:J

    .line 1035
    iput-wide v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 1036
    iput-wide v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 1038
    new-instance v13, Ljava/util/ArrayList;

    invoke-direct {v13}, Ljava/util/ArrayList;-><init>()V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    .line 1040
    iput-wide v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWriteTime:J

    .line 1042
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneServiceState:I

    .line 1043
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 1044
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 1048
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 1050
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 1051
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 1065
    new-instance v13, Ljava/util/HashMap;

    invoke-direct {v13}, Ljava/util/HashMap;-><init>()V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    .line 1067
    new-instance v13, Ljava/util/HashMap;

    invoke-direct {v13}, Ljava/util/HashMap;-><init>()V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    .line 1083
    new-instance v13, Ljava/util/HashMap;

    invoke-direct {v13}, Ljava/util/HashMap;-><init>()V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    .line 1090
    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 1091
    iput-wide v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 1092
    new-instance v13, Ljava/util/HashMap;

    invoke-direct {v13}, Ljava/util/HashMap;-><init>()V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    .line 3785
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChangedStates:I

    .line 3786
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChangedStates2:I

    .line 4263
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 5519
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedUid:I

    .line 5520
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedBatteryLevel:I

    .line 5521
    const-wide/16 v13, -0x1

    iput-wide v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedElapsedRealtime:J

    .line 5522
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedBatteryRealtimeCapacity:I

    .line 5523
    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedPackage:Ljava/lang/String;

    .line 5524
    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedClass:Ljava/lang/String;

    .line 5525
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->pausedBatteryLevel:I

    .line 5526
    iput-wide v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->pausedElapsedRealtime:J

    .line 6053
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6083
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanNesting:I

    .line 6123
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastNesting:I

    .line 10947
    new-instance v13, Landroid/util/Pools$SynchronizedPool;

    const/4 v14, 0x6

    invoke-direct {v13, v14}, Landroid/util/Pools$SynchronizedPool;-><init>(I)V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 10949
    new-instance v13, Ljava/lang/Object;

    invoke-direct {v13}, Ljava/lang/Object;-><init>()V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    .line 10951
    sget-object v13, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 10954
    new-instance v13, Landroid/net/NetworkStats;

    invoke-direct {v13, v6, v7, v5}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 10957
    new-instance v13, Ljava/lang/Object;

    invoke-direct {v13}, Ljava/lang/Object;-><init>()V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    .line 10959
    sget-object v13, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 10962
    new-instance v13, Landroid/net/NetworkStats;

    invoke-direct {v13, v6, v7, v5}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    .line 11256
    new-instance v6, Landroid/telephony/ModemActivityInfo;

    new-array v7, v4, [I

    const-wide/16 v15, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v20, 0x0

    move-object v14, v6

    move-object/from16 v19, v7

    invoke-direct/range {v14 .. v20}, Landroid/telephony/ModemActivityInfo;-><init>(JII[II)V

    iput-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11516
    new-instance v6, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-direct {v6, v0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Lcom/android/internal/os/OppoBatteryStatsImpl$1;)V

    iput-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    .line 13572
    new-instance v6, Ljava/util/concurrent/locks/ReentrantLock;

    invoke-direct {v6}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    iput-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    .line 10022
    invoke-direct/range {p0 .. p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->init(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;)V

    .line 10024
    if-nez v1, :cond_0

    .line 10025
    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    .line 10026
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsHistory;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-direct {v2, v0, v6}, Lcom/android/internal/os/OppoBatteryStatsHistory;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Landroid/os/Parcel;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    .line 10027
    const-string v2, "OppoBatteryStatsImpl"

    const-string/jumbo v6, "systemDir IS NULL"

    invoke-static {v2, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 10029
    :cond_0
    new-instance v2, Landroid/util/AtomicFile;

    new-instance v6, Ljava/io/File;

    const-string/jumbo v7, "oppobatterystats.bin"

    invoke-direct {v6, v1, v7}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v2, v6}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    .line 10030
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsHistory;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-direct {v2, v0, v1, v6}, Lcom/android/internal/os/OppoBatteryStatsHistory;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Ljava/io/File;Landroid/os/Parcel;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    .line 10032
    :goto_0
    new-instance v2, Landroid/util/AtomicFile;

    new-instance v6, Ljava/io/File;

    const-string/jumbo v7, "oppobatterystats-checkin.bin"

    invoke-direct {v6, v1, v7}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v2, v6}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCheckinFile:Landroid/util/AtomicFile;

    .line 10033
    new-instance v2, Landroid/util/AtomicFile;

    new-instance v6, Ljava/io/File;

    const-string/jumbo v7, "oppobatterystats-daily.xml"

    invoke-direct {v6, v1, v7}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v2, v6}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    .line 10034
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$MyHandler;

    invoke-virtual/range {p3 .. p3}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v6

    invoke-direct {v2, v0, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$MyHandler;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Landroid/os/Looper;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    .line 10035
    new-instance v6, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    invoke-direct {v6, v0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Landroid/os/Handler;)V

    iput-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    .line 10036
    iget v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartCount:I

    add-int/2addr v2, v3

    iput v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartCount:I

    .line 10037
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v15, 0x0

    const/16 v16, -0x1

    const/16 v17, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v13, v2

    move-object/from16 v18, v6

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10038
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v20, 0x0

    const/16 v21, -0x1

    const/16 v22, 0x0

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object/from16 v18, v2

    move-object/from16 v19, v6

    move-object/from16 v23, v7

    invoke-direct/range {v18 .. v23}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10039
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v8, :cond_1

    .line 10040
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v7, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v15, 0x0

    rsub-int/lit8 v16, v2, -0x64

    const/16 v17, 0x0

    iget-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object/from16 v18, v13

    move-object v13, v7

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v7, v6, v2

    .line 10039
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 10043
    .end local v2    # "i":I
    :cond_1
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v15, 0x0

    const/16 v16, -0xa

    const/16 v17, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v13, v2

    move-object/from16 v18, v6

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10044
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v20, 0x0

    const/16 v21, -0x2

    const/16 v22, 0x0

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object/from16 v18, v2

    move-object/from16 v19, v6

    move-object/from16 v23, v7

    invoke-direct/range {v18 .. v23}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10046
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v16, -0xb

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v13, v2

    move-object/from16 v18, v6

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10048
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v21, -0xe

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object/from16 v18, v2

    move-object/from16 v19, v6

    move-object/from16 v23, v7

    invoke-direct/range {v18 .. v23}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10049
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v16, -0xf

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v13, v2

    move-object/from16 v18, v6

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10050
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v21, -0xc

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object/from16 v18, v2

    move-object/from16 v19, v6

    move-object/from16 v23, v7

    invoke-direct/range {v18 .. v23}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10051
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v16, -0x3

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v13, v2

    move-object/from16 v18, v6

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10052
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_2
    if-ge v2, v8, :cond_2

    .line 10053
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v7, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v15, 0x0

    rsub-int v13, v2, -0xc8

    const/16 v17, 0x0

    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move/from16 v16, v13

    move-object v13, v7

    move-object/from16 v18, v5

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v7, v6, v2

    .line 10052
    add-int/lit8 v2, v2, 0x1

    const/4 v5, -0x1

    goto :goto_2

    .line 10056
    .end local v2    # "i":I
    :cond_2
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v15, 0x0

    const/16 v16, -0xc7

    const/16 v17, 0x0

    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v13, v2

    move-object/from16 v18, v5

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10058
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_3
    sget v5, Lcom/android/internal/os/OppoBatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v2, v5, :cond_3

    .line 10059
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v6, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v15, 0x0

    rsub-int v7, v2, -0x12c

    const/16 v17, 0x0

    iget-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object/from16 v18, v13

    move-object v13, v6

    move/from16 v16, v7

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v6, v5, v2

    .line 10058
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 10062
    .end local v2    # "i":I
    :cond_3
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_4
    if-ge v2, v10, :cond_4

    .line 10063
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    new-instance v6, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v6, v5, v2

    .line 10064
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    new-instance v6, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v6, v5, v2

    .line 10062
    add-int/lit8 v2, v2, 0x1

    goto :goto_4

    .line 10066
    .end local v2    # "i":I
    :cond_4
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v5, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;I)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    .line 10067
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v5, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;I)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    .line 10069
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;I)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    .line 10071
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v15, 0x0

    const/16 v16, -0x190

    const/16 v17, 0x0

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v13, v2

    move-object/from16 v18, v3

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10072
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v22, 0x0

    const/16 v23, -0x191

    const/16 v24, 0x0

    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object/from16 v20, v2

    move-object/from16 v21, v3

    move-object/from16 v25, v5

    invoke-direct/range {v20 .. v25}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10074
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 10075
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 10076
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 10077
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v16, 0x17

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v13, v2

    move-object/from16 v18, v3

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10079
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v23, -0x4

    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object/from16 v20, v2

    move-object/from16 v21, v3

    move-object/from16 v25, v5

    invoke-direct/range {v20 .. v25}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10080
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v16, -0x5

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v13, v2

    move-object/from16 v18, v3

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10081
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_5
    if-ge v2, v11, :cond_5

    .line 10082
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v5, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v15, 0x0

    rsub-int v6, v2, -0x258

    const/16 v17, 0x0

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v13, v5

    move/from16 v16, v6

    move-object/from16 v18, v7

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v5, v3, v2

    .line 10081
    add-int/lit8 v2, v2, 0x1

    goto :goto_5

    .line 10085
    .end local v2    # "i":I
    :cond_5
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_6
    if-ge v2, v12, :cond_6

    .line 10086
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v5, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v15, 0x0

    rsub-int v6, v2, -0x2bc

    const/16 v17, 0x0

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v13, v5

    move/from16 v16, v6

    move-object/from16 v18, v7

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v5, v3, v2

    .line 10085
    add-int/lit8 v2, v2, 0x1

    goto :goto_6

    .line 10089
    .end local v2    # "i":I
    :cond_6
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_7
    if-ge v2, v8, :cond_7

    .line 10090
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v5, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v12, 0x0

    rsub-int v13, v2, -0x320

    const/4 v14, 0x0

    iget-object v15, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v10, v5

    invoke-direct/range {v10 .. v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v5, v3, v2

    .line 10089
    add-int/lit8 v2, v2, 0x1

    goto :goto_7

    .line 10093
    .end local v2    # "i":I
    :cond_7
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v12, 0x0

    const/16 v13, -0x384

    const/4 v14, 0x0

    iget-object v15, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v10, v2

    invoke-direct/range {v10 .. v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10094
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_8
    if-ge v2, v9, :cond_8

    .line 10095
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v5, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v12, 0x0

    rsub-int v13, v2, -0x3e8

    const/4 v14, 0x0

    iget-object v15, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v10, v5

    invoke-direct/range {v10 .. v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v5, v3, v2

    .line 10094
    add-int/lit8 v2, v2, 0x1

    goto :goto_8

    .line 10098
    .end local v2    # "i":I
    :cond_8
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v12, 0x0

    const/4 v13, -0x7

    const/4 v14, 0x0

    iget-object v15, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v10, v2

    invoke-direct/range {v10 .. v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10099
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v7, 0x0

    const/4 v8, -0x8

    const/4 v9, 0x0

    iget-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v5, v2

    invoke-direct/range {v5 .. v10}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10100
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v13, 0x0

    const/16 v14, -0x9

    const/4 v15, 0x0

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v11, v2

    move-object/from16 v16, v3

    invoke-direct/range {v11 .. v16}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10101
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v8, -0xd

    iget-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v5, v2

    invoke-direct/range {v5 .. v10}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10102
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v14, -0xe

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v11, v2

    move-object/from16 v16, v3

    invoke-direct/range {v11 .. v16}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 10103
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 10104
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 10105
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 10106
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 10107
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 10108
    iput-boolean v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    .line 10109
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    const-wide/16 v5, 0x3e8

    mul-long/2addr v2, v5

    .line 10110
    .local v2, "uptime":J
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v7

    mul-long/2addr v7, v5

    .line 10111
    .local v7, "realtime":J
    invoke-virtual {v0, v2, v3, v7, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->initTimes(JJ)V

    .line 10112
    sget-object v5, Landroid/os/Build;->ID:Ljava/lang/String;

    iput-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    iput-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    .line 10113
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStartLevel:I

    .line 10114
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    .line 10115
    const/4 v5, -0x1

    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargePlugLevel:I

    .line 10116
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 10117
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 10118
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->initDischarge()V

    .line 10119
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->clearHistoryLocked()V

    .line 10120
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateDailyDeadlineLocked()V

    .line 10121
    move-object/from16 v4, p4

    iput-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;

    .line 10122
    move-object/from16 v5, p5

    iput-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRailEnergyDataCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;

    .line 10123
    move-object/from16 v6, p6

    iput-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    .line 10124
    return-void
.end method

.method public constructor blacklist <init>(Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;)V
    .locals 7
    .param p1, "systemDir"    # Ljava/io/File;
    .param p2, "handler"    # Landroid/os/Handler;
    .param p3, "cb"    # Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;
    .param p4, "railStatsCb"    # Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;
    .param p5, "userInfoProvider"    # Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    .line 10011
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$SystemClocks;

    invoke-direct {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$SystemClocks;-><init>()V

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;)V

    .line 10012
    return-void
.end method

.method public constructor blacklist <init>(Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;)V
    .locals 7
    .param p1, "systemDir"    # Ljava/io/File;
    .param p2, "handler"    # Landroid/os/Handler;
    .param p3, "userInfoProvider"    # Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    .line 10015
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$SystemClocks;

    invoke-direct {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$SystemClocks;-><init>()V

    const/4 v4, 0x0

    const/4 v5, 0x0

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    move-object v6, p3

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;)V

    .line 10016
    return-void
.end method

.method static synthetic blacklist access$008(Lcom/android/internal/os/OppoBatteryStatsImpl;)I
    .locals 2
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl;

    .line 154
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumUidsRemoved:I

    add-int/lit8 v1, v0, 0x1

    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumUidsRemoved:I

    return v0
.end method

.method static synthetic blacklist access$100(Lcom/android/internal/os/OppoBatteryStatsImpl;)Lcom/android/internal/os/OppoBatteryStatsImpl$BatteryCallback;
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl;

    .line 154
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$BatteryCallback;

    return-object v0
.end method

.method static synthetic blacklist access$1000(Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;Z)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;
    .param p1, "x1"    # Z

    .line 154
    invoke-static {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->resetIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;Z)Z

    move-result v0

    return v0
.end method

.method static synthetic blacklist access$1100([[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 1
    .param p0, "x0"    # [[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;
    .param p1, "x1"    # Z

    .line 154
    invoke-static {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->resetIfNotNull([[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;Z)Z

    move-result v0

    return v0
.end method

.method static synthetic blacklist access$1200(Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    .line 154
    invoke-static {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;)V

    return-void
.end method

.method static synthetic blacklist access$1300([[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V
    .locals 0
    .param p0, "x0"    # [[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;

    .line 154
    invoke-static {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    return-void
.end method

.method static synthetic blacklist access$1600(Lcom/android/internal/os/OppoBatteryStatsImpl;)Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl;

    .line 154
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    return-object v0
.end method

.method static synthetic blacklist access$1702(Lcom/android/internal/os/OppoBatteryStatsImpl;J)J
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl;
    .param p1, "x1"    # J

    .line 154
    iput-wide p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    return-wide p1
.end method

.method static synthetic blacklist access$1708(Lcom/android/internal/os/OppoBatteryStatsImpl;)J
    .locals 4
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl;

    .line 154
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    const-wide/16 v2, 0x1

    add-long/2addr v2, v0

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    return-wide v0
.end method

.method static synthetic blacklist access$1802(Lcom/android/internal/os/OppoBatteryStatsImpl;J)J
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl;
    .param p1, "x1"    # J

    .line 154
    iput-wide p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    return-wide p1
.end method

.method static synthetic blacklist access$1808(Lcom/android/internal/os/OppoBatteryStatsImpl;)J
    .locals 4
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl;

    .line 154
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    const-wide/16 v2, 0x1

    add-long/2addr v2, v0

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    return-wide v0
.end method

.method static synthetic blacklist access$2002(Lcom/android/internal/os/OppoBatteryStatsImpl;Z)Z
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl;
    .param p1, "x1"    # Z

    .line 154
    iput-boolean p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsPerProcessStateCpuDataStale:Z

    return p1
.end method

.method static synthetic blacklist access$2102(Lcom/android/internal/os/OppoBatteryStatsImpl;J)J
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl;
    .param p1, "x1"    # J

    .line 154
    iput-wide p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    return-wide p1
.end method

.method static synthetic blacklist access$2200(Lcom/android/internal/os/OppoBatteryStatsImpl;Landroid/os/Parcel;Landroid/util/AtomicFile;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl;
    .param p1, "x1"    # Landroid/os/Parcel;
    .param p2, "x2"    # Landroid/util/AtomicFile;

    .line 154
    invoke-direct {p0, p1, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->commitPendingDataToDisk(Landroid/os/Parcel;Landroid/util/AtomicFile;)V

    return-void
.end method

.method static synthetic blacklist access$400()I
    .locals 1

    .line 154
    sget v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    return v0
.end method

.method static synthetic blacklist access$500(Lcom/android/internal/os/OppoBatteryStatsImpl;Z)V
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl;
    .param p1, "x1"    # Z

    .line 154
    invoke-direct {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteUsbConnectionStateLocked(Z)V

    return-void
.end method

.method static synthetic blacklist access$600(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;

    .line 154
    invoke-static {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    return-void
.end method

.method static synthetic blacklist access$700([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V
    .locals 0
    .param p0, "x0"    # [Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;

    .line 154
    invoke-static {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    return-void
.end method

.method static synthetic blacklist access$800(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;
    .param p1, "x1"    # Z

    .line 154
    invoke-static {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->resetIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;Z)Z

    move-result v0

    return v0
.end method

.method static synthetic blacklist access$900([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 1
    .param p0, "x0"    # [Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;
    .param p1, "x1"    # Z

    .line 154
    invoke-static {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->resetIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;Z)Z

    move-result v0

    return v0
.end method

.method private blacklist addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "cmd"    # B
    .param p4, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3766
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIteratingHistory:Z

    if-nez v0, :cond_0

    .line 3769
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataPosition()I

    move-result v0

    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 3770
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0, v1}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    .line 3771
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBaseTime:J

    add-long/2addr v1, p1

    invoke-virtual {v0, v1, v2, p3, p4}, Landroid/os/BatteryStats$HistoryItem;->setTo(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3772
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates:I

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3773
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates2:I

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 3774
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, v0, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;Landroid/os/BatteryStats$HistoryItem;)V

    .line 3775
    iput-wide p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 3776
    const/4 v0, 0x0

    iput-object v0, p4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3777
    iput-object v0, p4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3778
    const/4 v1, 0x0

    iput v1, p4, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3779
    iput-object v0, p4, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3783
    return-void

    .line 3767
    :cond_0
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Can\'t do this while iterating history!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private declared-synchronized blacklist addModemTxPowerToHistory(Landroid/telephony/ModemActivityInfo;)V
    .locals 9
    .param p1, "activityInfo"    # Landroid/telephony/ModemActivityInfo;

    monitor-enter p0

    .line 11462
    if-nez p1, :cond_0

    .line 11463
    monitor-exit p0

    return-void

    .line 11465
    :cond_0
    const/4 v0, 0x5

    :try_start_0
    new-array v1, v0, [I

    .line 11466
    .local v1, "txTimeMs":[I
    array-length v2, v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eq v2, v0, :cond_1

    .line 11467
    monitor-exit p0

    return-void

    .line 11469
    :cond_1
    :try_start_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v2

    .line 11470
    .local v2, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v4

    .line 11471
    .local v4, "uptime":J
    const/4 v0, 0x0

    .line 11472
    .local v0, "levelMaxTimeSpent":I
    const/4 v6, 0x1

    .local v6, "i":I
    :goto_0
    array-length v7, v1

    if-ge v6, v7, :cond_3

    .line 11473
    aget v7, v1, v6

    aget v8, v1, v0

    if-le v7, v8, :cond_2

    .line 11474
    move v0, v6

    .line 11472
    :cond_2
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 11477
    .end local v6    # "i":I
    .end local p0    # "this":Lcom/android/internal/os/OppoBatteryStatsImpl;
    :cond_3
    const/4 v6, 0x4

    if-ne v0, v6, :cond_5

    .line 11478
    iget-boolean v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    if-nez v6, :cond_4

    .line 11479
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v8, 0x80000

    or-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 11480
    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 11481
    const/4 v6, 0x1

    iput-boolean v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsCellularTxPowerHigh:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11483
    :cond_4
    monitor-exit p0

    return-void

    .line 11485
    :cond_5
    :try_start_2
    iget-boolean v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    if-eqz v6, :cond_6

    .line 11486
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v8, -0x80001

    and-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 11487
    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 11488
    const/4 v6, 0x0

    iput-boolean v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsCellularTxPowerHigh:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 11490
    :cond_6
    monitor-exit p0

    return-void

    .line 11461
    .end local v0    # "levelMaxTimeSpent":I
    .end local v1    # "txTimeMs":[I
    .end local v2    # "elapsedRealtime":J
    .end local v4    # "uptime":J
    .end local p1    # "activityInfo":Landroid/telephony/ModemActivityInfo;
    :catchall_0
    move-exception p1

    monitor-exit p0

    throw p1
.end method

.method private blacklist addPackageChange(Landroid/os/BatteryStats$PackageChange;)V
    .locals 1
    .param p1, "pc"    # Landroid/os/BatteryStats$PackageChange;

    .line 5137
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-nez v0, :cond_0

    .line 5138
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 5140
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5141
    return-void
.end method

.method private blacklist buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I
    .locals 3
    .param p1, "h"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3408
    iget-byte v0, p1, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    shl-int/lit8 v0, v0, 0x19

    const/high16 v1, -0x2000000

    and-int/2addr v0, v1

    iget-short v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    shl-int/lit8 v1, v1, 0xf

    const v2, 0x1ff8000

    and-int/2addr v1, v2

    or-int/2addr v0, v1

    iget-char v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    shl-int/lit8 v1, v1, 0x1

    and-int/lit16 v1, v1, 0x7ffe

    or-int/2addr v0, v1

    return v0
.end method

.method private blacklist buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I
    .locals 4
    .param p1, "h"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3420
    const/4 v0, 0x0

    .line 3421
    .local v0, "plugType":I
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    and-int/lit8 v1, v1, 0x1

    if-eqz v1, :cond_0

    .line 3422
    const/4 v0, 0x1

    goto :goto_0

    .line 3423
    :cond_0
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    and-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_1

    .line 3424
    const/4 v0, 0x2

    goto :goto_0

    .line 3425
    :cond_1
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    and-int/lit8 v1, v1, 0x4

    if-eqz v1, :cond_2

    .line 3426
    const/4 v0, 0x3

    .line 3428
    :cond_2
    :goto_0
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    and-int/lit8 v1, v1, 0x7

    shl-int/lit8 v1, v1, 0x1d

    iget-byte v2, p1, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    and-int/lit8 v2, v2, 0x7

    shl-int/lit8 v2, v2, 0x1a

    or-int/2addr v1, v2

    and-int/lit8 v2, v0, 0x3

    shl-int/lit8 v2, v2, 0x18

    or-int/2addr v1, v2

    iget v2, p1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, 0xffffff

    and-int/2addr v2, v3

    or-int/2addr v1, v2

    return v1
.end method

.method private blacklist commitPendingDataToDisk(Landroid/os/Parcel;Landroid/util/AtomicFile;)V
    .locals 6
    .param p1, "p"    # Landroid/os/Parcel;
    .param p2, "file"    # Landroid/util/AtomicFile;

    .line 13640
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {v0}, Ljava/util/concurrent/locks/ReentrantLock;->lock()V

    .line 13641
    const/4 v0, 0x0

    .line 13643
    .local v0, "fos":Ljava/io/FileOutputStream;
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 13644
    .local v1, "startTime":J
    invoke-virtual {p2}, Landroid/util/AtomicFile;->startWrite()Ljava/io/FileOutputStream;

    move-result-object v3

    move-object v0, v3

    .line 13645
    invoke-virtual {p1}, Landroid/os/Parcel;->marshall()[B

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/io/FileOutputStream;->write([B)V

    .line 13646
    invoke-virtual {v0}, Ljava/io/FileOutputStream;->flush()V

    .line 13647
    invoke-virtual {p2, v0}, Landroid/util/AtomicFile;->finishWrite(Ljava/io/FileOutputStream;)V

    .line 13653
    const-string/jumbo v3, "oppobatterystats"

    .line 13654
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    sub-long/2addr v4, v1

    .line 13653
    invoke-static {v3, v4, v5}, Lcom/android/internal/logging/EventLogTags;->writeCommitSysConfigFile(Ljava/lang/String;J)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .end local v1    # "startTime":J
    goto :goto_0

    .line 13659
    :catchall_0
    move-exception v1

    goto :goto_1

    .line 13655
    :catch_0
    move-exception v1

    .line 13656
    .local v1, "e":Ljava/io/IOException;
    :try_start_1
    const-string v2, "OppoBatteryStatsImpl"

    const-string v3, "Error writing battery statistics"

    invoke-static {v2, v3, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13657
    invoke-virtual {p2, v0}, Landroid/util/AtomicFile;->failWrite(Ljava/io/FileOutputStream;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13659
    .end local v1    # "e":Ljava/io/IOException;
    :goto_0
    invoke-virtual {p1}, Landroid/os/Parcel;->recycle()V

    .line 13660
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {v1}, Ljava/util/concurrent/locks/ReentrantLock;->unlock()V

    .line 13661
    nop

    .line 13662
    return-void

    .line 13659
    :goto_1
    invoke-virtual {p1}, Landroid/os/Parcel;->recycle()V

    .line 13660
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {v2}, Ljava/util/concurrent/locks/ReentrantLock;->unlock()V

    .line 13661
    throw v1
.end method

.method private blacklist computeHistoryStepDetails(Landroid/os/BatteryStats$HistoryStepDetails;Landroid/os/BatteryStats$HistoryStepDetails;)V
    .locals 9
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryStepDetails;
    .param p2, "last"    # Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3436
    if-eqz p2, :cond_0

    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    goto :goto_0

    :cond_0
    move-object v0, p1

    .line 3440
    .local v0, "tmp":Landroid/os/BatteryStats$HistoryStepDetails;
    :goto_0
    invoke-direct {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->requestImmediateCpuUpdate()V

    .line 3442
    if-nez p2, :cond_2

    .line 3445
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 3446
    .local v1, "NU":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v1, :cond_1

    .line 3447
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 3448
    .local v3, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-wide v4, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCurStepUserTime:J

    iput-wide v4, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mLastStepUserTime:J

    .line 3449
    iget-wide v4, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCurStepSystemTime:J

    iput-wide v4, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mLastStepSystemTime:J

    .line 3446
    .end local v3    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 3451
    .end local v2    # "i":I
    :cond_1
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuUserTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 3452
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepCpuSystemTime:J

    .line 3453
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatUserTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatUserTime:J

    .line 3454
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSystemTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatSystemTime:J

    .line 3455
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIOWaitTime:J

    .line 3456
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIrqTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIrqTime:J

    .line 3457
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    .line 3458
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIdleTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIdleTime:J

    .line 3459
    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryStepDetails;->clear()V

    .line 3460
    return-void

    .line 3472
    .end local v1    # "NU":I
    :cond_2
    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuUserTime:J

    iget-wide v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepCpuUserTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->userTime:I

    .line 3473
    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuSystemTime:J

    iget-wide v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepCpuSystemTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->systemTime:I

    .line 3474
    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatUserTime:J

    iget-wide v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatUserTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statUserTime:I

    .line 3475
    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSystemTime:J

    iget-wide v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatSystemTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statSystemTime:I

    .line 3476
    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iget-wide v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIOWaitTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIOWaitTime:I

    .line 3477
    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIrqTime:J

    iget-wide v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIrqTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIrqTime:I

    .line 3478
    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iget-wide v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statSoftIrqTime:I

    .line 3479
    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIdleTime:J

    iget-wide v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIdleTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIdlTime:I

    .line 3480
    const/4 v1, -0x1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    .line 3481
    const/4 v1, 0x0

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    .line 3482
    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    .line 3483
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 3484
    .restart local v1    # "NU":I
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_2
    if-ge v2, v1, :cond_6

    .line 3485
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 3486
    .restart local v3    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-wide v4, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCurStepUserTime:J

    iget-wide v6, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mLastStepUserTime:J

    sub-long/2addr v4, v6

    long-to-int v4, v4

    .line 3487
    .local v4, "totalUTime":I
    iget-wide v5, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCurStepSystemTime:J

    iget-wide v7, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mLastStepSystemTime:J

    sub-long/2addr v5, v7

    long-to-int v5, v5

    .line 3488
    .local v5, "totalSTime":I
    add-int v6, v4, v5

    .line 3489
    .local v6, "totalTime":I
    iget-wide v7, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCurStepUserTime:J

    iput-wide v7, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mLastStepUserTime:J

    .line 3490
    iget-wide v7, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCurStepSystemTime:J

    iput-wide v7, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mLastStepSystemTime:J

    .line 3491
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    add-int/2addr v7, v8

    if-gt v6, v7, :cond_3

    .line 3492
    goto :goto_3

    .line 3494
    :cond_3
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    add-int/2addr v7, v8

    if-gt v6, v7, :cond_4

    .line 3495
    iget v7, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUid:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    .line 3496
    iput v4, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    .line 3497
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    goto :goto_3

    .line 3499
    :cond_4
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    .line 3500
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    .line 3501
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    .line 3502
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    add-int/2addr v7, v8

    if-gt v6, v7, :cond_5

    .line 3503
    iget v7, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUid:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    .line 3504
    iput v4, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    .line 3505
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    goto :goto_3

    .line 3507
    :cond_5
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    .line 3508
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    .line 3509
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    .line 3510
    iget v7, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUid:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    .line 3511
    iput v4, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    .line 3512
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    .line 3484
    .end local v3    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v4    # "totalUTime":I
    .end local v5    # "totalSTime":I
    .end local v6    # "totalTime":I
    :goto_3
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 3516
    .end local v2    # "i":I
    :cond_6
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuUserTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 3517
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepCpuSystemTime:J

    .line 3518
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatUserTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatUserTime:J

    .line 3519
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSystemTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatSystemTime:J

    .line 3520
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIOWaitTime:J

    .line 3521
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIrqTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIrqTime:J

    .line 3522
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    .line 3523
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIdleTime:J

    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIdleTime:J

    .line 3524
    return-void
.end method

.method private blacklist computeTimePerLevel([JI)J
    .locals 7
    .param p1, "steps"    # [J
    .param p2, "numSteps"    # I

    .line 12850
    if-gtz p2, :cond_0

    .line 12851
    const-wide/16 v0, -0x1

    return-wide v0

    .line 12853
    :cond_0
    const-wide/16 v0, 0x0

    .line 12854
    .local v0, "total":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, p2, :cond_1

    .line 12855
    aget-wide v3, p1, v2

    const-wide v5, 0xffffffffffL

    and-long/2addr v3, v5

    add-long/2addr v0, v3

    .line 12854
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 12857
    .end local v2    # "i":I
    :cond_1
    int-to-long v2, p2

    div-long v2, v0, v2

    return-wide v2
.end method

.method private static blacklist detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;)V
    .locals 0
    .param p0, "counter"    # Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    .line 6755
    if-eqz p0, :cond_0

    .line 6756
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->detach()V

    .line 6758
    :cond_0
    return-void
.end method

.method private static blacklist detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;",
            ">(TT;)V"
        }
    .end annotation

    .line 6733
    .local p0, "t":Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;, "TT;"
    if-eqz p0, :cond_0

    .line 6734
    invoke-interface {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;->detach()V

    .line 6736
    :cond_0
    return-void
.end method

.method private static blacklist detachIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;",
            ">([TT;)V"
        }
    .end annotation

    .line 6739
    .local p0, "t":[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;, "[TT;"
    if-eqz p0, :cond_0

    .line 6740
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    array-length v1, p0

    if-ge v0, v1, :cond_0

    .line 6741
    aget-object v1, p0, v0

    invoke-static {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 6740
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 6744
    .end local v0    # "i":I
    :cond_0
    return-void
.end method

.method private static blacklist detachIfNotNull([[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;",
            ">([[TT;)V"
        }
    .end annotation

    .line 6747
    .local p0, "t":[[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;, "[[TT;"
    if-eqz p0, :cond_0

    .line 6748
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    array-length v1, p0

    if-ge v0, v1, :cond_0

    .line 6749
    aget-object v1, p0, v0

    invoke-static {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 6748
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 6752
    .end local v0    # "i":I
    :cond_0
    return-void
.end method

.method private static blacklist excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
    .locals 4
    .param p0, "array"    # [Ljava/lang/String;
    .param p1, "str"    # Ljava/lang/String;

    .line 6274
    invoke-static {p0, p1}, Lcom/android/internal/util/ArrayUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I

    move-result v0

    .line 6275
    .local v0, "index":I
    if-ltz v0, :cond_2

    .line 6276
    array-length v1, p0

    add-int/lit8 v1, v1, -0x1

    new-array v1, v1, [Ljava/lang/String;

    .line 6277
    .local v1, "newArray":[Ljava/lang/String;
    if-lez v0, :cond_0

    .line 6278
    const/4 v2, 0x0

    invoke-static {p0, v2, v1, v2, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6280
    :cond_0
    array-length v2, p0

    add-int/lit8 v2, v2, -0x1

    if-ge v0, v2, :cond_1

    .line 6281
    add-int/lit8 v2, v0, 0x1

    array-length v3, p0

    sub-int/2addr v3, v0

    add-int/lit8 v3, v3, -0x1

    invoke-static {p0, v2, v1, v0, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6283
    :cond_1
    return-object v1

    .line 6285
    .end local v1    # "newArray":[Ljava/lang/String;
    :cond_2
    return-object p0
.end method

.method private blacklist fixPhoneServiceState(II)I
    .locals 2
    .param p1, "state"    # I
    .param p2, "signalBin"    # I

    .line 5231
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSimStateRaw:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 5234
    if-ne p1, v1, :cond_0

    if-lez p2, :cond_0

    .line 5236
    const/4 p1, 0x0

    .line 5240
    :cond_0
    return p1
.end method

.method private blacklist getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I
    .locals 1
    .param p1, "uid"    # I
    .param p2, "workChain"    # Landroid/os/WorkSource$WorkChain;

    .line 5799
    if-eqz p2, :cond_0

    .line 5800
    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v0

    return v0

    .line 5803
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v0

    return v0
.end method

.method private blacklist getBatteryRealtimeCapacity()I
    .locals 5

    .line 5595
    const/4 v0, 0x0

    .line 5597
    .local v0, "realtimeBatteryCapacity":I
    invoke-direct {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getValidBatteryRealTimeCapcityFile()Ljava/io/File;

    move-result-object v1

    .line 5598
    .local v1, "file":Ljava/io/File;
    if-nez v1, :cond_0

    .line 5599
    return v0

    .line 5601
    :cond_0
    const/4 v2, 0x0

    .line 5604
    .local v2, "reader":Ljava/io/BufferedReader;
    :try_start_0
    new-instance v3, Ljava/io/BufferedReader;

    new-instance v4, Ljava/io/FileReader;

    invoke-direct {v4, v1}, Ljava/io/FileReader;-><init>(Ljava/io/File;)V

    invoke-direct {v3, v4}, Ljava/io/BufferedReader;-><init>(Ljava/io/Reader;)V

    move-object v2, v3

    .line 5606
    :goto_0
    invoke-virtual {v2}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;

    move-result-object v3

    .line 5607
    .local v3, "tempString":Ljava/lang/String;
    if-eqz v3, :cond_2

    .line 5608
    invoke-virtual {v3}, Ljava/lang/String;->length()I

    move-result v4

    if-eqz v4, :cond_1

    .line 5609
    invoke-virtual {v3}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v4
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_3
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_2
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move v0, v4

    .line 5614
    .end local v3    # "tempString":Ljava/lang/String;
    :cond_1
    goto :goto_0

    .line 5625
    :cond_2
    nop

    .line 5627
    :try_start_1
    invoke-virtual {v2}, Ljava/io/BufferedReader;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    .line 5630
    :goto_1
    goto :goto_2

    .line 5628
    :catch_0
    move-exception v3

    .line 5629
    .local v3, "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    .end local v3    # "e":Ljava/io/IOException;
    goto :goto_1

    .line 5625
    :catchall_0
    move-exception v3

    goto :goto_3

    .line 5621
    :catch_1
    move-exception v3

    .line 5622
    .local v3, "e":Ljava/lang/NumberFormatException;
    :try_start_2
    invoke-virtual {v3}, Ljava/lang/NumberFormatException;->printStackTrace()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 5623
    const/4 v0, -0x1

    .line 5625
    .end local v3    # "e":Ljava/lang/NumberFormatException;
    if-eqz v2, :cond_3

    .line 5627
    :try_start_3
    invoke-virtual {v2}, Ljava/io/BufferedReader;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    goto :goto_1

    .line 5618
    :catch_2
    move-exception v3

    .line 5619
    .local v3, "e":Ljava/io/IOException;
    :try_start_4
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 5620
    const/4 v0, -0x1

    .line 5625
    .end local v3    # "e":Ljava/io/IOException;
    if-eqz v2, :cond_3

    .line 5627
    :try_start_5
    invoke-virtual {v2}, Ljava/io/BufferedReader;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_0

    goto :goto_1

    .line 5615
    :catch_3
    move-exception v3

    .line 5616
    .local v3, "e":Ljava/io/FileNotFoundException;
    :try_start_6
    invoke-virtual {v3}, Ljava/io/FileNotFoundException;->printStackTrace()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 5617
    const/4 v0, -0x1

    .line 5625
    .end local v3    # "e":Ljava/io/FileNotFoundException;
    if-eqz v2, :cond_3

    .line 5627
    :try_start_7
    invoke-virtual {v2}, Ljava/io/BufferedReader;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_0

    goto :goto_1

    .line 5633
    :cond_3
    :goto_2
    return v0

    .line 5625
    :goto_3
    if-eqz v2, :cond_4

    .line 5627
    :try_start_8
    invoke-virtual {v2}, Ljava/io/BufferedReader;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_4

    .line 5630
    goto :goto_4

    .line 5628
    :catch_4
    move-exception v4

    .line 5629
    .local v4, "e":Ljava/io/IOException;
    invoke-virtual {v4}, Ljava/io/IOException;->printStackTrace()V

    .line 5632
    .end local v4    # "e":Ljava/io/IOException;
    :cond_4
    :goto_4
    throw v3
.end method

.method private blacklist getDeltaModemActivityInfo(Landroid/telephony/ModemActivityInfo;)Landroid/telephony/ModemActivityInfo;
    .locals 9
    .param p1, "activityInfo"    # Landroid/telephony/ModemActivityInfo;

    .line 11260
    if-nez p1, :cond_0

    .line 11261
    const/4 v0, 0x0

    return-object v0

    .line 11263
    :cond_0
    const/4 v0, 0x5

    new-array v0, v0, [I

    .line 11268
    .local v0, "txTimeMs":[I
    new-instance v8, Landroid/telephony/ModemActivityInfo;

    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getTimestamp()J

    move-result-wide v2

    .line 11269
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v1

    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    invoke-virtual {v4}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v4

    sub-int v4, v1, v4

    .line 11270
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v1

    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    invoke-virtual {v5}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v5

    sub-int v5, v1, v5

    .line 11272
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()I

    move-result v1

    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    invoke-virtual {v6}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()I

    move-result v6

    sub-int v7, v1, v6

    move-object v1, v8

    move-object v6, v0

    invoke-direct/range {v1 .. v7}, Landroid/telephony/ModemActivityInfo;-><init>(JII[II)V

    .line 11274
    .local v1, "deltaInfo":Landroid/telephony/ModemActivityInfo;
    iput-object p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11275
    return-object v1
.end method

.method private blacklist getPowerManagerWakeLockLevel(I)I
    .locals 4
    .param p1, "battertStatsWakelockType"    # I

    .line 4386
    const/4 v0, 0x1

    if-eqz p1, :cond_3

    if-eq p1, v0, :cond_2

    const/4 v0, 0x2

    const/4 v1, -0x1

    const-string v2, "OppoBatteryStatsImpl"

    if-eq p1, v0, :cond_1

    const/16 v0, 0x12

    if-eq p1, v0, :cond_0

    .line 4404
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Illegal wakelock type in oppobatterystats: "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 4405
    return v1

    .line 4396
    :cond_0
    const/16 v0, 0x80

    return v0

    .line 4400
    :cond_1
    const-string v0, "Illegal window wakelock type observed in oppobatterystats."

    invoke-static {v2, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 4401
    return v1

    .line 4393
    :cond_2
    const/16 v0, 0x1a

    return v0

    .line 4389
    :cond_3
    return v0
.end method

.method private blacklist getValidBatteryRealTimeCapcityFile()Ljava/io/File;
    .locals 4

    .line 5582
    new-instance v0, Ljava/io/File;

    const-string v1, "/sys/class/power_supply/battery/batt_rm"

    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 5583
    .local v0, "file":Ljava/io/File;
    new-instance v1, Ljava/io/File;

    const-string v2, "/sys/class/oplus_chg/battery/battery_rm"

    invoke-direct {v1, v2}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 5584
    .local v1, "fileGki":Ljava/io/File;
    invoke-virtual {v0}, Ljava/io/File;->exists()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 5585
    return-object v0

    .line 5586
    :cond_0
    invoke-virtual {v1}, Ljava/io/File;->exists()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 5587
    return-object v1

    .line 5589
    :cond_1
    const-string v2, "OppoBatteryStatsImpl"

    const-string v3, "battery capacity file not exist!"

    invoke-static {v2, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5590
    const/4 v2, 0x0

    return-object v2
.end method

.method private static blacklist includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
    .locals 3
    .param p0, "array"    # [Ljava/lang/String;
    .param p1, "str"    # Ljava/lang/String;

    .line 6264
    invoke-static {p0, p1}, Lcom/android/internal/util/ArrayUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I

    move-result v0

    if-ltz v0, :cond_0

    .line 6265
    return-object p0

    .line 6267
    :cond_0
    array-length v0, p0

    add-int/lit8 v0, v0, 0x1

    new-array v0, v0, [Ljava/lang/String;

    .line 6268
    .local v0, "newArray":[Ljava/lang/String;
    array-length v1, p0

    const/4 v2, 0x0

    invoke-static {p0, v2, v0, v2, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6269
    array-length v1, p0

    aput-object p1, v0, v1

    .line 6270
    return-object v0
.end method

.method private blacklist init(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;)V
    .locals 0
    .param p1, "clocks"    # Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    .line 1157
    iput-object p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    .line 1158
    return-void
.end method

.method private blacklist initActiveHistoryEventsLocked(JJ)V
    .locals 15
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    .line 10879
    move-object v8, p0

    const/4 v0, 0x0

    move v9, v0

    .local v9, "i":I
    :goto_0
    const/16 v0, 0x16

    if-ge v9, v0, :cond_4

    .line 10880
    iget-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_0

    const/4 v0, 0x1

    if-ne v9, v0, :cond_0

    .line 10882
    goto :goto_3

    .line 10884
    :cond_0
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v9}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v10

    .line 10885
    .local v10, "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-nez v10, :cond_1

    .line 10886
    goto :goto_3

    .line 10888
    :cond_1
    invoke-virtual {v10}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v11

    :goto_1
    invoke-interface {v11}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-interface {v11}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    move-object v12, v0

    check-cast v12, Ljava/util/Map$Entry;

    .line 10889
    .local v12, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface {v12}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    move-object v13, v0

    check-cast v13, Landroid/util/SparseIntArray;

    .line 10890
    .local v13, "uids":Landroid/util/SparseIntArray;
    const/4 v0, 0x0

    move v14, v0

    .local v14, "j":I
    :goto_2
    invoke-virtual {v13}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-ge v14, v0, :cond_2

    .line 10891
    invoke-interface {v12}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v0

    move-object v6, v0

    check-cast v6, Ljava/lang/String;

    .line 10892
    invoke-virtual {v13, v14}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v7

    .line 10891
    move-object v0, p0

    move-wide/from16 v1, p1

    move-wide/from16 v3, p3

    move v5, v9

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 10890
    add-int/lit8 v14, v14, 0x1

    goto :goto_2

    .line 10894
    .end local v12    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v13    # "uids":Landroid/util/SparseIntArray;
    .end local v14    # "j":I
    :cond_2
    goto :goto_1

    .line 10879
    .end local v10    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    :cond_3
    :goto_3
    add-int/lit8 v9, v9, 0x1

    goto :goto_0

    .line 10896
    .end local v9    # "i":I
    :cond_4
    return-void
.end method

.method private blacklist initKernelSingleUidTimeReaderLocked()Z
    .locals 3

    .line 623
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    const/4 v1, 0x0

    if-nez v0, :cond_3

    .line 624
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-nez v0, :cond_0

    .line 625
    return v1

    .line 627
    :cond_0
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuFreqs:[J

    if-nez v2, :cond_1

    .line 628
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v2, v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readFreqs(Lcom/android/internal/os/PowerProfile;)[J

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuFreqs:[J

    .line 630
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuFreqs:[J

    if-eqz v0, :cond_2

    .line 631
    new-instance v0, Lcom/android/internal/os/KernelSingleUidTimeReader;

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuFreqs:[J

    array-length v2, v2

    invoke-direct {v0, v2}, Lcom/android/internal/os/KernelSingleUidTimeReader;-><init>(I)V

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    goto :goto_0

    .line 633
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->allUidTimesAvailable()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 634
    return v1

    .line 637
    :cond_3
    :goto_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->allUidTimesAvailable()Z

    move-result v0

    const/4 v2, 0x1

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    .line 638
    invoke-virtual {v0}, Lcom/android/internal/os/KernelSingleUidTimeReader;->singleUidCpuTimesAvailable()Z

    move-result v0

    if-eqz v0, :cond_4

    move v1, v2

    goto :goto_1

    :cond_4
    nop

    :goto_1
    iput-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 639
    return v2
.end method

.method public static blacklist isOnBattery(II)Z
    .locals 3
    .param p0, "plugType"    # I
    .param p1, "status"    # I

    .line 12782
    const/4 v0, 0x0

    const/4 v1, 0x1

    if-nez p0, :cond_0

    if-eq p1, v1, :cond_0

    move v2, v1

    goto :goto_0

    :cond_0
    move v2, v0

    .line 12783
    .local v2, "flage":Z
    :goto_0
    if-nez v2, :cond_1

    move v0, v1

    :cond_1
    return v0
.end method

.method private blacklist noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;I)V
    .locals 19
    .param p1, "historyItem"    # I
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "workSource"    # Landroid/os/WorkSource;
    .param p4, "uid"    # I

    .line 4137
    move-object/from16 v8, p0

    move/from16 v9, p1

    move-object/from16 v10, p2

    move-object/from16 v11, p3

    iget-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_0

    .line 4138
    return-void

    .line 4141
    :cond_0
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v12

    .line 4142
    .local v12, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v14

    .line 4144
    .local v14, "uptime":J
    const/4 v7, 0x0

    if-eqz v11, :cond_6

    .line 4145
    const/4 v0, 0x0

    move v6, v0

    move/from16 v0, p4

    .end local p4    # "uid":I
    .local v0, "uid":I
    .local v6, "i":I
    :goto_0
    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->size()I

    move-result v1

    if-ge v6, v1, :cond_2

    .line 4146
    invoke-virtual {v11, v6}, Landroid/os/WorkSource;->get(I)I

    move-result v1

    invoke-virtual {v8, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 4147
    .end local v0    # "uid":I
    .local v5, "uid":I
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v9, v10, v5, v7}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 4148
    move-object/from16 v0, p0

    move-wide v1, v12

    move-wide v3, v14

    move/from16 v16, v5

    .end local v5    # "uid":I
    .local v16, "uid":I
    move/from16 v5, p1

    move/from16 v17, v6

    .end local v6    # "i":I
    .local v17, "i":I
    move-object/from16 v6, p2

    move v11, v7

    move/from16 v7, v16

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_1

    .line 4147
    .end local v16    # "uid":I
    .end local v17    # "i":I
    .restart local v5    # "uid":I
    .restart local v6    # "i":I
    :cond_1
    move/from16 v16, v5

    move/from16 v17, v6

    move v11, v7

    .line 4145
    .end local v5    # "uid":I
    .end local v6    # "i":I
    .restart local v16    # "uid":I
    .restart local v17    # "i":I
    :goto_1
    add-int/lit8 v6, v17, 0x1

    move v7, v11

    move/from16 v0, v16

    move-object/from16 v11, p3

    .end local v17    # "i":I
    .restart local v6    # "i":I
    goto :goto_0

    .end local v16    # "uid":I
    .restart local v0    # "uid":I
    :cond_2
    move/from16 v17, v6

    move v11, v7

    .line 4152
    .end local v6    # "i":I
    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v7

    .line 4153
    .local v7, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v7, :cond_5

    .line 4154
    const/4 v1, 0x0

    move v6, v1

    .restart local v6    # "i":I
    :goto_2
    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v1

    if-ge v6, v1, :cond_4

    .line 4155
    invoke-interface {v7, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v1}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    invoke-virtual {v8, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 4156
    .end local v0    # "uid":I
    .restart local v5    # "uid":I
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v9, v10, v5, v11}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 4157
    move-object/from16 v0, p0

    move-wide v1, v12

    move-wide v3, v14

    move/from16 v16, v5

    .end local v5    # "uid":I
    .restart local v16    # "uid":I
    move/from16 v5, p1

    move/from16 v17, v6

    .end local v6    # "i":I
    .restart local v17    # "i":I
    move-object/from16 v6, p2

    move-object/from16 v18, v7

    .end local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v18, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    move/from16 v7, v16

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_3

    .line 4156
    .end local v16    # "uid":I
    .end local v17    # "i":I
    .end local v18    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v5    # "uid":I
    .restart local v6    # "i":I
    .restart local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_3
    move/from16 v16, v5

    move/from16 v17, v6

    move-object/from16 v18, v7

    .line 4154
    .end local v5    # "uid":I
    .end local v6    # "i":I
    .end local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v16    # "uid":I
    .restart local v17    # "i":I
    .restart local v18    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :goto_3
    add-int/lit8 v6, v17, 0x1

    move/from16 v0, v16

    move-object/from16 v7, v18

    .end local v17    # "i":I
    .restart local v6    # "i":I
    goto :goto_2

    .end local v16    # "uid":I
    .end local v18    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v0    # "uid":I
    .restart local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_4
    move/from16 v17, v6

    move-object/from16 v18, v7

    .end local v6    # "i":I
    .end local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v17    # "i":I
    .restart local v18    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    goto :goto_4

    .line 4153
    .end local v17    # "i":I
    .end local v18    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_5
    move-object/from16 v18, v7

    .line 4161
    .end local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :goto_4
    goto :goto_6

    .line 4162
    .end local v0    # "uid":I
    .restart local p4    # "uid":I
    :cond_6
    move v11, v7

    move/from16 v0, p4

    invoke-virtual {v8, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v7

    .line 4164
    .end local p4    # "uid":I
    .local v7, "uid":I
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v9, v10, v7, v11}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 4165
    move-object/from16 v0, p0

    move-wide v1, v12

    move-wide v3, v14

    move/from16 v5, p1

    move-object/from16 v6, p2

    move v11, v7

    .end local v7    # "uid":I
    .local v11, "uid":I
    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_5

    .line 4164
    .end local v11    # "uid":I
    .restart local v7    # "uid":I
    :cond_7
    move v11, v7

    .line 4168
    .end local v7    # "uid":I
    .restart local v11    # "uid":I
    :goto_5
    move v0, v11

    .end local v11    # "uid":I
    .restart local v0    # "uid":I
    :goto_6
    return-void
.end method

.method private blacklist noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZ)V
    .locals 7
    .param p1, "workChain"    # Landroid/os/WorkSource$WorkChain;
    .param p2, "uid"    # I
    .param p3, "isUnoptimized"    # Z

    .line 5754
    invoke-direct {p0, p2, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p2

    .line 5755
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5756
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5757
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanNesting:I

    if-nez v4, :cond_0

    .line 5758
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x100000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5761
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5762
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5764
    :cond_0
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanNesting:I

    .line 5765
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteBluetoothScanStartedLocked(JZ)V

    .line 5766
    return-void
.end method

.method private blacklist noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZ)V
    .locals 7
    .param p1, "workChain"    # Landroid/os/WorkSource$WorkChain;
    .param p2, "uid"    # I
    .param p3, "isUnoptimized"    # Z

    .line 5784
    invoke-direct {p0, p2, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p2

    .line 5785
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5786
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5787
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanNesting:I

    .line 5788
    if-nez v4, :cond_0

    .line 5789
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x100001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5792
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5793
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5795
    :cond_0
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteBluetoothScanStoppedLocked(JZ)V

    .line 5796
    return-void
.end method

.method private blacklist noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 15
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4558
    move-object v8, p0

    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4559
    .local v9, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4560
    .local v11, "uptime":J
    if-nez p2, :cond_0

    .line 4561
    move-object/from16 v0, p1

    move-object v13, v0

    .end local p2    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    goto :goto_0

    .line 4560
    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p2    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v13, p2

    .line 4563
    .end local p2    # "historyName":Ljava/lang/String;
    .local v13, "historyName":Ljava/lang/String;
    :goto_0
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4014

    const/4 v2, 0x0

    move/from16 v14, p3

    invoke-virtual {v0, v1, v13, v14, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4565
    return-void

    .line 4567
    :cond_1
    const/16 v5, 0x4014

    move-object v0, p0

    move-wide v1, v9

    move-wide v3, v11

    move-object v6, v13

    move/from16 v7, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4569
    return-void
.end method

.method private blacklist noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 15
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4521
    move-object v8, p0

    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4522
    .local v9, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4523
    .local v11, "uptime":J
    if-nez p2, :cond_0

    .line 4524
    move-object/from16 v0, p1

    move-object v13, v0

    .end local p2    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    goto :goto_0

    .line 4523
    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p2    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v13, p2

    .line 4526
    .end local p2    # "historyName":Ljava/lang/String;
    .local v13, "historyName":Ljava/lang/String;
    :goto_0
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8014

    const/4 v2, 0x0

    move/from16 v14, p3

    invoke-virtual {v0, v1, v13, v14, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4528
    return-void

    .line 4530
    :cond_1
    const v5, 0x8014

    move-object v0, p0

    move-wide v1, v9

    move-wide v3, v11

    move-object v6, v13

    move/from16 v7, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4532
    return-void
.end method

.method private blacklist noteMobileRadioApWakeupLocked(JJI)V
    .locals 8
    .param p1, "elapsedRealtimeMillis"    # J
    .param p3, "uptimeMillis"    # J
    .param p5, "uid"    # I

    .line 4949
    invoke-virtual {p0, p5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p5

    .line 4950
    const/16 v5, 0x13

    const-string v6, ""

    move-object v0, p0

    move-wide v1, p1

    move-wide v3, p3

    move v7, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4952
    invoke-virtual {p0, p5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteMobileRadioApWakeupLocked()V

    .line 4953
    return-void
.end method

.method private blacklist noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "workChain"    # Landroid/os/WorkSource$WorkChain;

    .line 4710
    invoke-direct {p0, p1, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p1

    .line 4711
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4712
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4713
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsNesting:I

    if-nez v4, :cond_0

    .line 4714
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x20000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4717
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4719
    :cond_0
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsNesting:I

    .line 4732
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteStartGps(J)V

    .line 4733
    return-void
.end method

.method private blacklist noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "workChain"    # Landroid/os/WorkSource$WorkChain;

    .line 4736
    invoke-direct {p0, p1, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p1

    .line 4737
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4738
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4739
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsNesting:I

    .line 4740
    if-nez v4, :cond_0

    .line 4741
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x20000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4744
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4745
    const/4 v4, -0x1

    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->stopAllGpsSignalQualityTimersLocked(I)V

    .line 4746
    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 4760
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteStopGps(J)V

    .line 4761
    return-void
.end method

.method private blacklist noteUsbConnectionStateLocked(Z)V
    .locals 5
    .param p1, "connected"    # Z

    .line 5206
    if-eqz p1, :cond_0

    const/4 v0, 0x2

    goto :goto_0

    :cond_0
    const/4 v0, 0x1

    .line 5207
    .local v0, "newState":I
    :goto_0
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUsbDataState:I

    if-eq v1, v0, :cond_2

    .line 5208
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUsbDataState:I

    .line 5209
    if-eqz p1, :cond_1

    .line 5210
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v3, 0x40000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    goto :goto_1

    .line 5212
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v3, -0x40001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5214
    :goto_1
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5216
    :cond_2
    return-void
.end method

.method private blacklist noteWifiRadioApWakeupLocked(JJI)V
    .locals 8
    .param p1, "elapsedRealtimeMillis"    # J
    .param p3, "uptimeMillis"    # J
    .param p5, "uid"    # I

    .line 5856
    invoke-virtual {p0, p5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p5

    .line 5857
    const/16 v5, 0x13

    const-string v6, ""

    move-object v0, p0

    move-wide v1, p1

    move-wide v3, p3

    move v7, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5859
    invoke-virtual {p0, p5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiRadioApWakeupLocked()V

    .line 5860
    return-void
.end method

.method private blacklist readBatteryLevelInt(ILandroid/os/BatteryStats$HistoryItem;)V
    .locals 1
    .param p1, "batteryLevelInt"    # I
    .param p2, "out"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3414
    const/high16 v0, -0x2000000

    and-int/2addr v0, p1

    ushr-int/lit8 v0, v0, 0x19

    int-to-byte v0, v0

    iput-byte v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 3415
    const v0, 0x1ff8000

    and-int/2addr v0, p1

    ushr-int/lit8 v0, v0, 0xf

    int-to-short v0, v0

    iput-short v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    .line 3416
    and-int/lit16 v0, p1, 0x7ffe

    ushr-int/lit8 v0, v0, 0x1

    int-to-char v0, v0

    iput-char v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    .line 3417
    return-void
.end method

.method private blacklist readDailyItemsLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    .locals 8
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;

    .line 10348
    const-string v0, "Failed parsing daily "

    const-string v1, "OppoBatteryStatsImpl"

    :goto_0
    :try_start_0
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v2

    move v3, v2

    .local v3, "type":I
    const/4 v4, 0x1

    const/4 v5, 0x2

    if-eq v2, v5, :cond_0

    if-eq v3, v4, :cond_0

    goto :goto_0

    .line 10353
    :cond_0
    if-ne v3, v5, :cond_5

    .line 10357
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v2

    .line 10358
    .local v2, "outerDepth":I
    :cond_1
    :goto_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v5

    move v3, v5

    if-eq v5, v4, :cond_6

    const/4 v5, 0x3

    if-ne v3, v5, :cond_2

    .line 10359
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v6

    if-le v6, v2, :cond_6

    .line 10360
    :cond_2
    if-eq v3, v5, :cond_1

    const/4 v5, 0x4

    if-ne v3, v5, :cond_3

    .line 10361
    goto :goto_1

    .line 10364
    :cond_3
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v5

    .line 10365
    .local v5, "tagName":Ljava/lang/String;
    const-string v6, "item"

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    .line 10366
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readDailyItemTagLocked(Lorg/xmlpull/v1/XmlPullParser;)V

    goto :goto_2

    .line 10368
    :cond_4
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Unknown element under <daily-items>: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10369
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 10368
    invoke-static {v1, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10370
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10372
    .end local v5    # "tagName":Ljava/lang/String;
    :goto_2
    goto :goto_1

    .line 10354
    .end local v2    # "outerDepth":I
    :cond_5
    new-instance v2, Ljava/lang/IllegalStateException;

    const-string/jumbo v4, "no start tag found"

    invoke-direct {v2, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/internal/os/OppoBatteryStatsImpl;
    .end local p1    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    throw v2
    :try_end_0
    .catch Ljava/lang/IllegalStateException; {:try_start_0 .. :try_end_0} :catch_5
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_4
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_3
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_0 .. :try_end_0} :catch_2
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10384
    .end local v3    # "type":I
    .restart local p0    # "this":Lcom/android/internal/os/OppoBatteryStatsImpl;
    .restart local p1    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    :catch_0
    move-exception v2

    .line 10385
    .local v2, "e":Ljava/lang/IndexOutOfBoundsException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 10382
    .end local v2    # "e":Ljava/lang/IndexOutOfBoundsException;
    :catch_1
    move-exception v2

    .line 10383
    .local v2, "e":Ljava/io/IOException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v2    # "e":Ljava/io/IOException;
    goto :goto_3

    .line 10380
    :catch_2
    move-exception v2

    .line 10381
    .local v2, "e":Lorg/xmlpull/v1/XmlPullParserException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v2    # "e":Lorg/xmlpull/v1/XmlPullParserException;
    goto :goto_3

    .line 10378
    :catch_3
    move-exception v2

    .line 10379
    .local v2, "e":Ljava/lang/NumberFormatException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v2    # "e":Ljava/lang/NumberFormatException;
    goto :goto_3

    .line 10376
    :catch_4
    move-exception v2

    .line 10377
    .local v2, "e":Ljava/lang/NullPointerException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v2    # "e":Ljava/lang/NullPointerException;
    goto :goto_3

    .line 10374
    :catch_5
    move-exception v2

    .line 10375
    .local v2, "e":Ljava/lang/IllegalStateException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10386
    .end local v2    # "e":Ljava/lang/IllegalStateException;
    :cond_6
    :goto_3
    nop

    .line 10387
    :goto_4
    return-void
.end method

.method private blacklist readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V
    .locals 2
    .param p1, "index"    # I
    .param p2, "tag"    # Landroid/os/BatteryStats$HistoryTag;

    .line 3135
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    array-length v1, v0

    if-ge p1, v1, :cond_0

    .line 3136
    aget-object v0, v0, p1

    iput-object v0, p2, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 3137
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryUids:[I

    aget v0, v0, p1

    iput v0, p2, Landroid/os/BatteryStats$HistoryTag;->uid:I

    goto :goto_0

    .line 3139
    :cond_0
    const/4 v0, 0x0

    iput-object v0, p2, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 3140
    const/4 v0, 0x0

    iput v0, p2, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 3142
    :goto_0
    iput p1, p2, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    .line 3143
    return-void
.end method

.method private blacklist readNetworkStatsLocked([Ljava/lang/String;)Landroid/net/NetworkStats;
    .locals 4
    .param p1, "ifaces"    # [Ljava/lang/String;

    .line 10967
    const-string v0, "OppoBatteryStatsImpl"

    :try_start_0
    invoke-static {p1}, Lcom/android/internal/util/ArrayUtils;->isEmpty([Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1

    .line 10968
    const-string/jumbo v1, "netstats"

    .line 10969
    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v1

    .line 10968
    invoke-static {v1}, Landroid/net/INetworkStatsService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/INetworkStatsService;

    move-result-object v1

    .line 10970
    .local v1, "statsService":Landroid/net/INetworkStatsService;
    if-eqz v1, :cond_0

    .line 10971
    invoke-interface {v1, p1}, Landroid/net/INetworkStatsService;->getDetailedUidStats([Ljava/lang/String;)Landroid/net/NetworkStats;

    move-result-object v0

    return-object v0

    .line 10973
    :cond_0
    const-string v2, "Failed to get networkStatsService "

    invoke-static {v0, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10978
    .end local v1    # "statsService":Landroid/net/INetworkStatsService;
    :cond_1
    goto :goto_0

    .line 10976
    :catch_0
    move-exception v1

    .line 10977
    .local v1, "e":Landroid/os/RemoteException;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "failed to read network stats for ifaces: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p1}, Ljava/util/Arrays;->toString([Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10979
    .end local v1    # "e":Landroid/os/RemoteException;
    :goto_0
    const/4 v0, 0x0

    return-object v0
.end method

.method private blacklist recordCurrentTimeChangeLocked(JJJ)V
    .locals 3
    .param p1, "currentTime"    # J
    .param p3, "elapsedRealtimeMs"    # J
    .param p5, "uptimeMs"    # J

    .line 12538
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    if-eqz v0, :cond_0

    .line 12539
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput-wide p1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12540
    const/4 v0, 0x5

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {p0, p3, p4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 12541
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    const-wide/16 v1, 0x0

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12543
    :cond_0
    return-void
.end method

.method private blacklist recordShutdownLocked(JJ)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    .line 12546
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    if-eqz v0, :cond_0

    .line 12547
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12548
    const/16 v0, 0x8

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 12549
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    const-wide/16 v1, 0x0

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12551
    :cond_0
    return-void
.end method

.method private blacklist registerUsbStateReceiver(Landroid/content/Context;)V
    .locals 4
    .param p1, "context"    # Landroid/content/Context;

    .line 5184
    new-instance v0, Landroid/content/IntentFilter;

    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V

    .line 5185
    .local v0, "usbStateFilter":Landroid/content/IntentFilter;
    const-string v1, "android.hardware.usb.action.USB_STATE"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 5186
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$2;

    invoke-direct {v1, p0}, Lcom/android/internal/os/OppoBatteryStatsImpl$2;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;)V

    invoke-virtual {p1, v1, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 5195
    monitor-enter p0

    .line 5196
    :try_start_0
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUsbDataState:I

    if-nez v1, :cond_1

    .line 5197
    const/4 v1, 0x0

    invoke-virtual {p1, v1, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    move-result-object v1

    .line 5198
    .local v1, "usbState":Landroid/content/Intent;
    const/4 v2, 0x0

    if-eqz v1, :cond_0

    const-string v3, "connected"

    invoke-virtual {v1, v3, v2}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v3

    if-eqz v3, :cond_0

    const/4 v2, 0x1

    .line 5200
    .local v2, "initState":Z
    :cond_0
    invoke-direct {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteUsbConnectionStateLocked(Z)V

    .line 5202
    .end local v1    # "usbState":Landroid/content/Intent;
    .end local v2    # "initState":Z
    :cond_1
    monitor-exit p0

    .line 5203
    return-void

    .line 5202
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method private blacklist reportChangesToStatsLog(Landroid/os/BatteryStats$HistoryItem;III)V
    .locals 0
    .param p1, "recentPast"    # Landroid/os/BatteryStats$HistoryItem;
    .param p2, "status"    # I
    .param p3, "plugType"    # I
    .param p4, "level"    # I

    .line 12802
    return-void
.end method

.method private blacklist requestImmediateCpuUpdate()V
    .locals 3

    .line 4209
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    const-wide/16 v1, 0x0

    invoke-interface {v0, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToWakelockChange(J)Ljava/util/concurrent/Future;

    .line 4210
    return-void
.end method

.method private blacklist requestWakelockCpuUpdate()V
    .locals 3

    .line 4205
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    const-wide/16 v1, 0x1388

    invoke-interface {v0, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToWakelockChange(J)Ljava/util/concurrent/Future;

    .line 4206
    return-void
.end method

.method private blacklist resetAllStatsLocked()V
    .locals 15

    .line 10742
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 10743
    .local v0, "uptimeMillis":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v2

    .line 10744
    .local v2, "elapsedRealtimeMillis":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartCount:I

    .line 10745
    const-wide/16 v5, 0x3e8

    mul-long v7, v0, v5

    mul-long v9, v2, v5

    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->initTimes(JJ)V

    .line 10746
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10747
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10748
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_0
    const/4 v8, 0x5

    if-ge v7, v8, :cond_0

    .line 10749
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v8, v8, v7

    invoke-virtual {v8, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10748
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 10752
    .end local v7    # "i":I
    :cond_0
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const/4 v9, -0x1

    if-eqz v7, :cond_1

    .line 10753
    invoke-virtual {v7}, Lcom/android/internal/os/PowerProfile;->getBatteryCapacity()D

    move-result-wide v10

    double-to-int v7, v10

    iput v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    goto :goto_1

    .line 10755
    :cond_1
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 10757
    :goto_1
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 10758
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 10759
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10760
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10761
    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastIdleTimeStart:J

    .line 10762
    const-wide/16 v9, 0x0

    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestLightIdleTime:J

    .line 10763
    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestFullIdleTime:J

    .line 10764
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10765
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10766
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10767
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10768
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10769
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10770
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10771
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10772
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10773
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10774
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_2
    if-ge v7, v8, :cond_2

    .line 10775
    iget-object v11, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10774
    add-int/lit8 v7, v7, 0x1

    goto :goto_2

    .line 10777
    .end local v7    # "i":I
    :cond_2
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10778
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_3
    sget v11, Lcom/android/internal/os/OppoBatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v7, v11, :cond_3

    .line 10779
    iget-object v11, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10778
    add-int/lit8 v7, v7, 0x1

    goto :goto_3

    .line 10781
    .end local v7    # "i":I
    :cond_3
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_4
    const/16 v11, 0xa

    if-ge v7, v11, :cond_4

    .line 10782
    iget-object v11, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10783
    iget-object v11, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10781
    add-int/lit8 v7, v7, 0x1

    goto :goto_4

    .line 10785
    .end local v7    # "i":I
    :cond_4
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10786
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10787
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10788
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10789
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10790
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10791
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10792
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_5
    const/16 v11, 0x8

    if-ge v7, v11, :cond_5

    .line 10793
    iget-object v11, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10792
    add-int/lit8 v7, v7, 0x1

    goto :goto_5

    .line 10795
    .end local v7    # "i":I
    :cond_5
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_6
    const/16 v11, 0xd

    if-ge v7, v11, :cond_6

    .line 10796
    iget-object v11, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10795
    add-int/lit8 v7, v7, 0x1

    goto :goto_6

    .line 10798
    .end local v7    # "i":I
    :cond_6
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_7
    if-ge v7, v8, :cond_7

    .line 10799
    iget-object v11, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10798
    add-int/lit8 v7, v7, 0x1

    goto :goto_7

    .line 10801
    .end local v7    # "i":I
    :cond_7
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10802
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10803
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    .line 10804
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_8
    const/4 v8, 0x2

    if-ge v7, v8, :cond_8

    .line 10805
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v8, v8, v7

    invoke-virtual {v8, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10804
    add-int/lit8 v7, v7, 0x1

    goto :goto_8

    .line 10807
    .end local v7    # "i":I
    :cond_8
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    .line 10808
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    .line 10809
    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumConnectivityChange:I

    .line 10811
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_9
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v8

    if-ge v7, v8, :cond_a

    .line 10812
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8, v7}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    mul-long v11, v0, v5

    mul-long v13, v2, v5

    invoke-virtual {v8, v11, v12, v13, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->reset(JJ)Z

    move-result v8

    if-eqz v8, :cond_9

    .line 10813
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8, v7}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    invoke-virtual {v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->detachFromTimeBase()V

    .line 10814
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8, v7}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v11

    invoke-virtual {v8, v11}, Landroid/util/SparseArray;->remove(I)V

    .line 10815
    add-int/lit8 v7, v7, -0x1

    .line 10811
    :cond_9
    add-int/lit8 v7, v7, 0x1

    goto :goto_9

    .line 10819
    .end local v7    # "i":I
    :cond_a
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_c

    .line 10820
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_a
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_b

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 10821
    .local v6, "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 10822
    .end local v6    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    goto :goto_a

    .line 10823
    :cond_b
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10825
    :cond_c
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_e

    .line 10826
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_b
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_d

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 10827
    .restart local v6    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 10828
    .end local v6    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    goto :goto_b

    .line 10829
    :cond_d
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10832
    :cond_e
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_10

    .line 10833
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_c
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_f

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 10834
    .restart local v6    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 10835
    .end local v6    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    goto :goto_c

    .line 10836
    :cond_f
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10839
    :cond_10
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v5}, Landroid/util/LongSparseArray;->size()I

    move-result v5

    if-lez v5, :cond_12

    .line 10840
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_d
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v6}, Landroid/util/LongSparseArray;->size()I

    move-result v6

    if-ge v5, v6, :cond_11

    .line 10841
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v7, v5}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;

    invoke-virtual {v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 10840
    add-int/lit8 v5, v5, 0x1

    goto :goto_d

    .line 10843
    .end local v5    # "i":I
    :cond_11
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v5}, Landroid/util/LongSparseArray;->clear()V

    .line 10846
    :cond_12
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_14

    .line 10847
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_e
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_13

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 10848
    .restart local v6    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 10849
    .end local v6    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    goto :goto_e

    .line 10850
    :cond_13
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10853
    :cond_14
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v5}, Lcom/android/internal/os/RailStats;->reset()V

    .line 10855
    const/4 v5, 0x0

    iput-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 10856
    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepCpuSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 10857
    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuUserTime:J

    .line 10858
    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuUserTime:J

    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 10859
    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepCpuSystemTime:J

    .line 10860
    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatUserTime:J

    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatUserTime:J

    .line 10861
    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatSystemTime:J

    .line 10862
    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIOWaitTime:J

    .line 10863
    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIrqTime:J

    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIrqTime:J

    .line 10864
    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    .line 10865
    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIdleTime:J

    iput-wide v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastStepStatIdleTime:J

    .line 10867
    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 10868
    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumUidsRemoved:I

    .line 10870
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->initDischarge()V

    .line 10872
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->clearHistoryLocked()V

    .line 10873
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v4}, Lcom/android/internal/os/OppoBatteryStatsHistory;->resetAllFiles()V

    .line 10875
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v5, 0x4

    invoke-virtual {v4, v5}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 10876
    return-void
.end method

.method private static blacklist resetIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;Z)Z
    .locals 1
    .param p0, "counter"    # Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;
    .param p1, "detachIfReset"    # Z

    .line 6726
    if-eqz p0, :cond_0

    .line 6727
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    .line 6729
    :cond_0
    const/4 v0, 0x1

    return v0
.end method

.method private static blacklist resetIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 1
    .param p1, "detachIfReset"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;",
            ">(TT;Z)Z"
        }
    .end annotation

    .line 6696
    .local p0, "t":Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;, "TT;"
    if-eqz p0, :cond_0

    .line 6697
    invoke-interface {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;->reset(Z)Z

    move-result v0

    return v0

    .line 6699
    :cond_0
    const/4 v0, 0x1

    return v0
.end method

.method private static blacklist resetIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 3
    .param p1, "detachIfReset"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;",
            ">([TT;Z)Z"
        }
    .end annotation

    .line 6703
    .local p0, "t":[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;, "[TT;"
    if-eqz p0, :cond_1

    .line 6704
    const/4 v0, 0x1

    .line 6705
    .local v0, "ret":Z
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    array-length v2, p0

    if-ge v1, v2, :cond_0

    .line 6706
    aget-object v2, p0, v1

    invoke-static {v2, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->resetIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;Z)Z

    move-result v2

    and-int/2addr v0, v2

    .line 6705
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6708
    .end local v1    # "i":I
    :cond_0
    return v0

    .line 6710
    .end local v0    # "ret":Z
    :cond_1
    const/4 v0, 0x1

    return v0
.end method

.method private static blacklist resetIfNotNull([[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 3
    .param p1, "detachIfReset"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;",
            ">([[TT;Z)Z"
        }
    .end annotation

    .line 6714
    .local p0, "t":[[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;, "[[TT;"
    if-eqz p0, :cond_1

    .line 6715
    const/4 v0, 0x1

    .line 6716
    .local v0, "ret":Z
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    array-length v2, p0

    if-ge v1, v2, :cond_0

    .line 6717
    aget-object v2, p0, v1

    invoke-static {v2, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->resetIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;Z)Z

    move-result v2

    and-int/2addr v0, v2

    .line 6716
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6719
    .end local v1    # "i":I
    :cond_0
    return v0

    .line 6721
    .end local v0    # "ret":Z
    :cond_1
    const/4 v0, 0x1

    return v0
.end method

.method private blacklist scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V
    .locals 1
    .param p1, "reason"    # Ljava/lang/String;
    .param p2, "updateFlags"    # I

    .line 12554
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    if-eqz v0, :cond_0

    .line 12555
    invoke-interface {v0, p1, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;->scheduleSync(Ljava/lang/String;I)Ljava/util/concurrent/Future;

    .line 12557
    :cond_0
    return-void
.end method

.method private blacklist startRecordingHistory(JJZ)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "reset"    # Z

    .line 12525
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    .line 12526
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12527
    nop

    .line 12528
    if-eqz p5, :cond_0

    const/4 v0, 0x7

    goto :goto_0

    :cond_0
    const/4 v0, 0x5

    :goto_0
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 12527
    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 12530
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    const-wide/16 v1, 0x0

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12531
    if-eqz p5, :cond_1

    .line 12532
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->initActiveHistoryEventsLocked(JJ)V

    .line 12534
    :cond_1
    return-void
.end method

.method private blacklist updateAllPhoneStateLocked(III)V
    .locals 9
    .param p1, "state"    # I
    .param p2, "simState"    # I
    .param p3, "strengthBin"    # I

    .line 5244
    const/4 v0, 0x0

    .line 5245
    .local v0, "scanning":Z
    const/4 v1, 0x0

    .line 5247
    .local v1, "newHistory":Z
    iput p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 5248
    iput p2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 5249
    iput p3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 5251
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v2

    .line 5252
    .local v2, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v4

    .line 5254
    .local v4, "uptime":J
    const/4 v6, 0x1

    if-ne p2, v6, :cond_0

    .line 5257
    if-ne p1, v6, :cond_0

    if-lez p3, :cond_0

    .line 5259
    const/4 p1, 0x0

    .line 5264
    :cond_0
    const/4 v7, 0x3

    if-ne p1, v7, :cond_1

    .line 5265
    const/4 p3, -0x1

    goto :goto_0

    .line 5268
    :cond_1
    if-nez p1, :cond_2

    goto :goto_0

    .line 5273
    :cond_2
    if-ne p1, v6, :cond_3

    .line 5274
    const/4 v0, 0x1

    .line 5275
    const/4 p3, 0x0

    .line 5276
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v6

    if-nez v6, :cond_3

    .line 5277
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v8, 0x200000

    or-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5278
    const/4 v1, 0x1

    .line 5281
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5289
    :cond_3
    :goto_0
    if-nez v0, :cond_4

    .line 5291
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v6

    if-eqz v6, :cond_4

    .line 5292
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v8, -0x200001

    and-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5295
    const/4 v1, 0x1

    .line 5296
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5304
    :cond_4
    iget v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneServiceState:I

    if-eq v6, p1, :cond_5

    .line 5305
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit16 v7, v7, -0x1c1

    shl-int/lit8 v8, p1, 0x6

    or-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5309
    const/4 v1, 0x1

    .line 5310
    iput p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneServiceState:I

    .line 5313
    :cond_5
    iget v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthBin:I

    if-eq v6, p3, :cond_9

    .line 5314
    if-ltz v6, :cond_6

    .line 5315
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v6, v7, v6

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5318
    :cond_6
    if-ltz p3, :cond_8

    .line 5319
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, p3

    invoke-virtual {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v6

    if-nez v6, :cond_7

    .line 5320
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, p3

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5322
    :cond_7
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit8 v7, v7, -0x39

    shl-int/lit8 v8, p3, 0x3

    or-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5326
    const/4 v1, 0x1

    goto :goto_1

    .line 5332
    :cond_8
    const/4 v6, -0x1

    invoke-virtual {p0, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->stopAllPhoneSignalStrengthTimersLocked(I)V

    .line 5334
    :goto_1
    iput p3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 5336
    :cond_9
    if-eqz v1, :cond_a

    .line 5337
    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5339
    :cond_a
    return-void
.end method

.method private blacklist updateBatteryPropertiesLocked()V
    .locals 1

    .line 3954
    :try_start_0
    const-string v0, "batteryproperties"

    .line 3955
    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 3954
    invoke-static {v0}, Landroid/os/IBatteryPropertiesRegistrar$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IBatteryPropertiesRegistrar;

    move-result-object v0

    .line 3956
    .local v0, "registrar":Landroid/os/IBatteryPropertiesRegistrar;
    if-eqz v0, :cond_0

    .line 3957
    invoke-interface {v0}, Landroid/os/IBatteryPropertiesRegistrar;->scheduleUpdate()V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 3961
    .end local v0    # "registrar":Landroid/os/IBatteryPropertiesRegistrar;
    :cond_0
    goto :goto_0

    .line 3959
    :catch_0
    move-exception v0

    .line 3962
    :goto_0
    return-void
.end method

.method private blacklist updateNewDischargeScreenLevelLocked(I)V
    .locals 2
    .param p1, "state"    # I

    .line 10926
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 10927
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10928
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 10929
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    goto :goto_0

    .line 10930
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenDoze(I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 10931
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10932
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10933
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_0

    .line 10934
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOff(I)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 10935
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10936
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10937
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 10939
    :cond_2
    :goto_0
    return-void
.end method

.method private blacklist updateOldDischargeScreenLevelLocked(I)V
    .locals 2
    .param p1, "state"    # I

    .line 10904
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 10905
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v0, v1

    .line 10906
    .local v0, "diff":I
    if-lez v0, :cond_0

    .line 10907
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOn:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 10908
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 10910
    .end local v0    # "diff":I
    :cond_0
    goto :goto_1

    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenDoze(I)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 10911
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v0, v1

    .line 10912
    .restart local v0    # "diff":I
    if-lez v0, :cond_3

    .line 10913
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDoze:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 10914
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    goto :goto_0

    .line 10916
    .end local v0    # "diff":I
    :cond_2
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOff(I)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 10917
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v0, v1

    .line 10918
    .restart local v0    # "diff":I
    if-lez v0, :cond_4

    .line 10919
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOff:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 10920
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    goto :goto_1

    .line 10916
    .end local v0    # "diff":I
    :cond_3
    :goto_0
    nop

    .line 10923
    :cond_4
    :goto_1
    return-void
.end method

.method private blacklist writeDailyItemsLocked(Lorg/xmlpull/v1/XmlSerializer;)V
    .locals 11
    .param p1, "out"    # Lorg/xmlpull/v1/XmlSerializer;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 10276
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v1, 0x40

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 10277
    .local v0, "sb":Ljava/lang/StringBuilder;
    const/4 v1, 0x1

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v1

    const/4 v2, 0x0

    invoke-interface {p1, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V

    .line 10278
    const-string v1, "daily-items"

    invoke-interface {p1, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10279
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_0
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v3, v4, :cond_2

    .line 10280
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/os/BatteryStats$DailyItem;

    .line 10281
    .local v4, "dit":Landroid/os/BatteryStats$DailyItem;
    const-string v5, "item"

    invoke-interface {p1, v2, v5}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10282
    iget-wide v6, v4, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v6

    const-string/jumbo v7, "start"

    invoke-interface {p1, v2, v7, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10283
    iget-wide v6, v4, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v6

    const-string v7, "end"

    invoke-interface {p1, v2, v7, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10284
    iget-object v6, v4, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    const-string v7, "dis"

    invoke-direct {p0, p1, v7, v6, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V

    .line 10285
    iget-object v6, v4, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    const-string v7, "chg"

    invoke-direct {p0, p1, v7, v6, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V

    .line 10286
    iget-object v6, v4, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-eqz v6, :cond_1

    .line 10287
    const/4 v6, 0x0

    .local v6, "j":I
    :goto_1
    iget-object v7, v4, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v7

    if-ge v6, v7, :cond_1

    .line 10288
    iget-object v7, v4, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/os/BatteryStats$PackageChange;

    .line 10289
    .local v7, "pc":Landroid/os/BatteryStats$PackageChange;
    iget-boolean v8, v7, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    const-string/jumbo v9, "pkg"

    if-eqz v8, :cond_0

    .line 10290
    const-string/jumbo v8, "upd"

    invoke-interface {p1, v2, v8}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10291
    iget-object v10, v7, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-interface {p1, v2, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10292
    iget-wide v9, v7, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    invoke-static {v9, v10}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v9

    const-string/jumbo v10, "ver"

    invoke-interface {p1, v2, v10, v9}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10293
    invoke-interface {p1, v2, v8}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    goto :goto_2

    .line 10295
    :cond_0
    const-string/jumbo v8, "rem"

    invoke-interface {p1, v2, v8}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10296
    iget-object v10, v7, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-interface {p1, v2, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10297
    invoke-interface {p1, v2, v8}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10287
    .end local v7    # "pc":Landroid/os/BatteryStats$PackageChange;
    :goto_2
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 10301
    .end local v6    # "j":I
    :cond_1
    invoke-interface {p1, v2, v5}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10279
    .end local v4    # "dit":Landroid/os/BatteryStats$DailyItem;
    add-int/lit8 v3, v3, 0x1

    goto/16 :goto_0

    .line 10303
    .end local v3    # "i":I
    :cond_2
    invoke-interface {p1, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10304
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlSerializer;->endDocument()V

    .line 10305
    return-void
.end method

.method private blacklist writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V
    .locals 5
    .param p1, "out"    # Lorg/xmlpull/v1/XmlSerializer;
    .param p2, "tag"    # Ljava/lang/String;
    .param p3, "steps"    # Landroid/os/BatteryStats$LevelStepTracker;
    .param p4, "tmpBuilder"    # Ljava/lang/StringBuilder;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 10309
    if-eqz p3, :cond_1

    .line 10310
    const/4 v0, 0x0

    invoke-interface {p1, v0, p2}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10311
    iget v1, p3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v1

    const-string/jumbo v2, "n"

    invoke-interface {p1, v0, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10312
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    iget v2, p3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    if-ge v1, v2, :cond_0

    .line 10313
    const-string/jumbo v2, "s"

    invoke-interface {p1, v0, v2}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10314
    const/4 v3, 0x0

    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 10315
    invoke-virtual {p3, v1, p4}, Landroid/os/BatteryStats$LevelStepTracker;->encodeEntryAt(ILjava/lang/StringBuilder;)V

    .line 10316
    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string/jumbo v4, "v"

    invoke-interface {p1, v0, v4, v3}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10317
    invoke-interface {p1, v0, v2}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10312
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 10319
    .end local v1    # "i":I
    :cond_0
    invoke-interface {p1, v0, p2}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10321
    :cond_1
    return-void
.end method

.method private blacklist writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I
    .locals 5
    .param p1, "tag"    # Landroid/os/BatteryStats$HistoryTag;

    .line 3118
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Integer;

    .line 3120
    .local v0, "idxObj":Ljava/lang/Integer;
    if-eqz v0, :cond_0

    .line 3121
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v1

    .local v1, "idx":I
    goto :goto_0

    .line 3123
    .end local v1    # "idx":I
    :cond_0
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 3124
    .restart local v1    # "idx":I
    new-instance v2, Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryTag;-><init>()V

    .line 3125
    .local v2, "key":Landroid/os/BatteryStats$HistoryTag;
    invoke-virtual {v2, p1}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3126
    iput v1, p1, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    .line 3127
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v3, v2, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3128
    iget v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextHistoryTagIdx:I

    add-int/lit8 v3, v3, 0x1

    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 3129
    iget v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumHistoryTagChars:I

    iget-object v4, v2, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v4

    add-int/lit8 v4, v4, 0x1

    add-int/2addr v3, v4

    iput v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumHistoryTagChars:I

    .line 3131
    .end local v2    # "key":Landroid/os/BatteryStats$HistoryTag;
    :goto_0
    return v1
.end method


# virtual methods
.method public blacklist addCpuTimes([J[J)[J
    .locals 5
    .param p1, "timesA"    # [J
    .param p2, "timesB"    # [J

    .line 612
    if-eqz p1, :cond_1

    if-eqz p2, :cond_1

    .line 613
    array-length v0, p1

    add-int/lit8 v0, v0, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    .line 614
    aget-wide v1, p1, v0

    aget-wide v3, p2, v0

    add-long/2addr v1, v3

    aput-wide v1, p1, v0

    .line 613
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 616
    .end local v0    # "i":I
    :cond_0
    return-object p1

    .line 618
    :cond_1
    if-nez p1, :cond_3

    if-nez p2, :cond_2

    const/4 v0, 0x0

    goto :goto_1

    :cond_2
    move-object v0, p2

    goto :goto_1

    :cond_3
    move-object v0, p1

    :goto_1
    return-object v0
.end method

.method blacklist addHistoryBufferLocked(JLandroid/os/BatteryStats$HistoryItem;)V
    .locals 26
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3672
    move-object/from16 v6, p0

    move-object/from16 v7, p3

    iget-boolean v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHaveBatteryLevel:Z

    if-eqz v0, :cond_a

    iget-boolean v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    if-nez v0, :cond_0

    goto/16 :goto_1

    .line 3676
    :cond_0
    iget-wide v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBaseTime:J

    add-long v0, v0, p1

    iget-object v2, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v2, v2, Landroid/os/BatteryStats$HistoryItem;->time:J

    sub-long v8, v0, v2

    .line 3677
    .local v8, "timeDiff":J
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget v1, v7, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget v2, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates:I

    and-int/2addr v1, v2

    xor-int v10, v0, v1

    .line 3678
    .local v10, "diffStates":I
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget v1, v7, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget v2, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates2:I

    and-int/2addr v1, v2

    xor-int v11, v0, v1

    .line 3679
    .local v11, "diffStates2":I
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget-object v1, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    xor-int v12, v0, v1

    .line 3680
    .local v12, "lastDiffStates":I
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget-object v1, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    xor-int v13, v0, v1

    .line 3686
    .local v13, "lastDiffStates2":I
    iget v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBufferLastPos:I

    const/4 v1, -0x1

    if-ltz v0, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    if-nez v0, :cond_7

    const-wide/16 v2, 0x3e8

    cmp-long v0, v8, v2

    if-gez v0, :cond_7

    and-int v0, v10, v12

    if-nez v0, :cond_7

    and-int v0, v11, v13

    if-nez v0, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v0, :cond_1

    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-nez v0, :cond_7

    :cond_1
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v0, :cond_2

    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-nez v0, :cond_7

    :cond_2
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    if-nez v0, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v0, :cond_3

    iget v0, v7, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-nez v0, :cond_7

    :cond_3
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iget-byte v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-ne v0, v2, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    iget-byte v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    if-ne v0, v2, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    iget-byte v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    if-ne v0, v2, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    iget-byte v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    if-ne v0, v2, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-short v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    iget-short v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    if-ne v0, v2, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-char v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    iget-char v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    if-ne v0, v2, :cond_7

    .line 3705
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget v2, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBufferLastPos:I

    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataSize(I)V

    .line 3706
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget v2, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBufferLastPos:I

    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 3707
    iput v1, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 3708
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v2, v0, Landroid/os/BatteryStats$HistoryItem;->time:J

    iget-wide v4, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBaseTime:J

    sub-long/2addr v2, v4

    .line 3712
    .end local p1    # "elapsedRealtimeMs":J
    .local v2, "elapsedRealtimeMs":J
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v0, :cond_4

    .line 3713
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3714
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iget-object v4, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-virtual {v0, v4}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3719
    :cond_4
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v0, :cond_5

    .line 3720
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3721
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iget-object v4, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-virtual {v0, v4}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3726
    :cond_5
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v0, :cond_6

    .line 3727
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    iput v0, v7, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3728
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3729
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    iget-object v4, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-virtual {v0, v4}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3731
    :cond_6
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0, v4}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    move-wide v14, v2

    goto :goto_0

    .line 3733
    .end local v2    # "elapsedRealtimeMs":J
    .restart local p1    # "elapsedRealtimeMs":J
    :cond_7
    move-wide/from16 v14, p1

    .end local p1    # "elapsedRealtimeMs":J
    .local v14, "elapsedRealtimeMs":J
    :goto_0
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataSize()I

    move-result v5

    .line 3735
    .local v5, "dataSize":I
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget v0, v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    const/4 v3, 0x0

    if-lt v5, v0, :cond_8

    .line 3737
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v16

    .line 3738
    .local v16, "start":J
    const/4 v0, 0x1

    invoke-virtual {v6, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeHistoryLocked(Z)V

    .line 3743
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsHistory;->startNextFile()V

    .line 3744
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0, v3}, Landroid/os/Parcel;->setDataSize(I)V

    .line 3745
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0, v3}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 3746
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v2, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget v2, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    div-int/lit8 v2, v2, 0x2

    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataCapacity(I)V

    .line 3747
    iput v1, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 3748
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v18

    .line 3749
    .local v18, "elapsedRealtime":J
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v20

    .line 3750
    .local v20, "uptime":J
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    move-object v4, v0

    .line 3751
    .local v4, "newItem":Landroid/os/BatteryStats$HistoryItem;
    invoke-virtual {v4, v7}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    .line 3752
    const/16 v22, 0x0

    move-object/from16 v0, p0

    move-wide/from16 v1, v18

    move-wide/from16 v23, v8

    move v9, v3

    move-object v8, v4

    .end local v4    # "newItem":Landroid/os/BatteryStats$HistoryItem;
    .local v8, "newItem":Landroid/os/BatteryStats$HistoryItem;
    .local v23, "timeDiff":J
    move-wide/from16 v3, v20

    move/from16 v25, v5

    .end local v5    # "dataSize":I
    .local v25, "dataSize":I
    move/from16 v5, v22

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->startRecordingHistory(JJZ)V

    .line 3753
    invoke-direct {v6, v14, v15, v9, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3754
    return-void

    .line 3757
    .end local v16    # "start":J
    .end local v18    # "elapsedRealtime":J
    .end local v20    # "uptime":J
    .end local v23    # "timeDiff":J
    .end local v25    # "dataSize":I
    .restart local v5    # "dataSize":I
    .local v8, "timeDiff":J
    :cond_8
    move/from16 v25, v5

    move-wide/from16 v23, v8

    move v9, v3

    .end local v5    # "dataSize":I
    .end local v8    # "timeDiff":J
    .restart local v23    # "timeDiff":J
    .restart local v25    # "dataSize":I
    if-nez v25, :cond_9

    .line 3759
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, v7, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 3760
    const/4 v0, 0x7

    invoke-direct {v6, v14, v15, v0, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3762
    :cond_9
    invoke-direct {v6, v14, v15, v9, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3763
    return-void

    .line 3673
    .end local v10    # "diffStates":I
    .end local v11    # "diffStates2":I
    .end local v12    # "lastDiffStates":I
    .end local v13    # "lastDiffStates2":I
    .end local v14    # "elapsedRealtimeMs":J
    .end local v23    # "timeDiff":J
    .end local v25    # "dataSize":I
    .restart local p1    # "elapsedRealtimeMs":J
    :cond_a
    :goto_1
    return-void
.end method

.method public blacklist addHistoryEventLocked(JJILjava/lang/String;I)V
    .locals 2
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "code"    # I
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "uid"    # I

    .line 3852
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput p5, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3853
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v1, v0, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v1, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3854
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object p6, v0, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 3855
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    iput p7, v0, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 3856
    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 3857
    return-void
.end method

.method blacklist addHistoryRecordInnerLocked(JLandroid/os/BatteryStats$HistoryItem;)V
    .locals 0
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3809
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryBufferLocked(JLandroid/os/BatteryStats$HistoryItem;)V

    .line 3812
    return-void
.end method

.method blacklist addHistoryRecordLocked(JJ)V
    .locals 9
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    .line 3789
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    const-wide/16 v2, 0x0

    cmp-long v2, v0, v2

    if-eqz v2, :cond_0

    .line 3790
    sub-long v0, p1, v0

    .line 3791
    .local v0, "diffElapsed":J
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryUptime:J

    sub-long v2, p3, v2

    .line 3792
    .local v2, "diffUptime":J
    const-wide/16 v4, 0x14

    sub-long v4, v0, v4

    cmp-long v4, v2, v4

    if-gez v4, :cond_0

    .line 3793
    sub-long v4, v0, v2

    sub-long v4, p1, v4

    .line 3794
    .local v4, "wakeElapsedTime":J
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    .line 3795
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    const/4 v7, 0x0

    iput-object v7, v6, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3796
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    iput-object v7, v6, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3797
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    const/4 v7, 0x0

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3798
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v8, 0x7fffffff

    and-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3799
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, v4, v5, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordInnerLocked(JLandroid/os/BatteryStats$HistoryItem;)V

    .line 3802
    .end local v0    # "diffElapsed":J
    .end local v2    # "diffUptime":J
    .end local v4    # "wakeElapsedTime":J
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v2, -0x80000000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3803
    iput-wide p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 3804
    iput-wide p3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 3805
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordInnerLocked(JLandroid/os/BatteryStats$HistoryItem;)V

    .line 3806
    return-void
.end method

.method blacklist addHistoryRecordLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "cmd"    # B
    .param p6, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3860
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

    .line 3861
    .local v0, "rec":Landroid/os/BatteryStats$HistoryItem;
    if-eqz v0, :cond_0

    .line 3862
    iget-object v1, v0, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

    goto :goto_0

    .line 3864
    :cond_0
    new-instance v1, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v1}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    move-object v0, v1

    .line 3866
    :goto_0
    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBaseTime:J

    add-long/2addr v1, p1

    invoke-virtual {v0, v1, v2, p5, p6}, Landroid/os/BatteryStats$HistoryItem;->setTo(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3868
    invoke-virtual {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(Landroid/os/BatteryStats$HistoryItem;)V

    .line 3869
    return-void
.end method

.method blacklist addHistoryRecordLocked(Landroid/os/BatteryStats$HistoryItem;)V
    .locals 1
    .param p1, "rec"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3872
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumHistoryItems:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumHistoryItems:I

    .line 3873
    const/4 v0, 0x0

    iput-object v0, p1, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    .line 3874
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastEnd:Landroid/os/BatteryStats$HistoryItem;

    .line 3875
    if-eqz v0, :cond_0

    .line 3876
    iput-object p1, v0, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    .line 3877
    iput-object p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    goto :goto_0

    .line 3879
    :cond_0
    iput-object p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    iput-object p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistory:Landroid/os/BatteryStats$HistoryItem;

    .line 3881
    :goto_0
    return-void
.end method

.method public blacklist addIsolatedUidLocked(II)V
    .locals 1
    .param p1, "isolatedUid"    # I
    .param p2, "appUid"    # I

    .line 3965
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0, p1, p2}, Landroid/util/SparseIntArray;->put(II)V

    .line 3966
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    .line 3967
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->addIsolatedUid(I)V

    .line 3968
    return-void
.end method

.method blacklist aggregateLastWakeupUptimeLocked(J)V
    .locals 6
    .param p1, "uptimeMs"    # J

    .line 4572
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    if-eqz v0, :cond_0

    .line 4573
    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWakeupUptimeMs:J

    sub-long v1, p1, v1

    .line 4574
    .local v1, "deltaUptime":J
    invoke-virtual {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    move-result-object v0

    .line 4575
    .local v0, "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    const-wide/16 v3, 0x3e8

    mul-long/2addr v3, v1

    const/4 v5, 0x1

    invoke-virtual {v0, v3, v4, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->add(JI)V

    .line 4582
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 4584
    .end local v0    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    .end local v1    # "deltaUptime":J
    :cond_0
    return-void
.end method

.method blacklist clearHistoryLocked()V
    .locals 3

    .line 3894
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBaseTime:J

    .line 3895
    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 3896
    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 3897
    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 3899
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataSize(I)V

    .line 3900
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 3901
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget v2, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    div-int/lit8 v2, v2, 0x2

    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataCapacity(I)V

    .line 3902
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    .line 3903
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    .line 3904
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->clear()V

    .line 3905
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 3906
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumHistoryTagChars:I

    .line 3907
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 3908
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates:I

    .line 3909
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveHistoryStates2:I

    .line 3910
    return-void
.end method

.method public blacklist clearPendingRemovedUids()V
    .locals 4

    .line 541
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget-wide v2, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->UID_REMOVE_DELAY_MS:J

    sub-long/2addr v0, v2

    .line 542
    .local v0, "cutOffTime":J
    :goto_0
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    invoke-interface {v2}, Ljava/util/Queue;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_0

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 543
    invoke-interface {v2}, Ljava/util/Queue;->peek()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;

    iget-wide v2, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;->timeAddedInQueue:J

    cmp-long v2, v2, v0

    if-gez v2, :cond_0

    .line 544
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    invoke-interface {v2}, Ljava/util/Queue;->poll()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;

    invoke-virtual {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;->remove()V

    goto :goto_0

    .line 546
    :cond_0
    return-void
.end method

.method blacklist collectCheckinFile()V
    .locals 3

    .line 12333
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    move-result v0

    const/16 v1, 0x14

    if-lt v0, v1, :cond_0

    .line 12334
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    .line 12335
    .local v0, "parcel":Landroid/os/Parcel;
    const/4 v1, 0x1

    invoke-virtual {p0, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeSummaryToParcel(Landroid/os/Parcel;Z)V

    .line 12336
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v1

    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$4;

    invoke-direct {v2, p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$4;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Landroid/os/Parcel;)V

    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 12359
    .end local v0    # "parcel":Landroid/os/Parcel;
    :cond_0
    return-void
.end method

.method public blacklist commitCurrentHistoryBatchLocked()V
    .locals 2

    .line 3661
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    const/4 v1, -0x1

    iput-byte v1, v0, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    .line 3662
    return-void
.end method

.method public greylist computeBatteryRealtime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12835
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->computeRealtime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist computeBatteryScreenOffRealtime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12845
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->computeRealtime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist computeBatteryScreenOffUptime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12840
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->computeUptime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist computeBatteryTimeRemaining(J)J
    .locals 7
    .param p1, "curTime"    # J

    .line 12889
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    const-wide/16 v1, -0x1

    if-nez v0, :cond_0

    .line 12890
    return-wide v1

    .line 12905
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v0, v0, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    const/4 v3, 0x1

    if-ge v0, v3, :cond_1

    .line 12906
    return-wide v1

    .line 12908
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->computeTimePerLevel()J

    move-result-wide v3

    .line 12909
    .local v3, "msPerLevel":J
    const-wide/16 v5, 0x0

    cmp-long v0, v3, v5

    if-gtz v0, :cond_2

    .line 12910
    return-wide v1

    .line 12912
    :cond_2
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurrentBatteryLevel:I

    int-to-long v0, v0

    mul-long/2addr v0, v3

    const-wide/16 v5, 0x3e8

    mul-long/2addr v0, v5

    return-wide v0
.end method

.method public greylist computeBatteryUptime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12829
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->computeUptime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist computeChargeTimeRemaining(J)J
    .locals 7
    .param p1, "curTime"    # J

    .line 12927
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    const-wide/16 v1, -0x1

    if-eqz v0, :cond_0

    .line 12929
    return-wide v1

    .line 12944
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v0, v0, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    const/4 v3, 0x1

    if-ge v0, v3, :cond_1

    .line 12945
    return-wide v1

    .line 12947
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->computeTimePerLevel()J

    move-result-wide v3

    .line 12948
    .local v3, "msPerLevel":J
    const-wide/16 v5, 0x0

    cmp-long v0, v3, v5

    if-gtz v0, :cond_2

    .line 12949
    return-wide v1

    .line 12951
    :cond_2
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurrentBatteryLevel:I

    rsub-int/lit8 v0, v0, 0x64

    int-to-long v0, v0

    mul-long/2addr v0, v3

    const-wide/16 v5, 0x3e8

    mul-long/2addr v0, v5

    return-wide v0
.end method

.method public blacklist computeRealtime(JI)J
    .locals 4
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12823
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRealtime:J

    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRealtimeStart:J

    sub-long v2, p1, v2

    add-long/2addr v0, v2

    return-wide v0
.end method

.method public blacklist computeUptime(JI)J
    .locals 4
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12818
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUptime:J

    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUptimeStart:J

    sub-long v2, p1, v2

    add-long/2addr v0, v2

    return-wide v0
.end method

.method public blacklist copyFromAllUidsCpuTimes()V
    .locals 2

    .line 549
    monitor-enter p0

    .line 550
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 551
    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    .line 550
    invoke-virtual {p0, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->copyFromAllUidsCpuTimes(ZZ)V

    .line 552
    monitor-exit p0

    .line 553
    return-void

    .line 552
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public blacklist copyFromAllUidsCpuTimes(ZZ)V
    .locals 9
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z

    .line 562
    monitor-enter p0

    .line 563
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget-boolean v0, v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->TRACK_CPU_TIMES_BY_PROC_STATE:Z

    if-nez v0, :cond_0

    .line 564
    monitor-exit p0

    return-void

    .line 566
    :cond_0
    invoke-direct {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->initKernelSingleUidTimeReaderLocked()Z

    move-result v0

    if-nez v0, :cond_1

    .line 567
    monitor-exit p0

    return-void

    .line 570
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    .line 571
    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->getAllUidCpuFreqTimeMs()Landroid/util/SparseArray;

    move-result-object v0

    .line 574
    .local v0, "allUidCpuFreqTimesMs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<[J>;"
    iget-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsPerProcessStateCpuDataStale:Z

    if-eqz v1, :cond_2

    .line 575
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/KernelSingleUidTimeReader;->setAllUidsCpuTimesMs(Landroid/util/SparseArray;)V

    .line 576
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsPerProcessStateCpuDataStale:Z

    .line 577
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v1}, Landroid/util/SparseIntArray;->clear()V

    .line 578
    monitor-exit p0

    return-void

    .line 580
    :cond_2
    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_7

    .line 581
    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v2

    .line 582
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getAvailableUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v3

    .line 583
    .local v3, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    if-nez v3, :cond_3

    .line 584
    goto :goto_2

    .line 586
    :cond_3
    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, [J

    .line 587
    .local v4, "cpuTimesMs":[J
    if-nez v4, :cond_4

    .line 588
    goto :goto_2

    .line 590
    :cond_4
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    .line 591
    invoke-virtual {v4}, [J->clone()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, [J

    .line 590
    invoke-virtual {v5, v2, v6}, Lcom/android/internal/os/KernelSingleUidTimeReader;->computeDelta(I[J)[J

    move-result-object v5

    .line 592
    .local v5, "deltaTimesMs":[J
    if-eqz p1, :cond_6

    if-eqz v5, :cond_6

    .line 594
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v6, v2}, Landroid/util/SparseIntArray;->indexOfKey(I)I

    move-result v6

    .line 595
    .local v6, "idx":I
    if-ltz v6, :cond_5

    .line 596
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v7, v6}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v7

    .line 597
    .local v7, "procState":I
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v8, v6}, Landroid/util/SparseIntArray;->removeAt(I)V

    goto :goto_1

    .line 599
    .end local v7    # "procState":I
    :cond_5
    iget v7, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcessState:I

    .line 601
    .restart local v7    # "procState":I
    :goto_1
    if-ltz v7, :cond_6

    const/4 v8, 0x7

    if-ge v7, v8, :cond_6

    .line 602
    invoke-static {v3, v7, v5, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$200(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;I[JZ)V

    .line 603
    invoke-static {v3, v7, v5, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$300(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;I[JZ)V

    .line 580
    .end local v2    # "uid":I
    .end local v3    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v4    # "cpuTimesMs":[J
    .end local v5    # "deltaTimesMs":[J
    .end local v6    # "idx":I
    .end local v7    # "procState":I
    :cond_6
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 607
    .end local v0    # "allUidCpuFreqTimesMs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<[J>;"
    .end local v1    # "i":I
    :cond_7
    monitor-exit p0

    .line 608
    return-void

    .line 607
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public blacklist createFakeHistoryEvents(J)V
    .locals 5
    .param p1, "numEvents"    # J

    .line 3665
    const-wide/16 v0, 0x0

    .local v0, "i":J
    :goto_0
    cmp-long v2, v0, p1

    if-gez v2, :cond_0

    .line 3666
    const-string/jumbo v2, "name1"

    const-string v3, "historyName1"

    const/16 v4, 0x3e8

    invoke-virtual {p0, v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteLongPartialWakelockStart(Ljava/lang/String;Ljava/lang/String;I)V

    .line 3667
    invoke-virtual {p0, v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteLongPartialWakelockFinish(Ljava/lang/String;Ljava/lang/String;I)V

    .line 3665
    const-wide/16 v2, 0x1

    add-long/2addr v0, v2

    goto :goto_0

    .line 3669
    .end local v0    # "i":J
    :cond_0
    return-void
.end method

.method public whitelist test-api describeContents()I
    .locals 1

    .line 13743
    const/4 v0, 0x0

    return v0
.end method

.method public blacklist dumpConstantsLocked(Ljava/io/PrintWriter;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 13532
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->dumpLocked(Ljava/io/PrintWriter;)V

    .line 13533
    return-void
.end method

.method public blacklist dumpCpuStatsLocked(Ljava/io/PrintWriter;)V
    .locals 11
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 13537
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 13538
    .local v0, "size":I
    const-string v1, "Per UID CPU user & system time in ms:"

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13539
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    const/4 v2, 0x0

    const-string v3, ": "

    const-string v4, "  "

    if-ge v1, v0, :cond_0

    .line 13540
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v5

    .line 13541
    .local v5, "u":I
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 13542
    .local v6, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13543
    invoke-virtual {v6, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getUserCpuTimeUs(I)J

    move-result-wide v3

    const-wide/16 v7, 0x3e8

    div-long/2addr v3, v7

    invoke-virtual {p1, v3, v4}, Ljava/io/PrintWriter;->print(J)V

    const-string v3, " "

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13544
    invoke-virtual {v6, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getSystemCpuTimeUs(I)J

    move-result-wide v2

    div-long/2addr v2, v7

    invoke-virtual {p1, v2, v3}, Ljava/io/PrintWriter;->println(J)V

    .line 13539
    .end local v5    # "u":I
    .end local v6    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 13546
    .end local v1    # "i":I
    :cond_0
    const-string v1, "Per UID CPU active time in ms:"

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13547
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_1
    if-ge v1, v0, :cond_2

    .line 13548
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v5

    .line 13549
    .restart local v5    # "u":I
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 13550
    .restart local v6    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getCpuActiveTime()J

    move-result-wide v7

    const-wide/16 v9, 0x0

    cmp-long v7, v7, v9

    if-lez v7, :cond_1

    .line 13551
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getCpuActiveTime()J

    move-result-wide v7

    invoke-virtual {p1, v7, v8}, Ljava/io/PrintWriter;->println(J)V

    .line 13547
    .end local v5    # "u":I
    .end local v6    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 13554
    .end local v1    # "i":I
    :cond_2
    const-string v1, "Per UID CPU cluster time in ms:"

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13555
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_2
    if-ge v1, v0, :cond_4

    .line 13556
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v5

    .line 13557
    .restart local v5    # "u":I
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    invoke-virtual {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getCpuClusterTimes()[J

    move-result-object v6

    .line 13558
    .local v6, "times":[J
    if-eqz v6, :cond_3

    .line 13559
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v6}, Ljava/util/Arrays;->toString([J)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13555
    .end local v5    # "u":I
    .end local v6    # "times":[J
    :cond_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 13562
    .end local v1    # "i":I
    :cond_4
    const-string v1, "Per UID CPU frequency time in ms:"

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13563
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_3
    if-ge v1, v0, :cond_6

    .line 13564
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v5

    .line 13565
    .restart local v5    # "u":I
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    invoke-virtual {v6, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getCpuFreqTimes(I)[J

    move-result-object v6

    .line 13566
    .restart local v6    # "times":[J
    if-eqz v6, :cond_5

    .line 13567
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v6}, Ljava/util/Arrays;->toString([J)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13563
    .end local v5    # "u":I
    .end local v6    # "times":[J
    :cond_5
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 13570
    .end local v1    # "i":I
    :cond_6
    return-void
.end method

.method public blacklist dumpLocked(Landroid/content/Context;Ljava/io/PrintWriter;IIJ)V
    .locals 4
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "flags"    # I
    .param p4, "reqUid"    # I
    .param p5, "histStart"    # J

    .line 15391
    invoke-super/range {p0 .. p6}, Landroid/os/BatteryStats;->dumpLocked(Landroid/content/Context;Ljava/io/PrintWriter;IIJ)V

    .line 15392
    const-string v0, "Total cpu time reads: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15393
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    invoke-virtual {p2, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 15394
    const-string v0, "Batched cpu time reads: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15395
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    invoke-virtual {p2, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 15396
    const-string v0, "Batching Duration (min): "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15397
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    sub-long/2addr v0, v2

    const-wide/32 v2, 0xea60

    div-long/2addr v0, v2

    invoke-virtual {p2, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 15398
    const-string v0, "All UID cpu time reads since the later of device start or stats reset: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15399
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 15400
    const-string v0, "UIDs removed since the later of device start or stats reset: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15401
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumUidsRemoved:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 15402
    return-void
.end method

.method public blacklist finishAddingCpuLocked(IIIIIIII)V
    .locals 4
    .param p1, "totalUTime"    # I
    .param p2, "totalSTime"    # I
    .param p3, "statUserTime"    # I
    .param p4, "statSystemTime"    # I
    .param p5, "statIOWaitTime"    # I
    .param p6, "statIrqTime"    # I
    .param p7, "statSoftIrqTime"    # I
    .param p8, "statIdleTime"    # I

    .line 4612
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuUserTime:J

    int-to-long v2, p1

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuUserTime:J

    .line 4613
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuSystemTime:J

    int-to-long v2, p2

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepCpuSystemTime:J

    .line 4614
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatUserTime:J

    int-to-long v2, p3

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatUserTime:J

    .line 4615
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSystemTime:J

    int-to-long v2, p4

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSystemTime:J

    .line 4616
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIOWaitTime:J

    int-to-long v2, p5

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIOWaitTime:J

    .line 4617
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIrqTime:J

    int-to-long v2, p6

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIrqTime:J

    .line 4618
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    int-to-long v2, p7

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    .line 4619
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIdleTime:J

    int-to-long v2, p8

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepStatIdleTime:J

    .line 4620
    return-void
.end method

.method public blacklist finishIteratingHistoryLocked()V
    .locals 1

    .line 10628
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsHistory;->finishIteratingHistory()V

    .line 10629
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIteratingHistory:Z

    .line 10630
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    .line 10631
    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryUids:[I

    .line 10632
    return-void
.end method

.method public blacklist finishIteratingOldHistoryLocked()V
    .locals 2

    .line 10555
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIteratingHistory:Z

    .line 10556
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataSize()I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 10557
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    .line 10558
    return-void
.end method

.method public blacklist getAvailableUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .locals 1
    .param p1, "uid"    # I

    .line 13235
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 13236
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    return-object v0
.end method

.method public greylist getAwakeTimeBattery()J
    .locals 2

    .line 12808
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getBatteryUptimeLocked()J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getAwakeTimePlugged()J
    .locals 4

    .line 12813
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    const-wide/16 v2, 0x3e8

    mul-long/2addr v0, v2

    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getAwakeTimeBattery()J

    move-result-wide v2

    sub-long/2addr v0, v2

    return-wide v0
.end method

.method public greylist getBatteryRealtime(J)J
    .locals 2
    .param p1, "curTime"    # J

    .line 13080
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->getRealtime(J)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getBatteryUptime(J)J
    .locals 2
    .param p1, "curTime"    # J

    .line 13074
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide v0

    return-wide v0
.end method

.method protected blacklist getBatteryUptimeLocked()J
    .locals 5

    .line 13069
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long/2addr v1, v3

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getBluetoothControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    .line 6592
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    return-object v0
.end method

.method public blacklist getBluetoothScanTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6637
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getCameraOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6632
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getCellularBatteryStats()Landroid/os/connectivity/CellularBatteryStats;
    .locals 48

    .line 12956
    move-object/from16 v0, p0

    const/4 v1, 0x0

    .line 12957
    .local v1, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    const-wide/16 v4, 0x3e8

    mul-long/2addr v2, v4

    .line 12958
    .local v2, "rawRealTime":J
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getModemControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;

    move-result-object v6

    .line 12959
    .local v6, "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getSleepTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    const/4 v8, 0x0

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v34

    .line 12960
    .local v34, "sleepTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getIdleTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v36

    .line 12961
    .local v36, "idleTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getRxTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v38

    .line 12962
    .local v38, "rxTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getPowerCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v40

    .line 12963
    .local v40, "energyConsumedMaMs":J
    nop

    .line 12964
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getMonitoredRailChargeConsumedMaMs()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v42

    .line 12965
    .local v42, "monitoredRailChargeConsumedMaMs":J
    sget v7, Landroid/os/BatteryStats;->NUM_DATA_CONNECTION_TYPES:I

    new-array v7, v7, [J

    .line 12966
    .local v7, "timeInRatMs":[J
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_0
    array-length v10, v7

    if-ge v9, v10, :cond_0

    .line 12967
    invoke-virtual {v0, v9, v2, v3, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getPhoneDataConnectionTime(IJI)J

    move-result-wide v10

    div-long/2addr v10, v4

    aput-wide v10, v7, v9

    .line 12966
    add-int/lit8 v9, v9, 0x1

    goto :goto_0

    .line 12970
    .end local v9    # "i":I
    :cond_0
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v9

    new-array v14, v9, [J

    .line 12971
    .local v14, "timeInRxSignalStrengthLevelMs":[J
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_1
    array-length v10, v14

    if-ge v9, v10, :cond_1

    .line 12972
    nop

    .line 12973
    invoke-virtual {v0, v9, v2, v3, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getPhoneSignalStrengthTime(IJI)J

    move-result-wide v10

    div-long/2addr v10, v4

    aput-wide v10, v14, v9

    .line 12971
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    .line 12975
    .end local v9    # "i":I
    :cond_1
    const/4 v9, 0x5

    .line 12976
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v10

    array-length v10, v10

    .line 12975
    invoke-static {v9, v10}, Ljava/lang/Math;->min(II)I

    move-result v9

    new-array v15, v9, [J

    .line 12977
    .local v15, "txTimeMs":[J
    const-wide/16 v9, 0x0

    .line 12978
    .local v9, "totalTxTimeMs":J
    const/4 v11, 0x0

    move-wide/from16 v44, v9

    .end local v9    # "totalTxTimeMs":J
    .local v11, "i":I
    .local v44, "totalTxTimeMs":J
    :goto_2
    array-length v9, v15

    if-ge v11, v9, :cond_2

    .line 12979
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v9

    aget-object v9, v9, v11

    invoke-virtual {v9, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v9

    aput-wide v9, v15, v11

    .line 12980
    aget-wide v9, v15, v11

    add-long v44, v44, v9

    .line 12978
    add-int/lit8 v11, v11, 0x1

    goto :goto_2

    .line 12983
    .end local v11    # "i":I
    :cond_2
    new-instance v46, Landroid/os/connectivity/CellularBatteryStats;

    move-object/from16 v9, v46

    invoke-virtual {v0, v2, v3, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v10

    div-long/2addr v10, v4

    .line 12984
    invoke-virtual {v0, v2, v3, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getMobileRadioActiveTime(JI)J

    move-result-wide v12

    div-long/2addr v12, v4

    .line 12985
    const/4 v4, 0x1

    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v16

    move-object v5, v14

    move-object/from16 v47, v15

    .end local v14    # "timeInRxSignalStrengthLevelMs":[J
    .end local v15    # "txTimeMs":[J
    .local v5, "timeInRxSignalStrengthLevelMs":[J
    .local v47, "txTimeMs":[J
    move-wide/from16 v14, v16

    .line 12986
    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v16

    .line 12987
    invoke-virtual {v0, v8, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v18

    .line 12988
    invoke-virtual {v0, v8, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v20

    .line 12989
    invoke-static/range {v40 .. v41}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v28

    move-wide/from16 v22, v34

    move-wide/from16 v24, v36

    move-wide/from16 v26, v38

    move-object/from16 v29, v7

    move-object/from16 v30, v5

    move-object/from16 v31, v47

    move-wide/from16 v32, v42

    invoke-direct/range {v9 .. v33}, Landroid/os/connectivity/CellularBatteryStats;-><init>(JJJJJJJJJLjava/lang/Long;[J[J[JJ)V

    .line 12983
    return-object v46
.end method

.method public blacklist getChargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 13055
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method public blacklist getCpuFreqs()[J
    .locals 1

    .line 10006
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuFreqs:[J

    return-object v0
.end method

.method public blacklist getCurrentDailyStartTime()J
    .locals 2

    .line 10493
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyStartTime:J

    return-wide v0
.end method

.method public blacklist getDailyChargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 13060
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method public blacklist getDailyDischargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 12922
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method public blacklist getDailyItemLocked(I)Landroid/os/BatteryStats$DailyItem;
    .locals 2
    .param p1, "daysAgo"    # I

    .line 10487
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    sub-int/2addr v0, p1

    .line 10488
    .local v0, "index":I
    if-ltz v0, :cond_0

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/BatteryStats$DailyItem;

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    return-object v1
.end method

.method public blacklist getDailyPackageChanges()Ljava/util/ArrayList;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList<",
            "Landroid/os/BatteryStats$PackageChange;",
            ">;"
        }
    .end annotation

    .line 13065
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    return-object v0
.end method

.method public blacklist getDeviceIdleModeCount(II)I
    .locals 1
    .param p1, "mode"    # I
    .param p2, "which"    # I

    .line 6376
    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    .line 6382
    const/4 v0, 0x0

    return v0

    .line 6380
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0

    .line 6378
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public blacklist getDeviceIdleModeTime(IJI)J
    .locals 2
    .param p1, "mode"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6366
    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    .line 6372
    const-wide/16 v0, 0x0

    return-wide v0

    .line 6370
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0

    .line 6368
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getDeviceIdlingCount(II)I
    .locals 1
    .param p1, "mode"    # I
    .param p2, "which"    # I

    .line 6406
    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    .line 6412
    const/4 v0, 0x0

    return v0

    .line 6410
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0

    .line 6408
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public blacklist getDeviceIdlingTime(IJI)J
    .locals 2
    .param p1, "mode"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6396
    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    .line 6402
    const-wide/16 v0, 0x0

    return-wide v0

    .line 6400
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0

    .line 6398
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getDischargeAmount(I)I
    .locals 2
    .param p1, "which"    # I

    .line 13132
    if-nez p1, :cond_0

    .line 13133
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result v0

    goto :goto_0

    .line 13134
    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getDischargeStartLevel()I

    move-result v0

    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getDischargeCurrentLevel()I

    move-result v1

    sub-int/2addr v0, v1

    :goto_0
    nop

    .line 13135
    .local v0, "dischargeAmount":I
    if-gez v0, :cond_1

    .line 13136
    const/4 v0, 0x0

    .line 13138
    :cond_1
    return v0
.end method

.method public blacklist getDischargeAmountScreenDoze()I
    .locals 3

    .line 13195
    monitor-enter p0

    .line 13196
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 13197
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13199
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13201
    :cond_0
    monitor-exit p0

    return v0

    .line 13202
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public blacklist getDischargeAmountScreenDozeSinceCharge()I
    .locals 3

    .line 13207
    monitor-enter p0

    .line 13208
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 13209
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13211
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13213
    :cond_0
    monitor-exit p0

    return v0

    .line 13214
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist getDischargeAmountScreenOff()I
    .locals 3

    .line 13169
    monitor-enter p0

    .line 13170
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 13171
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOff(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13173
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13176
    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getDischargeAmountScreenDoze()I

    move-result v1

    add-int/2addr v1, v0

    monitor-exit p0

    return v1

    .line 13177
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public blacklist getDischargeAmountScreenOffSinceCharge()I
    .locals 3

    .line 13182
    monitor-enter p0

    .line 13183
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 13184
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOff(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13186
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13189
    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getDischargeAmountScreenDozeSinceCharge()I

    move-result v1

    add-int/2addr v1, v0

    monitor-exit p0

    return v1

    .line 13190
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist getDischargeAmountScreenOn()I
    .locals 3

    .line 13144
    monitor-enter p0

    .line 13145
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 13146
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13148
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13150
    :cond_0
    monitor-exit p0

    return v0

    .line 13151
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public blacklist getDischargeAmountScreenOnSinceCharge()I
    .locals 3

    .line 13156
    monitor-enter p0

    .line 13157
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 13158
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13160
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13162
    :cond_0
    monitor-exit p0

    return v0

    .line 13163
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist getDischargeCurrentLevel()I
    .locals 1

    .line 13098
    monitor-enter p0

    .line 13099
    :try_start_0
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getDischargeCurrentLevelLocked()I

    move-result v0

    monitor-exit p0

    return v0

    .line 13100
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public blacklist getDischargeCurrentLevelLocked()I
    .locals 1

    .line 13104
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    return v0
.end method

.method public blacklist getDischargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 12917
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method public greylist getDischargeStartLevel()I
    .locals 1

    .line 13086
    monitor-enter p0

    .line 13087
    :try_start_0
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getDischargeStartLevelLocked()I

    move-result v0

    monitor-exit p0

    return v0

    .line 13088
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public blacklist getDischargeStartLevelLocked()I
    .locals 1

    .line 13092
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    return v0
.end method

.method public blacklist getEndPlatformVersion()Ljava/lang/String;
    .locals 1

    .line 6679
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    return-object v0
.end method

.method public blacklist getEstimatedBatteryCapacity()I
    .locals 1

    .line 1125
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    return v0
.end method

.method public blacklist getExternalStatsCollectionRateLimitMs()J
    .locals 2

    .line 13525
    monitor-enter p0

    .line 13526
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget-wide v0, v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS:J

    monitor-exit p0

    return-wide v0

    .line 13527
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public blacklist getFlashlightOnCount(I)J
    .locals 2
    .param p1, "which"    # I

    .line 6627
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    int-to-long v0, v0

    return-wide v0
.end method

.method public blacklist getFlashlightOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6622
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getGlobalWifiRunningTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6545
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getGpsBatteryDrainMaMs()J
    .locals 14

    .line 6431
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-wide/16 v1, 0x0

    if-nez v0, :cond_0

    .line 6432
    return-wide v1

    .line 6435
    :cond_0
    const-string v3, "gps.voltage"

    invoke-virtual {v0, v3}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v3

    const-wide v5, 0x408f400000000000L    # 1000.0

    div-double/2addr v3, v5

    .line 6437
    .local v3, "opVolt":D
    const-wide/16 v5, 0x0

    cmpl-double v0, v3, v5

    if-nez v0, :cond_1

    .line 6438
    return-wide v1

    .line 6440
    :cond_1
    const-wide/16 v0, 0x0

    .line 6441
    .local v0, "energyUsedMaMs":D
    const/4 v2, 0x0

    .line 6442
    .local v2, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    const-wide/16 v7, 0x3e8

    mul-long/2addr v5, v7

    .line 6443
    .local v5, "rawRealtime":J
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_0
    const/4 v10, 0x2

    if-ge v9, v10, :cond_2

    .line 6444
    iget-object v10, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    .line 6445
    const-string v11, "gps.signalqualitybased"

    invoke-virtual {v10, v11, v9}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;I)D

    move-result-wide v10

    const/4 v12, 0x0

    .line 6446
    invoke-virtual {p0, v9, v5, v6, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getGpsSignalQualityTime(IJI)J

    move-result-wide v12

    div-long/2addr v12, v7

    long-to-double v12, v12

    mul-double/2addr v10, v12

    add-double/2addr v0, v10

    .line 6443
    add-int/lit8 v9, v9, 0x1

    goto :goto_0

    .line 6448
    .end local v9    # "i":I
    :cond_2
    double-to-long v7, v0

    return-wide v7
.end method

.method public blacklist getGpsBatteryStats()Landroid/os/connectivity/GpsBatteryStats;
    .locals 11

    .line 13040
    new-instance v0, Landroid/os/connectivity/GpsBatteryStats;

    invoke-direct {v0}, Landroid/os/connectivity/GpsBatteryStats;-><init>()V

    .line 13041
    .local v0, "s":Landroid/os/connectivity/GpsBatteryStats;
    const/4 v1, 0x0

    .line 13042
    .local v1, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    const-wide/16 v4, 0x3e8

    mul-long/2addr v2, v4

    .line 13043
    .local v2, "rawRealTime":J
    const/4 v6, 0x0

    invoke-virtual {p0, v2, v3, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v7

    div-long/2addr v7, v4

    invoke-virtual {v0, v7, v8}, Landroid/os/connectivity/GpsBatteryStats;->setLoggingDurationMs(J)V

    .line 13044
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getGpsBatteryDrainMaMs()J

    move-result-wide v7

    invoke-virtual {v0, v7, v8}, Landroid/os/connectivity/GpsBatteryStats;->setEnergyConsumedMaMs(J)V

    .line 13045
    const/4 v7, 0x2

    new-array v7, v7, [J

    .line 13046
    .local v7, "time":[J
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_0
    array-length v9, v7

    if-ge v8, v9, :cond_0

    .line 13047
    invoke-virtual {p0, v8, v2, v3, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getGpsSignalQualityTime(IJI)J

    move-result-wide v9

    div-long/2addr v9, v4

    aput-wide v9, v7, v8

    .line 13046
    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    .line 13049
    .end local v8    # "i":I
    :cond_0
    invoke-virtual {v0, v7}, Landroid/os/connectivity/GpsBatteryStats;->setTimeInGpsSignalQualityLevel([J)V

    .line 13050
    return-object v0
.end method

.method public blacklist getGpsSignalQualityTime(IJI)J
    .locals 2
    .param p1, "strengthBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6421
    if-ltz p1, :cond_1

    const/4 v0, 0x2

    if-lt p1, v0, :cond_0

    goto :goto_0

    .line 6424
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0

    .line 6422
    :cond_1
    :goto_0
    const-wide/16 v0, 0x0

    return-wide v0
.end method

.method public blacklist getHighDischargeAmountSinceCharge()I
    .locals 3

    .line 13120
    monitor-enter p0

    .line 13121
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 13122
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13123
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13125
    :cond_0
    monitor-exit p0

    return v0

    .line 13126
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public blacklist getHistoryBaseTime()J
    .locals 2

    .line 10636
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBaseTime:J

    return-wide v0
.end method

.method public blacklist getHistoryStringPoolBytes()I
    .locals 2

    .line 10596
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    array-length v0, v0

    mul-int/lit8 v0, v0, 0xc

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryChars:I

    mul-int/lit8 v1, v1, 0x2

    add-int/2addr v0, v1

    return v0
.end method

.method public blacklist getHistoryStringPoolSize()I
    .locals 1

    .line 10589
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    array-length v0, v0

    return v0
.end method

.method public blacklist getHistoryTagPoolString(I)Ljava/lang/String;
    .locals 1
    .param p1, "index"    # I

    .line 10601
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public blacklist getHistoryTagPoolUid(I)I
    .locals 1
    .param p1, "index"    # I

    .line 10606
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryUids:[I

    aget v0, v0, p1

    return v0
.end method

.method public blacklist getHistoryTotalSize()I
    .locals 2

    .line 10561
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget v0, v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget v1, v1, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->MAX_HISTORY_FILES:I

    mul-int/2addr v0, v1

    return v0
.end method

.method public blacklist getHistoryUsedSize()I
    .locals 1

    .line 10565
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsHistory;->getHistoryUsedSize()I

    move-result v0

    return v0
.end method

.method public blacklist getInteractiveTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6353
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getIsOnBattery()Z
    .locals 1

    .line 6687
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    return v0
.end method

.method public blacklist getKernelMemoryStats()Landroid/util/LongSparseArray;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Landroid/util/LongSparseArray<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation

    .line 264
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    return-object v0
.end method

.method public blacklist getKernelMemoryTimerLocked(J)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "bucket"    # J

    .line 3109
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, p1, p2}, Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 3110
    .local v0, "kmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3111
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3112
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1, p1, p2, v0}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    .line 3114
    :cond_0
    return-object v0
.end method

.method public greylist getKernelWakelockStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 1087
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public blacklist getKernelWakelockTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3100
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 3101
    .local v0, "kwlt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3102
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3103
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3105
    :cond_0
    return-object v0
.end method

.method public blacklist getLongestDeviceIdleModeTime(I)J
    .locals 2
    .param p1, "mode"    # I

    .line 6386
    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    .line 6392
    const-wide/16 v0, 0x0

    return-wide v0

    .line 6390
    :cond_0
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestFullIdleTime:J

    return-wide v0

    .line 6388
    :cond_1
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestLightIdleTime:J

    return-wide v0
.end method

.method public blacklist getLowDischargeAmountSinceCharge()I
    .locals 3

    .line 13109
    monitor-enter p0

    .line 13110
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 13111
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13112
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/lit8 v1, v1, -0x1

    add-int/2addr v0, v1

    .line 13114
    :cond_0
    monitor-exit p0

    return v0

    .line 13115
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public blacklist getMaxLearnedBatteryCapacity()I
    .locals 1

    .line 1135
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    return v0
.end method

.method public blacklist getMinLearnedBatteryCapacity()I
    .locals 1

    .line 1130
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    return v0
.end method

.method public blacklist getMobileIfaces()[Ljava/lang/String;
    .locals 2

    .line 6319
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    .line 6320
    :try_start_0
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    monitor-exit v0

    return-object v1

    .line 6321
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public blacklist getMobileRadioActiveAdjustedTime(I)J
    .locals 2
    .param p1, "which"    # I

    .line 6513
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getMobileRadioActiveCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6509
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist getMobileRadioActiveTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6505
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getMobileRadioActiveUnknownCount(I)I
    .locals 2
    .param p1, "which"    # I

    .line 6521
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    long-to-int v0, v0

    return v0
.end method

.method public blacklist getMobileRadioActiveUnknownTime(I)J
    .locals 2
    .param p1, "which"    # I

    .line 6517
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getModemControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    .line 6602
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    return-object v0
.end method

.method public greylist getNetworkActivityBytes(II)J
    .locals 2
    .param p1, "type"    # I
    .param p2, "which"    # I

    .line 6643
    if-ltz p1, :cond_0

    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    array-length v1, v0

    if-ge p1, v1, :cond_0

    .line 6644
    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0

    .line 6646
    :cond_0
    const-wide/16 v0, 0x0

    return-wide v0
.end method

.method public blacklist getNetworkActivityPackets(II)J
    .locals 2
    .param p1, "type"    # I
    .param p2, "which"    # I

    .line 6652
    if-ltz p1, :cond_0

    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    array-length v1, v0

    if-ge p1, v1, :cond_0

    .line 6653
    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0

    .line 6655
    :cond_0
    const-wide/16 v0, 0x0

    return-wide v0
.end method

.method public greylist getNextHistoryLocked(Landroid/os/BatteryStats$HistoryItem;)Z
    .locals 7
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryItem;

    .line 10612
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsHistory;->getNextParcel(Landroid/os/BatteryStats$HistoryItem;)Landroid/os/Parcel;

    move-result-object v0

    .line 10613
    .local v0, "p":Landroid/os/Parcel;
    if-nez v0, :cond_0

    .line 10614
    const/4 v1, 0x0

    return v1

    .line 10616
    :cond_0
    iget-wide v1, p1, Landroid/os/BatteryStats$HistoryItem;->time:J

    .line 10617
    .local v1, "lastRealtime":J
    iget-wide v3, p1, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 10618
    .local v3, "lastWalltime":J
    invoke-virtual {p0, v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V

    .line 10619
    iget-byte v5, p1, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    const/4 v6, 0x5

    if-eq v5, v6, :cond_1

    iget-byte v5, p1, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    const/4 v6, 0x7

    if-eq v5, v6, :cond_1

    const-wide/16 v5, 0x0

    cmp-long v5, v3, v5

    if-eqz v5, :cond_1

    .line 10621
    iget-wide v5, p1, Landroid/os/BatteryStats$HistoryItem;->time:J

    sub-long/2addr v5, v1

    add-long/2addr v5, v3

    iput-wide v5, p1, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 10623
    :cond_1
    const/4 v5, 0x1

    return v5
.end method

.method public blacklist getNextMaxDailyDeadline()J
    .locals 2

    .line 10503
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMaxDailyDeadline:J

    return-wide v0
.end method

.method public blacklist getNextMinDailyDeadline()J
    .locals 2

    .line 10498
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMinDailyDeadline:J

    return-wide v0
.end method

.method public blacklist getNextOldHistoryLocked(Landroid/os/BatteryStats$HistoryItem;)Z
    .locals 14
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryItem;

    .line 10522
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataPosition()I

    move-result v0

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    move-result v1

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-lt v0, v1, :cond_0

    move v0, v2

    goto :goto_0

    :cond_0
    move v0, v3

    .line 10523
    .local v0, "end":Z
    :goto_0
    if-nez v0, :cond_2

    .line 10524
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, v1, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V

    .line 10525
    iget-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadOverflow:Z

    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v4, v4, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    const/4 v5, 0x6

    if-ne v4, v5, :cond_1

    move v4, v2

    goto :goto_1

    :cond_1
    move v4, v3

    :goto_1
    or-int/2addr v1, v4

    iput-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadOverflow:Z

    .line 10527
    :cond_2
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    .line 10528
    .local v1, "cur":Landroid/os/BatteryStats$HistoryItem;
    const-string v4, "OppoBatteryStatsImpl"

    if-nez v1, :cond_4

    .line 10529
    iget-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadOverflow:Z

    if-nez v2, :cond_3

    if-nez v0, :cond_3

    .line 10530
    const-string v2, "Old history ends before new history!"

    invoke-static {v4, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10532
    :cond_3
    return v3

    .line 10534
    :cond_4
    invoke-virtual {p1, v1}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    .line 10535
    iget-object v3, v1, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    iput-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    .line 10536
    iget-boolean v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadOverflow:Z

    if-nez v3, :cond_6

    .line 10537
    if-eqz v0, :cond_5

    .line 10538
    const-string v3, "New history ends before old history!"

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 10539
    :cond_5
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p1, v3}, Landroid/os/BatteryStats$HistoryItem;->same(Landroid/os/BatteryStats$HistoryItem;)Z

    move-result v3

    if-nez v3, :cond_6

    .line 10540
    new-instance v3, Lcom/android/internal/util/FastPrintWriter;

    new-instance v5, Landroid/util/LogWriter;

    const/4 v6, 0x5

    invoke-direct {v5, v6, v4}, Landroid/util/LogWriter;-><init>(ILjava/lang/String;)V

    invoke-direct {v3, v5}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;)V

    .line 10541
    .local v3, "pw":Ljava/io/PrintWriter;
    const-string v4, "Histories differ!"

    invoke-virtual {v3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10542
    const-string v4, "Old history:"

    invoke-virtual {v3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10543
    new-instance v7, Landroid/os/BatteryStats$HistoryPrinter;

    invoke-direct {v7}, Landroid/os/BatteryStats$HistoryPrinter;-><init>()V

    const-wide/16 v10, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x1

    move-object v8, v3

    move-object v9, p1

    invoke-virtual/range {v7 .. v13}, Landroid/os/BatteryStats$HistoryPrinter;->printNextItem(Ljava/io/PrintWriter;Landroid/os/BatteryStats$HistoryItem;JZZ)V

    .line 10544
    const-string v4, "New history:"

    invoke-virtual {v3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10545
    new-instance v7, Landroid/os/BatteryStats$HistoryPrinter;

    invoke-direct {v7}, Landroid/os/BatteryStats$HistoryPrinter;-><init>()V

    iget-object v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual/range {v7 .. v13}, Landroid/os/BatteryStats$HistoryPrinter;->printNextItem(Ljava/io/PrintWriter;Landroid/os/BatteryStats$HistoryItem;JZZ)V

    .line 10547
    invoke-virtual {v3}, Ljava/io/PrintWriter;->flush()V

    .line 10550
    .end local v3    # "pw":Ljava/io/PrintWriter;
    :cond_6
    :goto_2
    return v2
.end method

.method public blacklist getNumConnectivityChange(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6416
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumConnectivityChange:I

    return v0
.end method

.method public greylist getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pkg"    # Ljava/lang/String;

    .line 13292
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 13293
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    .line 13294
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getPackageStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;

    move-result-object v1

    return-object v1
.end method

.method public blacklist getParcelVersion()I
    .locals 1

    .line 6683
    const/16 v0, 0xbb

    return v0
.end method

.method public greylist getPhoneDataConnectionCount(II)I
    .locals 1
    .param p1, "dataType"    # I
    .param p2, "which"    # I

    .line 6496
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist getPhoneDataConnectionTime(IJI)J
    .locals 2
    .param p1, "dataType"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6490
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getPhoneDataConnectionTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 154
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getPhoneDataConnectionTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public blacklist getPhoneDataConnectionTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    .locals 1
    .param p1, "dataType"    # I

    .line 6500
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public blacklist getPhoneOnCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6457
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist getPhoneOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6453
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getPhoneSignalScanningTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6470
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getPhoneSignalScanningTimer()Landroid/os/BatteryStats$Timer;
    .locals 1

    .line 154
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getPhoneSignalScanningTimer()Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;

    move-result-object v0

    return-object v0
.end method

.method public blacklist getPhoneSignalScanningTimer()Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    .locals 1

    .line 6475
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    return-object v0
.end method

.method public greylist getPhoneSignalStrengthCount(II)I
    .locals 1
    .param p1, "strengthBin"    # I
    .param p2, "which"    # I

    .line 6480
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist getPhoneSignalStrengthTime(IJI)J
    .locals 2
    .param p1, "strengthBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6463
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getPhoneSignalStrengthTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 154
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getPhoneSignalStrengthTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public blacklist getPhoneSignalStrengthTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    .locals 1
    .param p1, "strengthBin"    # I

    .line 6484
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public blacklist getPowerSaveModeEnabledCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6361
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public blacklist getPowerSaveModeEnabledTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6357
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "name"    # Ljava/lang/String;

    .line 13281
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 13282
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    .line 13283
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;

    move-result-object v1

    return-object v1
.end method

.method public blacklist getProcessWakeTime(IIJ)J
    .locals 7
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "realtime"    # J

    .line 4631
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4632
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 4633
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    const-wide/16 v1, 0x0

    if-eqz v0, :cond_1

    .line 4634
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mPids:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$Uid$Pid;

    .line 4635
    .local v3, "p":Landroid/os/BatteryStats$Uid$Pid;
    if-eqz v3, :cond_1

    .line 4636
    iget-wide v4, v3, Landroid/os/BatteryStats$Uid$Pid;->mWakeSumMs:J

    iget v6, v3, Landroid/os/BatteryStats$Uid$Pid;->mWakeNesting:I

    if-lez v6, :cond_0

    iget-wide v1, v3, Landroid/os/BatteryStats$Uid$Pid;->mWakeStartMs:J

    sub-long v1, p3, v1

    :cond_0
    add-long/2addr v4, v1

    return-wide v4

    .line 4639
    .end local v3    # "p":Landroid/os/BatteryStats$Uid$Pid;
    :cond_1
    return-wide v1
.end method

.method public blacklist getRpmStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 1071
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public blacklist getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3064
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 3065
    .local v0, "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3066
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3067
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3069
    :cond_0
    return-object v0
.end method

.method public greylist getScreenBrightnessTime(IJI)J
    .locals 2
    .param p1, "brightnessBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6344
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getScreenBrightnessTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 154
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getScreenBrightnessTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public blacklist getScreenBrightnessTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    .locals 1
    .param p1, "brightnessBin"    # I

    .line 6349
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public blacklist getScreenDozeCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6338
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public blacklist getScreenDozeTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6334
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getScreenOffRpmStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 1077
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public blacklist getScreenOffRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3074
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 3075
    .local v0, "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3076
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3077
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3079
    :cond_0
    return-object v0
.end method

.method public blacklist getScreenOnCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6330
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist getScreenOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6326
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getServiceStatsLocked(ILjava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "name"    # Ljava/lang/String;

    .line 13303
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 13304
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    .line 13305
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v0, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getServiceStatsLocked(Ljava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;

    move-result-object v1

    return-object v1
.end method

.method public blacklist getStartClockTime()J
    .locals 9

    .line 6660
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v7

    .line 6661
    .local v7, "currentTime":J
    const-wide v0, 0x757b12c00L

    cmp-long v2, v7, v0

    if-lez v2, :cond_0

    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartClockTime:J

    sub-long v0, v7, v0

    cmp-long v0, v2, v0

    if-ltz v0, :cond_1

    :cond_0
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartClockTime:J

    cmp-long v2, v0, v7

    if-lez v2, :cond_2

    .line 6667
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    .line 6668
    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v5

    .line 6667
    move-object v0, p0

    move-wide v1, v7

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->recordCurrentTimeChangeLocked(JJJ)V

    .line 6669
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRealtimeStart:J

    const-wide/16 v4, 0x3e8

    div-long/2addr v2, v4

    sub-long/2addr v0, v2

    sub-long v0, v7, v0

    return-wide v0

    .line 6671
    :cond_2
    return-wide v0
.end method

.method public blacklist getStartCount()I
    .locals 1

    .line 10641
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartCount:I

    return v0
.end method

.method public blacklist getStartPlatformVersion()Ljava/lang/String;
    .locals 1

    .line 6675
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    return-object v0
.end method

.method public blacklist getUahDischarge(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1100
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getUahDischargeDeepDoze(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1120
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getUahDischargeLightDoze(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1115
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getUahDischargeScreenDoze(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1110
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getUahDischargeScreenOff(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1105
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getUid0ProcessList()Ljava/util/ArrayList;
    .locals 17
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 15469
    move-object/from16 v0, p0

    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 15471
    .local v1, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    iget-boolean v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasUid0:Z

    if-eqz v2, :cond_5

    .line 15472
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_4

    .line 15473
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 15475
    .local v3, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget v4, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUid:I

    if-nez v4, :cond_3

    .line 15476
    nop

    .line 15477
    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getProcessStats()Landroid/util/ArrayMap;

    move-result-object v4

    .line 15478
    .local v4, "processStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;+Landroid/os/BatteryStats$Uid$Proc;>;"
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    .line 15479
    .local v5, "processList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;>;"
    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v6

    add-int/lit8 v6, v6, -0x1

    .local v6, "ipr":I
    :goto_1
    if-ltz v6, :cond_1

    .line 15480
    invoke-virtual {v4, v6}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/os/BatteryStats$Uid$Proc;

    .line 15483
    .local v7, "ps":Landroid/os/BatteryStats$Uid$Proc;
    if-nez v7, :cond_0

    move v9, v2

    move-object/from16 v16, v3

    goto :goto_2

    .line 15488
    :cond_0
    new-instance v8, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;

    invoke-direct {v8, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;)V

    .line 15490
    .local v8, "cp":Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;
    const/4 v9, 0x0

    invoke-virtual {v7, v9}, Landroid/os/BatteryStats$Uid$Proc;->getUserTime(I)J

    move-result-wide v10

    .line 15491
    .local v10, "userTime":J
    invoke-virtual {v7, v9}, Landroid/os/BatteryStats$Uid$Proc;->getSystemTime(I)J

    move-result-wide v12

    .line 15492
    .local v12, "systemTime":J
    invoke-virtual {v7, v9}, Landroid/os/BatteryStats$Uid$Proc;->getForegroundTime(I)J

    move-result-wide v14

    .line 15493
    .local v14, "foregroundTime":J
    move v9, v2

    move-object/from16 v16, v3

    .end local v2    # "i":I
    .end local v3    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .local v9, "i":I
    .local v16, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-long v2, v10, v12

    iput-wide v2, v8, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->cpuTime:J

    .line 15494
    iput-wide v14, v8, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->foregroundTime:J

    .line 15495
    invoke-virtual {v4, v6}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    iput-object v2, v8, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->name:Ljava/lang/String;

    .line 15496
    invoke-virtual {v5, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15479
    .end local v7    # "ps":Landroid/os/BatteryStats$Uid$Proc;
    .end local v8    # "cp":Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;
    .end local v10    # "userTime":J
    .end local v12    # "systemTime":J
    .end local v14    # "foregroundTime":J
    :goto_2
    add-int/lit8 v6, v6, -0x1

    move v2, v9

    move-object/from16 v3, v16

    goto :goto_1

    .end local v9    # "i":I
    .end local v16    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .restart local v2    # "i":I
    .restart local v3    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_1
    move v9, v2

    move-object/from16 v16, v3

    .line 15499
    .end local v2    # "i":I
    .end local v3    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v6    # "ipr":I
    .restart local v9    # "i":I
    .restart local v16    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$8;

    invoke-direct {v2, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$8;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;)V

    .line 15513
    .local v2, "uid0Comparator":Ljava/util/Comparator;, "Ljava/util/Comparator<Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;>;"
    invoke-static {v5, v2}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 15514
    const/4 v3, 0x0

    .local v3, "j":I
    :goto_3
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-ge v3, v6, :cond_2

    const/4 v6, 0x5

    if-ge v3, v6, :cond_2

    .line 15515
    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;

    .line 15516
    .local v6, "cp":Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "listType 1 uid 0 name "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v6, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->name:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, " cpuTime "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v10, v6, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->cpuTime:J

    invoke-virtual {v7, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v8, " foregroundTime "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v10, v6, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->foregroundTime:J

    invoke-virtual {v7, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 15518
    .local v7, "uid0Stats":Ljava/lang/String;
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "uid0Stats = "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    const-string v10, "OppoBatteryStatsImpl"

    invoke-static {v10, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15519
    invoke-virtual {v1, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15514
    .end local v6    # "cp":Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;
    .end local v7    # "uid0Stats":Ljava/lang/String;
    add-int/lit8 v3, v3, 0x1

    goto :goto_3

    .line 15521
    .end local v3    # "j":I
    :cond_2
    goto :goto_4

    .line 15475
    .end local v4    # "processStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;+Landroid/os/BatteryStats$Uid$Proc;>;"
    .end local v5    # "processList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;>;"
    .end local v9    # "i":I
    .end local v16    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .local v2, "i":I
    .local v3, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_3
    move v9, v2

    move-object/from16 v16, v3

    .line 15472
    .end local v2    # "i":I
    .end local v3    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .restart local v9    # "i":I
    add-int/lit8 v2, v9, 0x1

    .end local v9    # "i":I
    .restart local v2    # "i":I
    goto/16 :goto_0

    :cond_4
    move v9, v2

    .line 15525
    .end local v2    # "i":I
    :cond_5
    :goto_4
    return-object v1
.end method

.method public blacklist getUid1kProcessList()Ljava/util/ArrayList;
    .locals 17
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 15529
    move-object/from16 v0, p0

    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 15531
    .local v1, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    iget-boolean v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasUid1k:Z

    if-eqz v2, :cond_5

    .line 15532
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_4

    .line 15533
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 15534
    .local v3, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget v4, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUid:I

    const/16 v5, 0x3e8

    if-ne v4, v5, :cond_2

    .line 15535
    nop

    .line 15536
    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getProcessStats()Landroid/util/ArrayMap;

    move-result-object v4

    .line 15537
    .local v4, "processStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;+Landroid/os/BatteryStats$Uid$Proc;>;"
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    .line 15538
    .local v5, "processList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;>;"
    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v6

    add-int/lit8 v6, v6, -0x1

    .local v6, "ipr":I
    :goto_1
    if-ltz v6, :cond_1

    .line 15539
    invoke-virtual {v4, v6}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/os/BatteryStats$Uid$Proc;

    .line 15542
    .local v7, "ps":Landroid/os/BatteryStats$Uid$Proc;
    if-nez v7, :cond_0

    move v9, v2

    move-object/from16 v16, v3

    goto :goto_2

    .line 15547
    :cond_0
    new-instance v8, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;

    invoke-direct {v8, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;)V

    .line 15549
    .local v8, "cp":Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;
    const/4 v9, 0x0

    invoke-virtual {v7, v9}, Landroid/os/BatteryStats$Uid$Proc;->getUserTime(I)J

    move-result-wide v10

    .line 15550
    .local v10, "userTime":J
    invoke-virtual {v7, v9}, Landroid/os/BatteryStats$Uid$Proc;->getSystemTime(I)J

    move-result-wide v12

    .line 15551
    .local v12, "systemTime":J
    invoke-virtual {v7, v9}, Landroid/os/BatteryStats$Uid$Proc;->getForegroundTime(I)J

    move-result-wide v14

    .line 15552
    .local v14, "foregroundTime":J
    move v9, v2

    move-object/from16 v16, v3

    .end local v2    # "i":I
    .end local v3    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .local v9, "i":I
    .local v16, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-long v2, v10, v12

    iput-wide v2, v8, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->cpuTime:J

    .line 15553
    iput-wide v14, v8, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->foregroundTime:J

    .line 15554
    invoke-virtual {v4, v6}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    iput-object v2, v8, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->name:Ljava/lang/String;

    .line 15555
    invoke-virtual {v5, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15538
    .end local v7    # "ps":Landroid/os/BatteryStats$Uid$Proc;
    .end local v8    # "cp":Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;
    .end local v10    # "userTime":J
    .end local v12    # "systemTime":J
    .end local v14    # "foregroundTime":J
    :goto_2
    add-int/lit8 v6, v6, -0x1

    move v2, v9

    move-object/from16 v3, v16

    goto :goto_1

    .end local v9    # "i":I
    .end local v16    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .restart local v2    # "i":I
    .restart local v3    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_1
    move v9, v2

    move-object/from16 v16, v3

    .line 15558
    .end local v2    # "i":I
    .end local v3    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v6    # "ipr":I
    .restart local v9    # "i":I
    .restart local v16    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$9;

    invoke-direct {v2, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$9;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;)V

    .line 15572
    .local v2, "uid0Comparator":Ljava/util/Comparator;, "Ljava/util/Comparator<Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;>;"
    invoke-static {v5, v2}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 15573
    const/4 v3, 0x0

    .local v3, "j":I
    :goto_3
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-ge v3, v6, :cond_3

    const/4 v6, 0x5

    if-ge v3, v6, :cond_3

    .line 15574
    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;

    .line 15575
    .local v6, "cp":Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "listType 2 uid 1000 name "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v6, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->name:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, " cpuTime "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v10, v6, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->cpuTime:J

    invoke-virtual {v7, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v8, " foregroundTime "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v10, v6, Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;->foregroundTime:J

    invoke-virtual {v7, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 15577
    .local v7, "uid1000Stats":Ljava/lang/String;
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "uid1000Stats = "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    const-string v10, "OppoBatteryStatsImpl"

    invoke-static {v10, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15578
    invoke-virtual {v1, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15573
    .end local v6    # "cp":Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;
    .end local v7    # "uid1000Stats":Ljava/lang/String;
    add-int/lit8 v3, v3, 0x1

    goto :goto_3

    .line 15534
    .end local v4    # "processStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;+Landroid/os/BatteryStats$Uid$Proc;>;"
    .end local v5    # "processList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/OppoBatteryStatsImpl$ChgProcess;>;"
    .end local v9    # "i":I
    .end local v16    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .local v2, "i":I
    .local v3, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_2
    move v9, v2

    move-object/from16 v16, v3

    .line 15532
    .end local v2    # "i":I
    .end local v3    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .restart local v9    # "i":I
    :cond_3
    add-int/lit8 v2, v9, 0x1

    .end local v9    # "i":I
    .restart local v2    # "i":I
    goto/16 :goto_0

    :cond_4
    move v9, v2

    .line 15583
    .end local v2    # "i":I
    :cond_5
    return-object v1
.end method

.method public blacklist getUidPowerList(Landroid/content/Context;)Ljava/util/ArrayList;
    .locals 12
    .param p1, "context"    # Landroid/content/Context;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/Context;",
            ")",
            "Ljava/util/ArrayList<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 15424
    const-string v0, "OppoBatteryStatsImpl"

    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 15425
    .local v1, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasUid0:Z

    .line 15426
    iput-boolean v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasUid1k:Z

    .line 15428
    new-instance v3, Lcom/android/internal/os/BatteryStatsHelper;

    invoke-direct {v3, p1, v2, v2}, Lcom/android/internal/os/BatteryStatsHelper;-><init>(Landroid/content/Context;ZZ)V

    .line 15429
    .local v3, "helper":Lcom/android/internal/os/BatteryStatsHelper;
    invoke-virtual {v3, p0}, Lcom/android/internal/os/BatteryStatsHelper;->create(Landroid/os/BatteryStats;)V

    .line 15430
    const/4 v4, 0x0

    .line 15432
    .local v4, "sippers":Ljava/util/List;, "Ljava/util/List<Lcom/android/internal/os/BatterySipper;>;"
    const/4 v5, -0x1

    :try_start_0
    invoke-virtual {v3, v2, v5}, Lcom/android/internal/os/BatteryStatsHelper;->refreshStats(II)V

    .line 15433
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsHelper;->getUsageList()Ljava/util/List;

    move-result-object v2
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move-object v4, v2

    .line 15436
    goto :goto_0

    .line 15434
    :catch_0
    move-exception v2

    .line 15435
    .local v2, "e":Ljava/lang/Exception;
    const-string v5, "error getUsageList "

    invoke-static {v0, v5, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 15437
    .end local v2    # "e":Ljava/lang/Exception;
    :goto_0
    const/4 v2, 0x0

    .line 15439
    .local v2, "N":I
    const/4 v5, 0x0

    .line 15440
    .local v5, "cnt":I
    if-eqz v4, :cond_2

    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v6

    if-lez v6, :cond_2

    .line 15441
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_1
    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v7

    if-ge v6, v7, :cond_2

    const/4 v7, 0x5

    if-ge v5, v7, :cond_2

    .line 15442
    invoke-interface {v4, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/internal/os/BatterySipper;

    .line 15443
    .local v7, "bs":Lcom/android/internal/os/BatterySipper;
    iget-object v8, v7, Lcom/android/internal/os/BatterySipper;->drainType:Lcom/android/internal/os/BatterySipper$DrainType;

    sget-object v9, Lcom/android/internal/os/BatterySipper$DrainType;->APP:Lcom/android/internal/os/BatterySipper$DrainType;

    if-ne v8, v9, :cond_1

    .line 15445
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "listType 0 uid "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v9, v7, Lcom/android/internal/os/BatterySipper;->uidObj:Landroid/os/BatteryStats$Uid;

    invoke-virtual {v9}, Landroid/os/BatteryStats$Uid;->getUid()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v9, " "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v9, v7, Lcom/android/internal/os/BatterySipper;->packageWithHighestDrain:Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " usage "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->totalPowerMah:D

    double-to-float v9, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v9, " cpu "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->cpuPowerMah:D

    double-to-float v9, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v9, " wake "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->wakeLockPowerMah:D

    double-to-float v9, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v9, " radio "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->mobileRadioPowerMah:D

    double-to-float v9, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v9, " wifi "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->wifiPowerMah:D

    double-to-float v9, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v9, " bt "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->bluetoothPowerMah:D

    double-to-float v9, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v9, " gps "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->gpsPowerMah:D

    double-to-float v9, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v9, " sensor "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->sensorPowerMah:D

    double-to-float v9, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v9, " camera "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->cameraPowerMah:D

    double-to-float v9, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v9, " flash "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->flashlightPowerMah:D

    double-to-float v9, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v9, " screen "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->screenPowerMah:D

    double-to-float v9, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v9, " cpuFgTimeMs "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->cpuFgTimeMs:J

    invoke-virtual {v8, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v9, " cpuTimeMs "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v9, v7, Lcom/android/internal/os/BatterySipper;->cpuTimeMs:J

    invoke-virtual {v8, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    .line 15453
    .local v8, "appStats":Ljava/lang/String;
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "appStats = "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v0, v9}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15454
    invoke-virtual {v1, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15455
    add-int/lit8 v5, v5, 0x1

    .line 15456
    iget-object v9, v7, Lcom/android/internal/os/BatterySipper;->uidObj:Landroid/os/BatteryStats$Uid;

    invoke-virtual {v9}, Landroid/os/BatteryStats$Uid;->getUid()I

    move-result v9

    const/4 v10, 0x1

    if-nez v9, :cond_0

    .line 15457
    iput-boolean v10, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasUid0:Z

    goto :goto_2

    .line 15458
    :cond_0
    iget-object v9, v7, Lcom/android/internal/os/BatterySipper;->uidObj:Landroid/os/BatteryStats$Uid;

    invoke-virtual {v9}, Landroid/os/BatteryStats$Uid;->getUid()I

    move-result v9

    const/16 v11, 0x3e8

    if-ne v9, v11, :cond_1

    .line 15459
    iput-boolean v10, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasUid1k:Z

    .line 15441
    .end local v7    # "bs":Lcom/android/internal/os/BatterySipper;
    .end local v8    # "appStats":Ljava/lang/String;
    :cond_1
    :goto_2
    add-int/lit8 v6, v6, 0x1

    goto/16 :goto_1

    .line 15465
    .end local v6    # "i":I
    :cond_2
    return-object v1
.end method

.method public greylist getUidStats()Landroid/util/SparseArray;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Landroid/util/SparseArray<",
            "+",
            "Landroid/os/BatteryStats$Uid;",
            ">;"
        }
    .end annotation

    .line 6692
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    return-object v0
.end method

.method public greylist getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .locals 2
    .param p1, "uid"    # I

    .line 13222
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 13223
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    if-nez v0, :cond_0

    .line 13224
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    invoke-direct {v1, p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;I)V

    move-object v0, v1

    .line 13225
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, p1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13227
    :cond_0
    return-object v0
.end method

.method public blacklist getWakeupReasonStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 1095
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public blacklist getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3087
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 3088
    .local v0, "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3089
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3090
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3092
    :cond_0
    return-object v0
.end method

.method public blacklist getWifiActiveTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6540
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getWifiBatteryStats()Landroid/os/connectivity/WifiBatteryStats;
    .locals 61

    .line 12996
    move-object/from16 v0, p0

    const/4 v1, 0x0

    .line 12997
    .local v1, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    const-wide/16 v4, 0x3e8

    mul-long/2addr v2, v4

    .line 12998
    .local v2, "rawRealTime":J
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getWifiControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;

    move-result-object v6

    .line 12999
    .local v6, "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getIdleTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    const/4 v8, 0x0

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v41

    .line 13000
    .local v41, "idleTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getScanTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v43

    .line 13001
    .local v43, "scanTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getRxTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v45

    .line 13002
    .local v45, "rxTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    aget-object v7, v7, v8

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v47

    .line 13003
    .local v47, "txTimeMs":J
    nop

    .line 13004
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v9

    mul-long/2addr v9, v4

    invoke-virtual {v0, v9, v10, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v9

    div-long v49, v9, v4

    .line 13005
    .local v49, "totalControllerActivityTimeMs":J
    add-long v9, v41, v45

    add-long v9, v9, v47

    sub-long v51, v49, v9

    .line 13007
    .local v51, "sleepTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getPowerCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v53

    .line 13008
    .local v53, "energyConsumedMaMs":J
    nop

    .line 13009
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getMonitoredRailChargeConsumedMaMs()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v55

    .line 13010
    .local v55, "monitoredRailChargeConsumedMaMs":J
    const-wide/16 v9, 0x0

    .line 13011
    .local v9, "numAppScanRequest":J
    const/4 v7, 0x0

    move-wide/from16 v57, v9

    .end local v9    # "numAppScanRequest":J
    .local v7, "i":I
    .local v57, "numAppScanRequest":J
    :goto_0
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v9}, Landroid/util/SparseArray;->size()I

    move-result v9

    if-ge v7, v9, :cond_0

    .line 13012
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v9, v7}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    iget-object v9, v9, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    invoke-virtual {v9, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->getCountLocked(I)I

    move-result v9

    int-to-long v9, v9

    add-long v57, v57, v9

    .line 13011
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 13014
    .end local v7    # "i":I
    :cond_0
    const/16 v7, 0x8

    new-array v14, v7, [J

    .line 13015
    .local v14, "timeInStateMs":[J
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_1
    if-ge v9, v7, :cond_1

    .line 13016
    invoke-virtual {v0, v9, v2, v3, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getWifiStateTime(IJI)J

    move-result-wide v10

    div-long/2addr v10, v4

    aput-wide v10, v14, v9

    .line 13015
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    .line 13018
    .end local v9    # "i":I
    :cond_1
    const/16 v7, 0xd

    new-array v15, v7, [J

    .line 13019
    .local v15, "timeInSupplStateMs":[J
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_2
    if-ge v9, v7, :cond_2

    .line 13020
    invoke-virtual {v0, v9, v2, v3, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getWifiSupplStateTime(IJI)J

    move-result-wide v10

    div-long/2addr v10, v4

    aput-wide v10, v15, v9

    .line 13019
    add-int/lit8 v9, v9, 0x1

    goto :goto_2

    .line 13022
    .end local v9    # "i":I
    :cond_2
    const/4 v7, 0x5

    new-array v12, v7, [J

    .line 13023
    .local v12, "timeSignalStrengthTimeMs":[J
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_3
    if-ge v9, v7, :cond_3

    .line 13024
    invoke-virtual {v0, v9, v2, v3, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getWifiSignalStrengthTime(IJI)J

    move-result-wide v10

    div-long/2addr v10, v4

    aput-wide v10, v12, v9

    .line 13023
    add-int/lit8 v9, v9, 0x1

    goto :goto_3

    .line 13026
    .end local v9    # "i":I
    :cond_3
    new-instance v7, Landroid/os/connectivity/WifiBatteryStats;

    move-object v9, v7

    .line 13027
    invoke-virtual {v0, v2, v3, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v10

    div-long/2addr v10, v4

    .line 13028
    invoke-virtual {v0, v2, v3, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getWifiActiveTime(JI)J

    move-result-wide v16

    div-long v4, v16, v4

    move-object/from16 v59, v12

    .end local v12    # "timeSignalStrengthTimeMs":[J
    .local v59, "timeSignalStrengthTimeMs":[J
    move-wide v12, v4

    .line 13029
    const/4 v4, 0x3

    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v16

    move-object v5, v14

    move-object/from16 v60, v15

    .end local v14    # "timeInStateMs":[J
    .end local v15    # "timeInSupplStateMs":[J
    .local v5, "timeInStateMs":[J
    .local v60, "timeInSupplStateMs":[J
    move-wide/from16 v14, v16

    .line 13030
    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v16

    .line 13031
    const/4 v4, 0x2

    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v18

    .line 13032
    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v20

    move-wide/from16 v22, v51

    move-wide/from16 v24, v43

    move-wide/from16 v26, v41

    move-wide/from16 v28, v45

    move-wide/from16 v30, v47

    move-wide/from16 v32, v53

    move-wide/from16 v34, v57

    move-object/from16 v36, v5

    move-object/from16 v37, v59

    move-object/from16 v38, v60

    move-wide/from16 v39, v55

    invoke-direct/range {v9 .. v40}, Landroid/os/connectivity/WifiBatteryStats;-><init>(JJJJJJJJJJJJJ[J[J[JJ)V

    .line 13026
    return-object v7
.end method

.method public blacklist getWifiControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    .line 6597
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    return-object v0
.end method

.method public blacklist getWifiIfaces()[Ljava/lang/String;
    .locals 2

    .line 6313
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    .line 6314
    :try_start_0
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    monitor-exit v0

    return-object v1

    .line 6315
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public blacklist getWifiMulticastWakelockCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6531
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public blacklist getWifiMulticastWakelockTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6526
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getWifiOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6536
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getWifiSignalStrengthCount(II)I
    .locals 1
    .param p1, "strengthBin"    # I
    .param p2, "which"    # I

    .line 6583
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public blacklist getWifiSignalStrengthTime(IJI)J
    .locals 2
    .param p1, "strengthBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6578
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getWifiSignalStrengthTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 154
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getWifiSignalStrengthTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public blacklist getWifiSignalStrengthTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    .locals 1
    .param p1, "strengthBin"    # I

    .line 6587
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public blacklist getWifiStateCount(II)I
    .locals 1
    .param p1, "wifiState"    # I
    .param p2, "which"    # I

    .line 6555
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public blacklist getWifiStateTime(IJI)J
    .locals 2
    .param p1, "wifiState"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6550
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getWifiStateTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 154
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getWifiStateTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public blacklist getWifiStateTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    .locals 1
    .param p1, "wifiState"    # I

    .line 6559
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public blacklist getWifiSupplStateCount(II)I
    .locals 1
    .param p1, "state"    # I
    .param p2, "which"    # I

    .line 6569
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public blacklist getWifiSupplStateTime(IJI)J
    .locals 2
    .param p1, "state"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6564
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getWifiSupplStateTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 154
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getWifiSupplStateTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public blacklist getWifiSupplStateTimer(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    .locals 1
    .param p1, "state"    # I

    .line 6573
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public blacklist hasBluetoothActivityReporting()Z
    .locals 1

    .line 6607
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasBluetoothReporting:Z

    return v0
.end method

.method public blacklist hasModemActivityReporting()Z
    .locals 1

    .line 6617
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasModemReporting:Z

    return v0
.end method

.method public blacklist hasWifiActivityReporting()Z
    .locals 1

    .line 6612
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasWifiReporting:Z

    return v0
.end method

.method blacklist initDischarge()V
    .locals 2

    .line 10677
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 10678
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 10679
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 10680
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 10681
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 10682
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 10683
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 10684
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 10685
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10686
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10687
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10688
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10689
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10690
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10691
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10692
    return-void
.end method

.method blacklist initTimes(JJ)V
    .locals 2
    .param p1, "uptime"    # J
    .param p3, "realtime"    # J

    .line 10667
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartClockTime:J

    .line 10668
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->init(JJ)V

    .line 10669
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->init(JJ)V

    .line 10670
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRealtime:J

    .line 10671
    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUptime:J

    .line 10672
    iput-wide p3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRealtimeStart:J

    .line 10673
    iput-wide p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUptimeStart:J

    .line 10674
    return-void
.end method

.method public blacklist isCharging()Z
    .locals 1

    .line 10650
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCharging:Z

    return v0
.end method

.method public greylist isOnBattery()Z
    .locals 1

    .line 10646
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    return v0
.end method

.method public blacklist isOnBatteryLocked()Z
    .locals 1

    .line 11845
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    return v0
.end method

.method public blacklist isOnBatteryScreenOffLocked()Z
    .locals 1

    .line 11849
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    return v0
.end method

.method public blacklist isScreenDoze(I)Z
    .locals 1
    .param p1, "state"    # I

    .line 10663
    const/4 v0, 0x3

    if-eq p1, v0, :cond_1

    const/4 v0, 0x4

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method

.method public blacklist isScreenOff(I)Z
    .locals 1
    .param p1, "state"    # I

    .line 10659
    const/4 v0, 0x1

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public blacklist isScreenOn(I)Z
    .locals 1
    .param p1, "state"    # I

    .line 10654
    const/4 v0, 0x2

    if-eq p1, v0, :cond_1

    const/4 v0, 0x5

    if-eq p1, v0, :cond_1

    const/4 v0, 0x6

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method

.method public synthetic blacklist lambda$readKernelUidCpuActiveTimesLocked$2$OppoBatteryStatsImpl(ZILjava/lang/Long;)V
    .locals 4
    .param p1, "onBattery"    # Z
    .param p2, "uid"    # I
    .param p3, "cpuActiveTimesMs"    # Ljava/lang/Long;

    .line 12258
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 12259
    invoke-static {p2}, Landroid/os/Process;->isIsolated(I)Z

    move-result v0

    const-string v1, "OppoBatteryStatsImpl"

    if-eqz v0, :cond_0

    .line 12260
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->removeUid(I)V

    .line 12261
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got active times for an isolated uid with no mapping: "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12262
    return-void

    .line 12264
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-virtual {v0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v0

    if-nez v0, :cond_1

    .line 12265
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got active times for an invalid user\'s uid "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12266
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->removeUid(I)V

    .line 12267
    return-void

    .line 12269
    :cond_1
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    .line 12270
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p3}, Ljava/lang/Long;->longValue()J

    move-result-wide v2

    invoke-virtual {v1, v2, v3, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12271
    return-void
.end method

.method public synthetic blacklist lambda$readKernelUidCpuClusterTimesLocked$3$OppoBatteryStatsImpl(ZI[J)V
    .locals 3
    .param p1, "onBattery"    # Z
    .param p2, "uid"    # I
    .param p3, "cpuClusterTimesMs"    # [J

    .line 12287
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 12288
    invoke-static {p2}, Landroid/os/Process;->isIsolated(I)Z

    move-result v0

    const-string v1, "OppoBatteryStatsImpl"

    if-eqz v0, :cond_0

    .line 12289
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->removeUid(I)V

    .line 12290
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got cluster times for an isolated uid with no mapping: "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12291
    return-void

    .line 12293
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-virtual {v0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v0

    if-nez v0, :cond_1

    .line 12294
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got cluster times for an invalid user\'s uid "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12295
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->removeUid(I)V

    .line 12296
    return-void

    .line 12298
    :cond_1
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    .line 12299
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual {v1, p3, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    .line 12300
    return-void
.end method

.method public synthetic blacklist lambda$readKernelUidCpuFreqTimesLocked$1$OppoBatteryStatsImpl(ZZZIII[J)V
    .locals 21
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z
    .param p3, "perClusterTimesAvailable"    # Z
    .param p4, "numClusters"    # I
    .param p5, "numWakelocks"    # I
    .param p6, "uid"    # I
    .param p7, "cpuFreqTimeMs"    # [J

    .line 12145
    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v2, p4

    move-object/from16 v3, p7

    move/from16 v4, p6

    invoke-virtual {v0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 12146
    .end local p6    # "uid":I
    .local v4, "uid":I
    invoke-static {v4}, Landroid/os/Process;->isIsolated(I)Z

    move-result v5

    const-string v6, "OppoBatteryStatsImpl"

    if-eqz v5, :cond_0

    .line 12147
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v5, v4}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->removeUid(I)V

    .line 12148
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Got freq readings for an isolated uid with no mapping: "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12149
    return-void

    .line 12151
    :cond_0
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    invoke-virtual {v5, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v5

    if-nez v5, :cond_1

    .line 12152
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Got freq readings for an invalid user\'s uid "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12153
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v5, v4}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->removeUid(I)V

    .line 12154
    return-void

    .line 12156
    :cond_1
    invoke-virtual {v0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v5

    .line 12157
    .local v5, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v6, :cond_2

    iget-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->getSize()I

    move-result v6

    array-length v7, v3

    if-eq v6, v7, :cond_3

    .line 12158
    :cond_2
    iget-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 12159
    new-instance v6, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    .line 12161
    :cond_3
    iget-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual {v6, v3, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    .line 12162
    iget-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v6, :cond_4

    iget-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    .line 12163
    invoke-virtual {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->getSize()I

    move-result v6

    array-length v7, v3

    if-eq v6, v7, :cond_5

    .line 12164
    :cond_4
    iget-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 12165
    new-instance v6, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    .line 12168
    :cond_5
    iget-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    move/from16 v7, p2

    invoke-virtual {v6, v3, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    .line 12170
    if-eqz p3, :cond_f

    .line 12171
    iget-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    if-eqz v6, :cond_6

    iget-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    array-length v6, v6

    if-eq v6, v2, :cond_7

    .line 12173
    :cond_6
    iget-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-static {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 12174
    new-array v6, v2, [[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iput-object v6, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 12176
    :cond_7
    if-lez p5, :cond_8

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    if-nez v6, :cond_8

    .line 12177
    new-array v6, v2, [[J

    iput-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    .line 12180
    :cond_8
    const/4 v6, 0x0

    .line 12181
    .local v6, "freqIndex":I
    const/4 v8, 0x0

    .local v8, "cluster":I
    :goto_0
    if-ge v8, v2, :cond_f

    .line 12182
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v9, v8}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v9

    .line 12183
    .local v9, "speedsInCluster":I
    iget-object v10, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v10, v10, v8

    if-eqz v10, :cond_9

    iget-object v10, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v10, v10, v8

    array-length v10, v10

    if-eq v10, v9, :cond_a

    .line 12185
    :cond_9
    iget-object v10, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v10, v10, v8

    invoke-static {v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 12186
    iget-object v10, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    new-array v11, v9, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aput-object v11, v10, v8

    .line 12189
    :cond_a
    if-lez p5, :cond_b

    iget-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v11, v10, v8

    if-nez v11, :cond_b

    .line 12190
    new-array v11, v9, [J

    aput-object v11, v10, v8

    .line 12192
    :cond_b
    iget-object v10, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v10, v10, v8

    .line 12193
    .local v10, "cpuTimesUs":[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;
    const/4 v11, 0x0

    .local v11, "speed":I
    :goto_1
    if-ge v11, v9, :cond_e

    .line 12194
    aget-object v12, v10, v11

    if-nez v12, :cond_c

    .line 12195
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v12, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v12, v10, v11

    .line 12198
    :cond_c
    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    const-wide/16 v13, 0x3e8

    if-eqz v12, :cond_d

    .line 12199
    aget-wide v15, v3, v6

    mul-long/2addr v15, v13

    const-wide/16 v17, 0x32

    mul-long v15, v15, v17

    const-wide/16 v17, 0x64

    div-long v15, v15, v17

    .line 12201
    .local v15, "appAllocationUs":J
    aget-object v12, v12, v8

    aget-wide v17, v12, v11

    aget-wide v19, v3, v6

    mul-long v19, v19, v13

    sub-long v19, v19, v15

    add-long v17, v17, v19

    aput-wide v17, v12, v11

    move-wide v12, v15

    goto :goto_2

    .line 12204
    .end local v15    # "appAllocationUs":J
    :cond_d
    aget-wide v15, v3, v6

    mul-long/2addr v15, v13

    move-wide v12, v15

    .line 12206
    .local v12, "appAllocationUs":J
    :goto_2
    aget-object v14, v10, v11

    invoke-virtual {v14, v12, v13, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12207
    nop

    .end local v12    # "appAllocationUs":J
    add-int/lit8 v6, v6, 0x1

    .line 12193
    add-int/lit8 v11, v11, 0x1

    goto :goto_1

    .line 12181
    .end local v9    # "speedsInCluster":I
    .end local v10    # "cpuTimesUs":[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;
    .end local v11    # "speed":I
    :cond_e
    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    .line 12211
    .end local v6    # "freqIndex":I
    .end local v8    # "cluster":I
    :cond_f
    return-void
.end method

.method public synthetic blacklist lambda$readKernelUidCpuTimesLocked$0$OppoBatteryStatsImpl(IZLandroid/util/SparseLongArray;I[J)V
    .locals 17
    .param p1, "numWakelocks"    # I
    .param p2, "onBattery"    # Z
    .param p3, "updatedUids"    # Landroid/util/SparseLongArray;
    .param p4, "uid"    # I
    .param p5, "timesUs"    # [J

    .line 12031
    move-object/from16 v0, p0

    move/from16 v1, p2

    move-object/from16 v2, p3

    const/4 v3, 0x0

    aget-wide v3, p5, v3

    .local v3, "userTimeUs":J
    const/4 v5, 0x1

    aget-wide v5, p5, v5

    .line 12033
    .local v5, "systemTimeUs":J
    move/from16 v7, p4

    invoke-virtual {v0, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v7

    .line 12034
    .end local p4    # "uid":I
    .local v7, "uid":I
    invoke-static {v7}, Landroid/os/Process;->isIsolated(I)Z

    move-result v8

    if-eqz v8, :cond_0

    .line 12037
    iget-object v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    invoke-virtual {v8, v7}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->removeUid(I)V

    .line 12041
    return-void

    .line 12043
    :cond_0
    iget-object v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    invoke-virtual {v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v8

    const-string v9, "OppoBatteryStatsImpl"

    if-nez v8, :cond_1

    .line 12044
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Got readings for an invalid user\'s uid "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v9, v8}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12045
    iget-object v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    invoke-virtual {v8, v7}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->removeUid(I)V

    .line 12046
    return-void

    .line 12048
    :cond_1
    invoke-virtual {v0, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v8

    .line 12051
    .local v8, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-wide v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    add-long/2addr v10, v3

    iput-wide v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12052
    iget-wide v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    add-long/2addr v10, v5

    iput-wide v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    .line 12054
    const/4 v10, 0x0

    .line 12064
    .local v10, "sb":Ljava/lang/StringBuilder;
    if-lez p1, :cond_2

    .line 12068
    const-wide/16 v11, 0x32

    mul-long v13, v3, v11

    const-wide/16 v15, 0x64

    div-long v3, v13, v15

    .line 12069
    mul-long/2addr v11, v5

    div-long v5, v11, v15

    .line 12072
    :cond_2
    if-eqz v10, :cond_3

    .line 12073
    const-string v11, "  adding to uid="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v11, v8, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUid:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, ": u="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12074
    const-wide/16 v11, 0x3e8

    div-long v13, v3, v11

    invoke-static {v13, v14, v10}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 12075
    const-string v13, " s="

    invoke-virtual {v10, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12076
    div-long v11, v5, v11

    invoke-static {v11, v12, v10}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 12077
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v9, v11}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12080
    :cond_3
    iget-object v9, v8, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v9, v3, v4, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12081
    iget-object v9, v8, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v9, v5, v6, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12082
    if-eqz v2, :cond_4

    .line 12083
    invoke-virtual {v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getUid()I

    move-result v9

    add-long v11, v3, v5

    invoke-virtual {v2, v9, v11, v12}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 12085
    :cond_4
    return-void
.end method

.method public blacklist mapUid(I)I
    .locals 2
    .param p1, "uid"    # I

    .line 4000
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    const/4 v1, -0x1

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseIntArray;->get(II)I

    move-result v0

    .line 4001
    .local v0, "isolated":I
    if-lez v0, :cond_0

    move v1, v0

    goto :goto_0

    :cond_0
    move v1, p1

    :goto_0
    return v1
.end method

.method public blacklist markPartialTimersAsEligible()V
    .locals 5

    .line 11935
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-static {v0, v1}, Lcom/android/internal/util/ArrayUtils;->referenceEquals(Ljava/util/ArrayList;Ljava/util/ArrayList;)Z

    move-result v0

    const/4 v1, 0x1

    if-eqz v0, :cond_1

    .line 11937
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    .line 11938
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iput-boolean v1, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->mInList:Z

    .line 11937
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .end local v0    # "i":I
    :cond_0
    goto :goto_3

    .line 11943
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v1

    .restart local v0    # "i":I
    :goto_1
    if-ltz v0, :cond_2

    .line 11944
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    const/4 v3, 0x0

    iput-boolean v3, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->mInList:Z

    .line 11943
    add-int/lit8 v0, v0, -0x1

    goto :goto_1

    .line 11946
    .end local v0    # "i":I
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 11949
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 11950
    .local v0, "numPartialTimers":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_2
    if-ge v2, v0, :cond_3

    .line 11951
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 11952
    .local v3, "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;
    iput-boolean v1, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->mInList:Z

    .line 11953
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11950
    .end local v3    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 11956
    .end local v0    # "numPartialTimers":I
    .end local v2    # "i":I
    :cond_3
    :goto_3
    return-void
.end method

.method public blacklist noteActivityPausedLocked(I)V
    .locals 3
    .param p1, "uid"    # I

    .line 5642
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5643
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteActivityPausedLocked(J)V

    .line 5644
    return-void
.end method

.method public blacklist noteActivityPausedLocked(ILandroid/content/ComponentName;)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "component"    # Landroid/content/ComponentName;

    .line 5551
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteActivityPausedLocked(I)V

    .line 5553
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5554
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x100

    invoke-virtual {v0, v1}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 5555
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeMessages(I)V

    .line 5558
    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_2

    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedUid:I

    if-ne p1, v0, :cond_2

    .line 5559
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->pausedBatteryLevel:I

    .line 5560
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->pausedElapsedRealtime:J

    .line 5561
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedElapsedRealtime:J

    sub-long/2addr v0, v2

    const-wide/32 v2, 0xea60

    div-long/2addr v0, v2

    .line 5562
    .local v0, "activityFocusedTimeInMin":J
    sget v2, Lcom/android/internal/os/OppoBatteryStatsImpl;->ACTIVITY_MONITOR_MIN_TIME:I

    int-to-long v2, v2

    cmp-long v2, v0, v2

    if-lez v2, :cond_2

    .line 5563
    new-instance v2, Ljava/util/HashMap;

    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V

    .line 5564
    .local v2, "eventMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedPackage:Ljava/lang/String;

    const-string v4, "appname"

    invoke-interface {v2, v4, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5565
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedClass:Ljava/lang/String;

    const-string v4, "activity"

    invoke-interface {v2, v4, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5566
    invoke-static {v0, v1}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v3

    const-string v4, "duration"

    invoke-interface {v2, v4, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5567
    iget v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedBatteryLevel:I

    invoke-static {v3}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v3

    const-string/jumbo v4, "startlevel"

    invoke-interface {v2, v4, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5568
    iget v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->pausedBatteryLevel:I

    invoke-static {v3}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v3

    const-string v4, "endlevel"

    invoke-interface {v2, v4, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5569
    iget v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedBatteryRealtimeCapacity:I

    invoke-direct {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getBatteryRealtimeCapacity()I

    move-result v4

    sub-int/2addr v3, v4

    invoke-static {v3}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v3

    const-string v4, "deltaBC"

    invoke-interface {v2, v4, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5570
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mContext:Landroid/content/Context;

    if-eqz v3, :cond_1

    .line 5571
    const/4 v4, 0x0

    const-string v5, "20089"

    const-string v6, "activity_battery_record"

    invoke-static {v3, v5, v6, v2, v4}, Loplus/util/OplusStatistics;->onCommon(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Z)V

    goto :goto_0

    .line 5573
    :cond_1
    const-string v3, "OppoBatteryStatsImpl"

    const-string/jumbo v4, "noteRecordSensorForOppoLocked ,but context is null!"

    invoke-static {v3, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5577
    .end local v0    # "activityFocusedTimeInMin":J
    .end local v2    # "eventMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
    :cond_2
    :goto_0
    return-void
.end method

.method public blacklist noteActivityResumedLocked(I)V
    .locals 3
    .param p1, "uid"    # I

    .line 5637
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5638
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteActivityResumedLocked(J)V

    .line 5639
    return-void
.end method

.method public blacklist noteActivityResumedLocked(ILandroid/content/ComponentName;)V
    .locals 4
    .param p1, "uid"    # I
    .param p2, "component"    # Landroid/content/ComponentName;

    .line 5530
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteActivityResumedLocked(I)V

    .line 5532
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5534
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_1

    if-eqz p2, :cond_1

    .line 5535
    iput p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedUid:I

    .line 5536
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedBatteryLevel:I

    .line 5537
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedElapsedRealtime:J

    .line 5538
    invoke-virtual {p2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedPackage:Ljava/lang/String;

    .line 5539
    invoke-virtual {p2}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedClass:Ljava/lang/String;

    .line 5540
    invoke-direct {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getBatteryRealtimeCapacity()I

    move-result v0

    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->resumedBatteryRealtimeCapacity:I

    .line 5542
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x100

    invoke-virtual {v0, v1}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 5543
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeMessages(I)V

    .line 5545
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 5546
    .local v0, "msg_checkAverageCurrent":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    sget v2, Lcom/android/internal/os/OppoBatteryStatsImpl;->ACTIVITY_MONITOR_MIN_TIME:I

    mul-int/lit8 v2, v2, 0x3c

    mul-int/lit16 v2, v2, 0x3e8

    int-to-long v2, v2

    invoke-virtual {v1, v0, v2, v3}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 5548
    .end local v0    # "msg_checkAverageCurrent":Landroid/os/Message;
    :cond_1
    return-void
.end method

.method public blacklist noteAlarmFinishLocked(Ljava/lang/String;Landroid/os/WorkSource;I)V
    .locals 1
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "workSource"    # Landroid/os/WorkSource;
    .param p3, "uid"    # I

    .line 4132
    const/16 v0, 0x400d

    invoke-direct {p0, v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;I)V

    .line 4133
    return-void
.end method

.method public blacklist noteAlarmStartLocked(Ljava/lang/String;Landroid/os/WorkSource;I)V
    .locals 1
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "workSource"    # Landroid/os/WorkSource;
    .param p3, "uid"    # I

    .line 4128
    const v0, 0x800d

    invoke-direct {p0, v0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;I)V

    .line 4129
    return-void
.end method

.method public greylist noteAudioOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5433
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnNesting:I

    if-nez v0, :cond_0

    .line 5434
    return-void

    .line 5436
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5437
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5438
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5439
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnNesting:I

    if-nez v4, :cond_1

    .line 5440
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x400001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5443
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5444
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5446
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteAudioTurnedOffLocked(J)V

    .line 5447
    return-void
.end method

.method public greylist noteAudioOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5417
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5418
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5419
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5420
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnNesting:I

    if-nez v4, :cond_0

    .line 5421
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x400000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5424
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5425
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5427
    :cond_0
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnNesting:I

    .line 5428
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteAudioTurnedOnLocked(J)V

    .line 5429
    return-void
.end method

.method public blacklist noteBluetoothScanResultsFromSourceLocked(Landroid/os/WorkSource;I)V
    .locals 6
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "numNewResults"    # I

    .line 5838
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 5839
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 5840
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 5841
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v3

    invoke-virtual {v3, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteBluetoothScanResultsLocked(I)V

    .line 5839
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 5844
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 5845
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 5846
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 5847
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 5848
    .local v3, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 5849
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v5

    invoke-virtual {v5, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteBluetoothScanResultsLocked(I)V

    .line 5846
    .end local v3    # "wc":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 5852
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public blacklist noteBluetoothScanStartedFromSourceLocked(Landroid/os/WorkSource;Z)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "isUnoptimized"    # Z

    .line 5769
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 5770
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 5771
    const/4 v2, 0x0

    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v3

    invoke-direct {p0, v2, v3, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5770
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 5774
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 5775
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 5776
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 5777
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    const/4 v4, -0x1

    invoke-direct {p0, v3, v4, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5776
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 5780
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public blacklist noteBluetoothScanStoppedFromSourceLocked(Landroid/os/WorkSource;Z)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "isUnoptimized"    # Z

    .line 5807
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 5808
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 5809
    const/4 v2, 0x0

    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v3

    invoke-direct {p0, v2, v3, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5808
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 5812
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 5813
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 5814
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 5815
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    const/4 v4, -0x1

    invoke-direct {p0, v3, v4, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5814
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 5818
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public blacklist noteCameraOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5702
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnNesting:I

    if-nez v0, :cond_0

    .line 5703
    return-void

    .line 5705
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5706
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5707
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5708
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnNesting:I

    if-nez v4, :cond_1

    .line 5709
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x200001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5712
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5713
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5715
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteCameraTurnedOffLocked(J)V

    .line 5716
    return-void
.end method

.method public blacklist noteCameraOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5688
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5689
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5690
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5691
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnNesting:I

    add-int/lit8 v5, v4, 0x1

    iput v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnNesting:I

    if-nez v4, :cond_0

    .line 5692
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x200000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5695
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5696
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5698
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteCameraTurnedOnLocked(J)V

    .line 5699
    return-void
.end method

.method public blacklist noteChangeWakelockFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;ILandroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IZ)V
    .locals 24
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I
    .param p6, "newWs"    # Landroid/os/WorkSource;
    .param p7, "newPid"    # I
    .param p8, "newName"    # Ljava/lang/String;
    .param p9, "newHistoryName"    # Ljava/lang/String;
    .param p10, "newType"    # I
    .param p11, "newUnimportantForLogging"    # Z

    .line 4432
    move-object/from16 v12, p0

    move-object/from16 v13, p1

    move-object/from16 v14, p6

    iget-object v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v15

    .line 4433
    .local v15, "elapsedRealtime":J
    iget-object v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v17

    .line 4435
    .local v17, "uptime":J
    invoke-static {v13, v14}, Landroid/os/WorkSource;->diffChains(Landroid/os/WorkSource;Landroid/os/WorkSource;)[Ljava/util/ArrayList;

    move-result-object v19

    .line 4442
    .local v19, "wcs":[Ljava/util/List;, "[Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    invoke-virtual/range {p6 .. p6}, Landroid/os/WorkSource;->size()I

    move-result v10

    .line 4443
    .local v10, "NN":I
    const/4 v0, 0x0

    move v11, v0

    .local v11, "i":I
    :goto_0
    if-ge v11, v10, :cond_0

    .line 4444
    invoke-virtual {v14, v11}, Landroid/os/WorkSource;->get(I)I

    move-result v1

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v2, p7

    move-object/from16 v4, p8

    move-object/from16 v5, p9

    move/from16 v6, p10

    move/from16 v7, p11

    move-wide v8, v15

    move/from16 v20, v10

    move/from16 v21, v11

    .end local v10    # "NN":I
    .end local v11    # "i":I
    .local v20, "NN":I
    .local v21, "i":I
    move-wide/from16 v10, v17

    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4443
    add-int/lit8 v11, v21, 0x1

    move/from16 v10, v20

    .end local v21    # "i":I
    .restart local v11    # "i":I
    goto :goto_0

    .end local v20    # "NN":I
    .restart local v10    # "NN":I
    :cond_0
    move/from16 v20, v10

    move/from16 v21, v11

    .line 4447
    .end local v10    # "NN":I
    .end local v11    # "i":I
    .restart local v20    # "NN":I
    if-eqz v19, :cond_3

    .line 4448
    const/4 v0, 0x0

    aget-object v10, v19, v0

    .line 4449
    .local v10, "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v10, :cond_2

    .line 4450
    const/4 v0, 0x0

    move v11, v0

    .restart local v11    # "i":I
    :goto_1
    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v0

    if-ge v11, v0, :cond_1

    .line 4451
    invoke-interface {v10, v11}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v21, v0

    check-cast v21, Landroid/os/WorkSource$WorkChain;

    .line 4452
    .local v21, "newChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual/range {v21 .. v21}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object/from16 v0, p0

    move/from16 v2, p7

    move-object/from16 v3, v21

    move-object/from16 v4, p8

    move-object/from16 v5, p9

    move/from16 v6, p10

    move/from16 v7, p11

    move-wide v8, v15

    move-object/from16 v22, v10

    move/from16 v23, v11

    .end local v10    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v11    # "i":I
    .local v22, "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v23, "i":I
    move-wide/from16 v10, v17

    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4450
    .end local v21    # "newChain":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v11, v23, 0x1

    move-object/from16 v10, v22

    .end local v23    # "i":I
    .restart local v11    # "i":I
    goto :goto_1

    .end local v22    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v10    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_1
    move-object/from16 v22, v10

    move/from16 v23, v11

    .end local v10    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v11    # "i":I
    .restart local v22    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v23    # "i":I
    goto :goto_2

    .line 4449
    .end local v22    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v23    # "i":I
    .restart local v10    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_2
    move-object/from16 v22, v10

    .line 4460
    .end local v10    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_3
    :goto_2
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v11

    .line 4461
    .local v11, "NO":I
    const/4 v0, 0x0

    move v9, v0

    .local v9, "i":I
    :goto_3
    if-ge v9, v11, :cond_4

    .line 4462
    invoke-virtual {v13, v9}, Landroid/os/WorkSource;->get(I)I

    move-result v1

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-wide v7, v15

    move/from16 v21, v9

    .end local v9    # "i":I
    .local v21, "i":I
    move-wide/from16 v9, v17

    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4461
    add-int/lit8 v9, v21, 0x1

    .end local v21    # "i":I
    .restart local v9    # "i":I
    goto :goto_3

    :cond_4
    move/from16 v21, v9

    .line 4465
    .end local v9    # "i":I
    if-eqz v19, :cond_7

    .line 4466
    const/4 v0, 0x1

    aget-object v9, v19, v0

    .line 4467
    .local v9, "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v9, :cond_6

    .line 4468
    const/4 v0, 0x0

    move v10, v0

    .local v10, "i":I
    :goto_4
    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v0

    if-ge v10, v0, :cond_5

    .line 4469
    invoke-interface {v9, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v21, v0

    check-cast v21, Landroid/os/WorkSource$WorkChain;

    .line 4470
    .local v21, "goneChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual/range {v21 .. v21}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v3, v21

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-wide v7, v15

    move-object/from16 v22, v9

    move/from16 v23, v10

    .end local v9    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v10    # "i":I
    .local v22, "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v23    # "i":I
    move-wide/from16 v9, v17

    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4468
    .end local v21    # "goneChain":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v10, v23, 0x1

    move-object/from16 v9, v22

    .end local v23    # "i":I
    .restart local v10    # "i":I
    goto :goto_4

    .end local v22    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v9    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_5
    move-object/from16 v22, v9

    move/from16 v23, v10

    .end local v9    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v10    # "i":I
    .restart local v22    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v23    # "i":I
    goto :goto_5

    .line 4467
    .end local v22    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v23    # "i":I
    .restart local v9    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_6
    move-object/from16 v22, v9

    .line 4475
    .end local v9    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_7
    :goto_5
    return-void
.end method

.method public blacklist noteConnectivityChangedLocked(ILjava/lang/String;)V
    .locals 13
    .param p1, "type"    # I
    .param p2, "extra"    # Ljava/lang/String;

    .line 4940
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4941
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4942
    .local v11, "uptime":J
    const/16 v6, 0x9

    move-object v1, p0

    move-wide v2, v9

    move-wide v4, v11

    move-object v7, p2

    move v8, p1

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4944
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumConnectivityChange:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumConnectivityChange:I

    .line 4945
    return-void
.end method

.method public blacklist noteCurrentTimeChangedLocked()V
    .locals 13

    .line 4016
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v7

    .line 4017
    .local v7, "currentTime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4018
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4019
    .local v11, "uptime":J
    move-object v0, p0

    move-wide v1, v7

    move-wide v3, v9

    move-wide v5, v11

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->recordCurrentTimeChangeLocked(JJJ)V

    .line 4020
    return-void
.end method

.method public blacklist noteDeviceIdleModeLocked(ILjava/lang/String;I)V
    .locals 17
    .param p1, "mode"    # I
    .param p2, "activeReason"    # Ljava/lang/String;
    .param p3, "activeUid"    # I

    .line 5033
    move-object/from16 v8, p0

    move/from16 v9, p1

    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v10

    .line 5034
    .local v10, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v12

    .line 5035
    .local v12, "uptime":J
    const/4 v15, 0x2

    const/4 v7, 0x1

    if-ne v9, v15, :cond_0

    move v0, v7

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 5036
    .local v0, "nowIdling":Z
    :goto_0
    iget-boolean v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdling:Z

    if-eqz v1, :cond_1

    if-nez v0, :cond_1

    if-nez p2, :cond_1

    .line 5039
    const/4 v0, 0x1

    move v6, v0

    goto :goto_1

    .line 5041
    :cond_1
    move v6, v0

    .end local v0    # "nowIdling":Z
    .local v6, "nowIdling":Z
    :goto_1
    if-ne v9, v7, :cond_2

    move v0, v7

    goto :goto_2

    :cond_2
    const/4 v0, 0x0

    .line 5042
    .local v0, "nowLightIdling":Z
    :goto_2
    iget-boolean v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdling:Z

    if-eqz v1, :cond_3

    if-nez v0, :cond_3

    if-nez v6, :cond_3

    if-nez p2, :cond_3

    .line 5045
    const/4 v0, 0x1

    move v5, v0

    goto :goto_3

    .line 5047
    :cond_3
    move v5, v0

    .end local v0    # "nowLightIdling":Z
    .local v5, "nowLightIdling":Z
    :goto_3
    if-eqz p2, :cond_6

    iget-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdling:Z

    if-nez v0, :cond_5

    iget-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdling:Z

    if-eqz v0, :cond_4

    goto :goto_4

    :cond_4
    move v14, v5

    move v15, v6

    goto :goto_5

    .line 5048
    :cond_5
    :goto_4
    const/16 v16, 0xa

    move-object/from16 v0, p0

    move-wide v1, v10

    move-wide v3, v12

    move v14, v5

    .end local v5    # "nowLightIdling":Z
    .local v14, "nowLightIdling":Z
    move/from16 v5, v16

    move v15, v6

    .end local v6    # "nowIdling":Z
    .local v15, "nowIdling":Z
    move-object/from16 v6, p2

    move/from16 v7, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_5

    .line 5047
    .end local v14    # "nowLightIdling":Z
    .end local v15    # "nowIdling":Z
    .restart local v5    # "nowLightIdling":Z
    .restart local v6    # "nowIdling":Z
    :cond_6
    move v14, v5

    move v15, v6

    .line 5051
    .end local v5    # "nowLightIdling":Z
    .end local v6    # "nowIdling":Z
    .restart local v14    # "nowLightIdling":Z
    .restart local v15    # "nowIdling":Z
    :goto_5
    iget-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdling:Z

    if-ne v0, v15, :cond_7

    iget-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdling:Z

    if-eq v0, v14, :cond_a

    .line 5053
    :cond_7
    if-eqz v15, :cond_8

    const/4 v0, 0x2

    .local v0, "statsmode":I
    goto :goto_6

    .line 5054
    .end local v0    # "statsmode":I
    :cond_8
    if-eqz v14, :cond_9

    const/4 v0, 0x1

    .restart local v0    # "statsmode":I
    goto :goto_6

    .line 5055
    .end local v0    # "statsmode":I
    :cond_9
    nop

    .line 5061
    :cond_a
    :goto_6
    iget-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdling:Z

    if-eq v0, v15, :cond_d

    .line 5062
    iput-boolean v15, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdling:Z

    .line 5063
    if-eqz v15, :cond_b

    const/16 v0, 0x8

    goto :goto_7

    :cond_b
    const/4 v0, 0x0

    .line 5064
    .local v0, "stepState":I
    :goto_7
    iget v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    iget v2, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v3, v2, 0x8

    xor-int/2addr v3, v0

    or-int/2addr v1, v3

    iput v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    .line 5065
    and-int/lit8 v1, v2, -0x9

    or-int/2addr v1, v0

    iput v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    .line 5066
    if-eqz v15, :cond_c

    .line 5067
    iget-object v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_8

    .line 5069
    :cond_c
    iget-object v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5072
    .end local v0    # "stepState":I
    :cond_d
    :goto_8
    iget-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdling:Z

    if-eq v0, v14, :cond_f

    .line 5073
    iput-boolean v14, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdling:Z

    .line 5074
    if-eqz v14, :cond_e

    .line 5075
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_9

    .line 5077
    :cond_e
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5080
    :cond_f
    :goto_9
    iget v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleMode:I

    if-eq v0, v9, :cond_16

    .line 5081
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x6000001

    and-int/2addr v1, v2

    shl-int/lit8 v2, v9, 0x19

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5085
    invoke-virtual {v8, v10, v11, v12, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5086
    iget-wide v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastIdleTimeStart:J

    sub-long v0, v10, v0

    .line 5087
    .local v0, "lastDuration":J
    iput-wide v10, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastIdleTimeStart:J

    .line 5088
    iget v2, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleMode:I

    const/4 v3, 0x1

    if-ne v2, v3, :cond_11

    .line 5089
    iget-wide v4, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestLightIdleTime:J

    cmp-long v2, v0, v4

    if-lez v2, :cond_10

    .line 5090
    iput-wide v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestLightIdleTime:J

    .line 5092
    :cond_10
    iget-object v2, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_a

    .line 5093
    :cond_11
    const/4 v4, 0x2

    if-ne v2, v4, :cond_13

    .line 5094
    iget-wide v4, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestFullIdleTime:J

    cmp-long v2, v0, v4

    if-lez v2, :cond_12

    .line 5095
    iput-wide v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestFullIdleTime:J

    .line 5097
    :cond_12
    iget-object v2, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5099
    :cond_13
    :goto_a
    if-ne v9, v3, :cond_14

    .line 5100
    iget-object v2, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_b

    .line 5101
    :cond_14
    const/4 v2, 0x2

    if-ne v9, v2, :cond_15

    .line 5102
    iget-object v2, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5104
    :cond_15
    :goto_b
    iput v9, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleMode:I

    .line 5110
    .end local v0    # "lastDuration":J
    :cond_16
    return-void
.end method

.method public blacklist noteEventLocked(ILjava/lang/String;I)V
    .locals 12
    .param p1, "code"    # I
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4005
    invoke-virtual {p0, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p3

    .line 4006
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, p2, p3, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4007
    return-void

    .line 4009
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4010
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4011
    .local v10, "uptime":J
    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move v5, p1

    move-object v6, p2

    move v7, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4013
    return-void
.end method

.method public blacklist noteFlashlightOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5671
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez v0, :cond_0

    .line 5672
    return-void

    .line 5674
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5675
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5676
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5677
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez v4, :cond_1

    .line 5678
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x8000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5681
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5682
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5684
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteFlashlightTurnedOffLocked(J)V

    .line 5685
    return-void
.end method

.method public blacklist noteFlashlightOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5657
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5658
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5659
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5660
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnNesting:I

    add-int/lit8 v5, v4, 0x1

    iput v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez v4, :cond_0

    .line 5661
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x8000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5664
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5665
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5667
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteFlashlightTurnedOnLocked(J)V

    .line 5668
    return-void
.end method

.method public blacklist noteFullWifiLockAcquiredFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6168
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6169
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6170
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 6171
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteFullWifiLockAcquiredLocked(I)V

    .line 6169
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6174
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6175
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6176
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6177
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 6178
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 6179
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteFullWifiLockAcquiredLocked(I)V

    .line 6176
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6182
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist noteFullWifiLockAcquiredLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6057
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6058
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6059
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiFullLockNesting:I

    if-nez v4, :cond_0

    .line 6060
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x10000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6063
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6065
    :cond_0
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiFullLockNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6066
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteFullWifiLockAcquiredLocked(J)V

    .line 6067
    return-void
.end method

.method public blacklist noteFullWifiLockReleasedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6185
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6186
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6187
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 6188
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteFullWifiLockReleasedLocked(I)V

    .line 6186
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6191
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6192
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6193
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6194
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 6195
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 6196
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteFullWifiLockReleasedLocked(I)V

    .line 6193
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6199
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist noteFullWifiLockReleasedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6071
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6072
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6073
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiFullLockNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6074
    if-nez v4, :cond_0

    .line 6075
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x10000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6078
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6080
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteFullWifiLockReleasedLocked(J)V

    .line 6081
    return-void
.end method

.method public blacklist noteGpsChangedLocked(Landroid/os/WorkSource;Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "oldWs"    # Landroid/os/WorkSource;
    .param p2, "newWs"    # Landroid/os/WorkSource;

    .line 4683
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    invoke-virtual {p2}, Landroid/os/WorkSource;->size()I

    move-result v1

    const/4 v2, 0x0

    if-ge v0, v1, :cond_0

    .line 4684
    invoke-virtual {p2, v0}, Landroid/os/WorkSource;->get(I)I

    move-result v1

    invoke-direct {p0, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4683
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 4687
    .end local v0    # "i":I
    :cond_0
    const/4 v0, 0x0

    .restart local v0    # "i":I
    :goto_1
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v1

    if-ge v0, v1, :cond_1

    .line 4688
    invoke-virtual {p1, v0}, Landroid/os/WorkSource;->get(I)I

    move-result v1

    invoke-direct {p0, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4687
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 4691
    .end local v0    # "i":I
    :cond_1
    invoke-static {p1, p2}, Landroid/os/WorkSource;->diffChains(Landroid/os/WorkSource;Landroid/os/WorkSource;)[Ljava/util/ArrayList;

    move-result-object v0

    .line 4692
    .local v0, "wcs":[Ljava/util/List;, "[Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v0, :cond_3

    .line 4693
    const/4 v1, 0x0

    aget-object v2, v0, v1

    const/4 v3, -0x1

    if-eqz v2, :cond_2

    .line 4694
    aget-object v1, v0, v1

    .line 4695
    .local v1, "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_2
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v4

    if-ge v2, v4, :cond_2

    .line 4696
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/os/WorkSource$WorkChain;

    invoke-direct {p0, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4695
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 4700
    .end local v1    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v2    # "i":I
    :cond_2
    const/4 v1, 0x1

    aget-object v2, v0, v1

    if-eqz v2, :cond_3

    .line 4701
    aget-object v1, v0, v1

    .line 4702
    .local v1, "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_3
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v4

    if-ge v2, v4, :cond_3

    .line 4703
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/os/WorkSource$WorkChain;

    invoke-direct {p0, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4702
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 4707
    .end local v1    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v2    # "i":I
    :cond_3
    return-void
.end method

.method public blacklist noteGpsSignalQualityLocked(I)V
    .locals 7
    .param p1, "signalLevel"    # I

    .line 4764
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsNesting:I

    if-nez v0, :cond_0

    .line 4765
    return-void

    .line 4767
    :cond_0
    if-ltz p1, :cond_5

    const/4 v0, 0x2

    if-lt p1, v0, :cond_1

    goto :goto_0

    .line 4771
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4772
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4773
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityBin:I

    if-eq v4, p1, :cond_4

    .line 4774
    if-ltz v4, :cond_2

    .line 4775
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v4, v5, v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4777
    :cond_2
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, p1

    invoke-virtual {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v4

    if-nez v4, :cond_3

    .line 4778
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, p1

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4780
    :cond_3
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    and-int/lit16 v5, v5, -0x81

    shl-int/lit8 v6, p1, 0x7

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 4782
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4783
    iput p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 4785
    :cond_4
    return-void

    .line 4768
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_5
    :goto_0
    const/4 v0, -0x1

    invoke-virtual {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->stopAllGpsSignalQualityTimersLocked(I)V

    .line 4769
    return-void
.end method

.method public blacklist noteInteractiveLocked(Z)V
    .locals 3
    .param p1, "interactive"    # Z

    .line 4927
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractive:Z

    if-eq v0, p1, :cond_1

    .line 4928
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4929
    .local v0, "elapsedRealtime":J
    iput-boolean p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractive:Z

    .line 4931
    if-eqz p1, :cond_0

    .line 4932
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_0

    .line 4934
    :cond_0
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4937
    .end local v0    # "elapsedRealtime":J
    :cond_1
    :goto_0
    return-void
.end method

.method public blacklist noteJobFinishLocked(Ljava/lang/String;II)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "stopReason"    # I

    .line 4112
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4113
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4114
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4115
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteStopJobLocked(Ljava/lang/String;JI)V

    .line 4116
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4006

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4117
    return-void

    .line 4119
    :cond_0
    const/16 v5, 0x4006

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4120
    return-void
.end method

.method public blacklist noteJobStartLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4101
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4102
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4103
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4104
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteStartJobLocked(Ljava/lang/String;J)V

    .line 4105
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8006

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4106
    return-void

    .line 4108
    :cond_0
    const v5, 0x8006

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4109
    return-void
.end method

.method public blacklist noteJobsDeferredLocked(IIJ)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "numDeferred"    # I
    .param p3, "sinceLast"    # J

    .line 4123
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4124
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteJobsDeferredLocked(IJ)V

    .line 4125
    return-void
.end method

.method public blacklist noteLongPartialWakelockFinish(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 0
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4535
    invoke-virtual {p0, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p3

    .line 4536
    invoke-direct {p0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4537
    return-void
.end method

.method public blacklist noteLongPartialWakelockFinishFromSource(Ljava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "workSource"    # Landroid/os/WorkSource;

    .line 4541
    invoke-virtual {p3}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 4542
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 4543
    invoke-virtual {p3, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 4544
    .local v2, "uid":I
    invoke-direct {p0, p1, p2, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4542
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 4547
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 4548
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 4549
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 4550
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 4551
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    .line 4552
    .local v4, "uid":I
    invoke-direct {p0, p1, p2, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4549
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 4555
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public blacklist noteLongPartialWakelockStart(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 0
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4498
    invoke-virtual {p0, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p3

    .line 4499
    invoke-direct {p0, p1, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4500
    return-void
.end method

.method public blacklist noteLongPartialWakelockStartFromSource(Ljava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "workSource"    # Landroid/os/WorkSource;

    .line 4504
    invoke-virtual {p3}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 4505
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 4506
    invoke-virtual {p3, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 4507
    .local v2, "uid":I
    invoke-direct {p0, p1, p2, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4505
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 4510
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 4511
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 4512
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 4513
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 4514
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    .line 4515
    .local v4, "uid":I
    invoke-direct {p0, p1, p2, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4512
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 4518
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public blacklist noteMobileRadioPowerStateLocked(IJI)Z
    .locals 17
    .param p1, "powerState"    # I
    .param p2, "timestampNs"    # J
    .param p4, "uid"    # I

    .line 4959
    move-object/from16 v6, p0

    move/from16 v7, p1

    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4960
    .local v8, "elapsedRealtime":J
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4961
    .local v10, "uptime":J
    iget v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioPowerState:I

    if-eq v0, v7, :cond_7

    .line 4963
    const/4 v0, 0x2

    if-eq v7, v0, :cond_1

    const/4 v0, 0x3

    if-ne v7, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    move v14, v0

    .line 4966
    .local v14, "active":Z
    const-wide/32 v15, 0xf4240

    if-eqz v14, :cond_3

    .line 4967
    if-lez p4, :cond_2

    .line 4968
    move-object/from16 v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move/from16 v5, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteMobileRadioApWakeupLocked(JJI)V

    .line 4971
    :cond_2
    div-long v0, p2, v15

    move-wide v2, v0

    .local v2, "realElapsedRealtimeMs":J
    iput-wide v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveStartTime:J

    .line 4972
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v4, 0x2000000

    or-int/2addr v1, v4

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    goto :goto_3

    .line 4974
    .end local v2    # "realElapsedRealtimeMs":J
    :cond_3
    div-long v0, p2, v15

    .line 4975
    .local v0, "realElapsedRealtimeMs":J
    iget-wide v2, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveStartTime:J

    .line 4976
    .local v2, "lastUpdateTimeMs":J
    cmp-long v4, v0, v2

    if-gez v4, :cond_4

    .line 4977
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Data connection inactive timestamp "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " is before start time "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "OppoBatteryStatsImpl"

    invoke-static {v5, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4979
    move-wide v0, v8

    goto :goto_2

    .line 4980
    :cond_4
    cmp-long v4, v0, v8

    if-gez v4, :cond_5

    .line 4981
    iget-object v4, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    sub-long v12, v8, v0

    invoke-virtual {v4, v12, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 4984
    :cond_5
    :goto_2
    iget-object v4, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v12, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v13, -0x2000001

    and-int/2addr v12, v13

    iput v12, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    move-wide v2, v0

    .line 4988
    .end local v0    # "realElapsedRealtimeMs":J
    .local v2, "realElapsedRealtimeMs":J
    :goto_3
    invoke-virtual {v6, v8, v9, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4989
    iput v7, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioPowerState:I

    .line 4990
    if-eqz v14, :cond_6

    .line 4991
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4992
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_4

    .line 4994
    :cond_6
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4995
    iget-object v0, v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4997
    const/4 v0, 0x1

    return v0

    .line 5000
    .end local v2    # "realElapsedRealtimeMs":J
    .end local v14    # "active":Z
    :cond_7
    :goto_4
    const/4 v0, 0x0

    return v0
.end method

.method public blacklist noteNetworkInterfaceTypeLocked(Ljava/lang/String;I)V
    .locals 2
    .param p1, "iface"    # Ljava/lang/String;
    .param p2, "networkType"    # I

    .line 6289
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_0

    return-void

    .line 6291
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    .line 6292
    :try_start_0
    invoke-static {p2}, Landroid/net/ConnectivityManager;->isNetworkTypeMobile(I)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 6293
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    invoke-static {v1, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    goto :goto_0

    .line 6296
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    invoke-static {v1, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 6299
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6301
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v1

    .line 6302
    :try_start_1
    invoke-static {p2}, Landroid/net/ConnectivityManager;->isNetworkTypeWifi(I)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 6303
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    invoke-static {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    goto :goto_1

    .line 6306
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    invoke-static {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 6309
    :goto_1
    monitor-exit v1

    .line 6310
    return-void

    .line 6309
    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 6299
    :catchall_1
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v1
.end method

.method public blacklist notePackageInstalledLocked(Ljava/lang/String;J)V
    .locals 15
    .param p1, "pkgName"    # Ljava/lang/String;
    .param p2, "versionCode"    # J

    .line 5113
    move-object v8, p0

    move-wide/from16 v9, p2

    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v11

    .line 5114
    .local v11, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v13

    .line 5116
    .local v13, "uptime":J
    long-to-int v7, v9

    const/16 v5, 0xb

    move-object v0, p0

    move-wide v1, v11

    move-wide v3, v13

    move-object/from16 v6, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5118
    new-instance v0, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v0}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 5119
    .local v0, "pc":Landroid/os/BatteryStats$PackageChange;
    move-object/from16 v1, p1

    iput-object v1, v0, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 5120
    const/4 v2, 0x1

    iput-boolean v2, v0, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 5121
    iput-wide v9, v0, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    .line 5122
    invoke-direct {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addPackageChange(Landroid/os/BatteryStats$PackageChange;)V

    .line 5123
    return-void
.end method

.method public blacklist notePackageUninstalledLocked(Ljava/lang/String;)V
    .locals 13
    .param p1, "pkgName"    # Ljava/lang/String;

    .line 5126
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 5127
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 5128
    .local v11, "uptime":J
    const/16 v6, 0xc

    const/4 v8, 0x0

    move-object v1, p0

    move-wide v2, v9

    move-wide v4, v11

    move-object v7, p1

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5130
    new-instance v0, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v0}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 5131
    .local v0, "pc":Landroid/os/BatteryStats$PackageChange;
    iput-object p1, v0, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 5132
    const/4 v1, 0x1

    iput-boolean v1, v0, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 5133
    invoke-direct {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addPackageChange(Landroid/os/BatteryStats$PackageChange;)V

    .line 5134
    return-void
.end method

.method public greylist notePhoneDataConnectionStateLocked(IZ)V
    .locals 8
    .param p1, "dataType"    # I
    .param p2, "hasData"    # Z

    .line 5361
    const/4 v0, 0x0

    .line 5362
    .local v0, "bin":I
    if-eqz p2, :cond_1

    .line 5363
    if-lez p1, :cond_0

    const/16 v1, 0x14

    if-gt p1, v1, :cond_0

    .line 5364
    move v0, p1

    goto :goto_0

    .line 5366
    :cond_0
    sget v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->DATA_CONNECTION_OTHER:I

    .line 5370
    :cond_1
    :goto_0
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionType:I

    if-eq v1, v0, :cond_3

    .line 5371
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 5372
    .local v1, "elapsedRealtime":J
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 5373
    .local v3, "uptime":J
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit16 v6, v6, -0x3e01

    shl-int/lit8 v7, v0, 0x9

    or-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5377
    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5378
    iget v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionType:I

    if-ltz v5, :cond_2

    .line 5379
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v5, v6, v5

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5382
    :cond_2
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 5383
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v0

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5385
    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    :cond_3
    return-void
.end method

.method public greylist notePhoneOffLocked()V
    .locals 7

    .line 5171
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOn:Z

    if-eqz v0, :cond_0

    .line 5172
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5173
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5174
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x800001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5177
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5178
    const/4 v4, 0x0

    iput-boolean v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOn:Z

    .line 5179
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5181
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_0
    return-void
.end method

.method public greylist notePhoneOnLocked()V
    .locals 7

    .line 5157
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOn:Z

    if-nez v0, :cond_0

    .line 5158
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5159
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5160
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x800000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5163
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5164
    const/4 v4, 0x1

    iput-boolean v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOn:Z

    .line 5165
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5167
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_0
    return-void
.end method

.method public greylist notePhoneSignalStrengthLocked(Landroid/telephony/SignalStrength;)V
    .locals 3
    .param p1, "signalStrength"    # Landroid/telephony/SignalStrength;

    .line 5352
    invoke-virtual {p1}, Landroid/telephony/SignalStrength;->getLevel()I

    move-result v0

    .line 5353
    .local v0, "bin":I
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneServiceStateRaw:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSimStateRaw:I

    invoke-direct {p0, v1, v2, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateAllPhoneStateLocked(III)V

    .line 5354
    return-void
.end method

.method public blacklist notePhoneStateLocked(II)V
    .locals 1
    .param p1, "state"    # I
    .param p2, "simState"    # I

    .line 5346
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    invoke-direct {p0, p1, p2, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateAllPhoneStateLocked(III)V

    .line 5347
    return-void
.end method

.method public blacklist notePowerSaveModeLocked(Z)V
    .locals 8
    .param p1, "enabled"    # Z

    .line 5004
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabled:Z

    if-eq v0, p1, :cond_2

    .line 5005
    if-eqz p1, :cond_0

    const/4 v0, 0x4

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 5006
    .local v0, "stepState":I
    :goto_0
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v3, v2, 0x4

    xor-int/2addr v3, v0

    or-int/2addr v1, v3

    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    .line 5007
    and-int/lit8 v1, v2, -0x5

    or-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    .line 5008
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 5009
    .local v1, "elapsedRealtime":J
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 5010
    .local v3, "uptime":J
    iput-boolean p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabled:Z

    .line 5011
    if-eqz p1, :cond_1

    .line 5012
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v7, -0x80000000

    or-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5015
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_1

    .line 5017
    :cond_1
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v7, 0x7fffffff

    and-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5020
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5022
    :goto_1
    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5030
    .end local v0    # "stepState":I
    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    :cond_2
    return-void
.end method

.method public blacklist noteProcessAnrLocked(Ljava/lang/String;I)V
    .locals 2
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4048
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4049
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4050
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    .line 4051
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->incNumAnrsLocked()V

    .line 4053
    .end local v0    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_0
    return-void
.end method

.method public blacklist noteProcessCrashLocked(Ljava/lang/String;I)V
    .locals 2
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4040
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4041
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4042
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    .line 4043
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->incNumCrashesLocked()V

    .line 4045
    .end local v0    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_0
    return-void
.end method

.method public blacklist noteProcessDiedLocked(II)V
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pid"    # I

    .line 4623
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4624
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 4625
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    if-eqz v0, :cond_0

    .line 4626
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mPids:Landroid/util/SparseArray;

    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 4628
    :cond_0
    return-void
.end method

.method public blacklist noteProcessFinishLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4066
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4067
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4001

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4068
    return-void

    .line 4070
    :cond_0
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_1

    .line 4071
    return-void

    .line 4073
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4074
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4075
    .local v10, "uptime":J
    const/16 v5, 0x4001

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4076
    return-void
.end method

.method public blacklist noteProcessStartLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4023
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4024
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4025
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    .line 4026
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->incStartsLocked()V

    .line 4028
    .end local v0    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8001

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4029
    return-void

    .line 4031
    :cond_1
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_2

    .line 4032
    return-void

    .line 4034
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4035
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4036
    .local v10, "uptime":J
    const v5, 0x8001

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4037
    return-void
.end method

.method public blacklist noteResetAudioLocked()V
    .locals 7

    .line 5484
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnNesting:I

    if-lez v0, :cond_0

    .line 5485
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5486
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5487
    .local v2, "uptime":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnNesting:I

    .line 5488
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x400001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5491
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5492
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5493
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_0

    .line 5494
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 5495
    .local v5, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteResetAudioLocked(J)V

    .line 5493
    .end local v5    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5498
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "i":I
    :cond_0
    return-void
.end method

.method public blacklist noteResetBluetoothScanLocked()V
    .locals 7

    .line 5821
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanNesting:I

    if-lez v0, :cond_0

    .line 5822
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5823
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5824
    .local v2, "uptime":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanNesting:I

    .line 5825
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x100001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5828
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5829
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5830
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_0

    .line 5831
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 5832
    .local v5, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteResetBluetoothScanLocked(J)V

    .line 5830
    .end local v5    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5835
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "i":I
    :cond_0
    return-void
.end method

.method public blacklist noteResetCameraLocked()V
    .locals 7

    .line 5719
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnNesting:I

    if-lez v0, :cond_0

    .line 5720
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5721
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5722
    .local v2, "uptime":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnNesting:I

    .line 5723
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x200001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5726
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5727
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5728
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_0

    .line 5729
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 5730
    .local v5, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteResetCameraLocked(J)V

    .line 5728
    .end local v5    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5733
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "i":I
    :cond_0
    return-void
.end method

.method public blacklist noteResetFlashlightLocked()V
    .locals 7

    .line 5736
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnNesting:I

    if-lez v0, :cond_0

    .line 5737
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5738
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5739
    .local v2, "uptime":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnNesting:I

    .line 5740
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x8000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5743
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5744
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5745
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_0

    .line 5746
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 5747
    .local v5, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteResetFlashlightLocked(J)V

    .line 5745
    .end local v5    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5750
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "i":I
    :cond_0
    return-void
.end method

.method public blacklist noteResetVideoLocked()V
    .locals 7

    .line 5501
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnNesting:I

    if-lez v0, :cond_0

    .line 5502
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5503
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5504
    .local v2, "uptime":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnNesting:I

    .line 5505
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x40000001    # -1.9999999f

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5508
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5509
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5510
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_0

    .line 5511
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 5512
    .local v5, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteResetVideoLocked(J)V

    .line 5510
    .end local v5    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5515
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "i":I
    :cond_0
    return-void
.end method

.method public greylist noteScreenBrightnessLocked(I)V
    .locals 9
    .param p1, "brightness"    # I

    .line 4885
    const-string/jumbo v0, "sys.oplus.multibrightness"

    const/16 v1, 0xff

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    .line 4886
    .local v0, "MAX_BRIGHTNESS":I
    add-int/lit8 v1, v0, 0x1

    const/4 v2, 0x5

    div-int/2addr v1, v2

    div-int v1, p1, v1

    .line 4887
    .local v1, "bin":I
    if-gez v1, :cond_0

    const/4 v1, 0x0

    goto :goto_0

    .line 4888
    :cond_0
    if-lt v1, v2, :cond_1

    const/4 v1, 0x4

    .line 4889
    :cond_1
    :goto_0
    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessBin:I

    if-eq v2, v1, :cond_4

    .line 4890
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v2

    .line 4891
    .local v2, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v4

    .line 4892
    .local v4, "uptime":J
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit8 v7, v7, -0x8

    shl-int/lit8 v8, v1, 0x0

    or-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4896
    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4897
    iget v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    const/4 v7, 0x2

    if-ne v6, v7, :cond_3

    .line 4898
    iget v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v6, :cond_2

    .line 4899
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v6, v7, v6

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4901
    :cond_2
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, v1

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4907
    :cond_3
    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessBin:I

    .line 4909
    .end local v2    # "elapsedRealtime":J
    .end local v4    # "uptime":J
    :cond_4
    return-void
.end method

.method public blacklist noteScreenStateLocked(I)V
    .locals 22
    .param p1, "state"    # I

    .line 4790
    move-object/from16 v12, p0

    iget-boolean v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPretendScreenOff:Z

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    move/from16 v0, p1

    .line 4794
    .end local p1    # "state":I
    .local v0, "state":I
    :goto_0
    const/4 v1, 0x4

    const-string v2, "OppoBatteryStatsImpl"

    if-le v0, v1, :cond_2

    .line 4795
    const/4 v1, 0x5

    if-eq v0, v1, :cond_1

    .line 4800
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown screen state (not mapped): "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v2, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 4797
    :cond_1
    const/4 v0, 0x2

    .line 4798
    move v13, v0

    goto :goto_2

    .line 4805
    :cond_2
    :goto_1
    move v13, v0

    .end local v0    # "state":I
    .local v13, "state":I
    :goto_2
    iget v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    if-eq v0, v13, :cond_e

    .line 4807
    iget v14, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    .line 4808
    .local v14, "oldState":I
    iput v13, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    .line 4812
    if-eqz v13, :cond_4

    .line 4813
    add-int/lit8 v0, v13, -0x1

    .line 4814
    .local v0, "stepState":I
    and-int/lit8 v1, v0, 0x3

    if-ne v1, v0, :cond_3

    .line 4815
    iget v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    iget v2, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v3, v2, 0x3

    xor-int/2addr v3, v0

    or-int/2addr v1, v3

    iput v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    .line 4816
    and-int/lit8 v1, v2, -0x4

    or-int/2addr v1, v0

    iput v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    goto :goto_3

    .line 4818
    :cond_3
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unexpected screen state: "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v2, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4822
    .end local v0    # "stepState":I
    :cond_4
    :goto_3
    iget-object v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v10

    .line 4823
    .local v10, "elapsedRealtime":J
    iget-object v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v8

    .line 4825
    .local v8, "uptime":J
    const/4 v0, 0x0

    .line 4826
    .local v0, "updateHistory":Z
    invoke-virtual {v12, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 4827
    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x40000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4828
    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4829
    const/4 v0, 0x1

    goto :goto_4

    .line 4830
    :cond_5
    invoke-virtual {v12, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_6

    .line 4831
    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, -0x40001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4832
    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4833
    const/4 v0, 0x1

    .line 4835
    :cond_6
    :goto_4
    invoke-virtual {v12, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_8

    .line 4836
    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x100000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4839
    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4840
    iget v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v1, :cond_7

    .line 4841
    iget-object v2, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v1, v2, v1

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4843
    :cond_7
    const/4 v0, 0x1

    move v15, v0

    goto :goto_5

    .line 4844
    :cond_8
    invoke-virtual {v12, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_a

    .line 4845
    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, -0x100001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4848
    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4849
    iget v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v1, :cond_9

    .line 4850
    iget-object v2, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v1, v2, v1

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4852
    :cond_9
    const/4 v0, 0x1

    move v15, v0

    goto :goto_5

    .line 4844
    :cond_a
    move v15, v0

    .line 4854
    .end local v0    # "updateHistory":Z
    .local v15, "updateHistory":Z
    :goto_5
    if-eqz v15, :cond_b

    .line 4857
    invoke-virtual {v12, v10, v11, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4859
    :cond_b
    iget-object v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 4860
    invoke-virtual {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    iget-object v2, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v2

    .line 4859
    invoke-interface {v0, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToScreenStateChange(ZZ)Ljava/util/concurrent/Future;

    .line 4861
    invoke-virtual {v12, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    const-wide/16 v16, 0x3e8

    if-eqz v0, :cond_c

    .line 4862
    iget-object v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    iget-object v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    .line 4863
    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    mul-long v3, v2, v16

    mul-long v5, v10, v16

    .line 4862
    move-object/from16 v0, p0

    move v2, v13

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 4865
    const/4 v1, -0x1

    const/4 v2, -0x1

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const-string/jumbo v4, "screen"

    move-wide/from16 v18, v8

    .end local v8    # "uptime":J
    .local v18, "uptime":J
    move-wide v8, v10

    move-wide/from16 v20, v10

    .end local v10    # "elapsedRealtime":J
    .local v20, "elapsedRealtime":J
    move-wide/from16 v10, v18

    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    goto :goto_6

    .line 4867
    .end local v18    # "uptime":J
    .end local v20    # "elapsedRealtime":J
    .restart local v8    # "uptime":J
    .restart local v10    # "elapsedRealtime":J
    :cond_c
    move-wide/from16 v18, v8

    move-wide/from16 v20, v10

    .end local v8    # "uptime":J
    .end local v10    # "elapsedRealtime":J
    .restart local v18    # "uptime":J
    .restart local v20    # "elapsedRealtime":J
    invoke-virtual {v12, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 4868
    const/4 v1, -0x1

    const/4 v2, -0x1

    const/4 v3, 0x0

    const/4 v6, 0x0

    const-string/jumbo v4, "screen"

    const-string/jumbo v5, "screen"

    move-object/from16 v0, p0

    move-wide/from16 v7, v20

    move-wide/from16 v9, v18

    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4870
    iget-object v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    iget-object v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    .line 4871
    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    mul-long v3, v2, v16

    mul-long v5, v20, v16

    .line 4870
    move-object/from16 v0, p0

    move v2, v13

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 4874
    :cond_d
    :goto_6
    iget-boolean v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_e

    .line 4875
    invoke-virtual {v12, v14, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    .line 4878
    .end local v14    # "oldState":I
    .end local v15    # "updateHistory":Z
    .end local v18    # "uptime":J
    .end local v20    # "elapsedRealtime":J
    :cond_e
    return-void
.end method

.method public blacklist noteStartSensorLocked(II)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "sensor"    # I

    .line 4653
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4654
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4655
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4656
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mSensorNesting:I

    if-nez v4, :cond_0

    .line 4657
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x800000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4660
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4662
    :cond_0
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mSensorNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mSensorNesting:I

    .line 4663
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, p2, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteStartSensor(IJ)V

    .line 4664
    return-void
.end method

.method public blacklist noteStartWakeFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IZ)V
    .locals 21
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I
    .param p6, "unimportantForLogging"    # Z

    .line 4411
    move-object/from16 v12, p0

    iget-object v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v13

    .line 4412
    .local v13, "elapsedRealtime":J
    iget-object v0, v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v15

    .line 4413
    .local v15, "uptime":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v10

    .line 4414
    .local v10, "N":I
    const/4 v0, 0x0

    move v11, v0

    .local v11, "i":I
    :goto_0
    if-ge v11, v10, :cond_0

    .line 4415
    move-object/from16 v8, p1

    invoke-virtual {v8, v11}, Landroid/os/WorkSource;->get(I)I

    move-result v1

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move/from16 v7, p6

    move-wide v8, v13

    move/from16 v17, v10

    move/from16 v18, v11

    .end local v10    # "N":I
    .end local v11    # "i":I
    .local v17, "N":I
    .local v18, "i":I
    move-wide v10, v15

    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4414
    add-int/lit8 v11, v18, 0x1

    move/from16 v10, v17

    .end local v18    # "i":I
    .restart local v11    # "i":I
    goto :goto_0

    .end local v17    # "N":I
    .restart local v10    # "N":I
    :cond_0
    move/from16 v17, v10

    move/from16 v18, v11

    .line 4419
    .end local v10    # "N":I
    .end local v11    # "i":I
    .restart local v17    # "N":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v10

    .line 4420
    .local v10, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v10, :cond_2

    .line 4421
    const/4 v0, 0x0

    move v11, v0

    .restart local v11    # "i":I
    :goto_1
    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v0

    if-ge v11, v0, :cond_1

    .line 4422
    invoke-interface {v10, v11}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v18, v0

    check-cast v18, Landroid/os/WorkSource$WorkChain;

    .line 4423
    .local v18, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual/range {v18 .. v18}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v3, v18

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move/from16 v7, p6

    move-wide v8, v13

    move-object/from16 v19, v10

    move/from16 v20, v11

    .end local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v11    # "i":I
    .local v19, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v20, "i":I
    move-wide v10, v15

    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4421
    .end local v18    # "wc":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v11, v20, 0x1

    move-object/from16 v10, v19

    .end local v20    # "i":I
    .restart local v11    # "i":I
    goto :goto_1

    .end local v19    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_1
    move-object/from16 v19, v10

    move/from16 v20, v11

    .end local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v11    # "i":I
    .restart local v19    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v20    # "i":I
    goto :goto_2

    .line 4420
    .end local v19    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v20    # "i":I
    .restart local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_2
    move-object/from16 v19, v10

    .line 4427
    .end local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v19    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :goto_2
    return-void
.end method

.method public blacklist noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V
    .locals 15
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "wc"    # Landroid/os/WorkSource$WorkChain;
    .param p4, "name"    # Ljava/lang/String;
    .param p5, "historyName"    # Ljava/lang/String;
    .param p6, "type"    # I
    .param p7, "unimportantForLogging"    # Z
    .param p8, "elapsedRealtime"    # J
    .param p10, "uptime"    # J

    .line 4267
    move-object v8, p0

    move-wide/from16 v9, p8

    move-wide/from16 v11, p10

    invoke-virtual/range {p0 .. p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v13

    .line 4268
    .end local p1    # "uid":I
    .local v13, "uid":I
    if-nez p6, :cond_5

    .line 4271
    invoke-virtual {p0, v11, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl;->aggregateLastWakeupUptimeLocked(J)V

    .line 4272
    if-nez p5, :cond_0

    .line 4273
    move-object/from16 v0, p4

    move-object v14, v0

    .end local p5    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    goto :goto_0

    .line 4272
    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v14, p5

    .line 4275
    .end local p5    # "historyName":Ljava/lang/String;
    .local v14, "historyName":Ljava/lang/String;
    :goto_0
    iget-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordAllHistory:Z

    if-eqz v0, :cond_1

    .line 4276
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8005

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v14, v13, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 4278
    const v5, 0x8005

    move-object v0, p0

    move-wide/from16 v1, p8

    move-wide/from16 v3, p10

    move-object v6, v14

    move v7, v13

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4282
    :cond_1
    iget v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockNesting:I

    const/4 v1, 0x1

    if-nez v0, :cond_2

    .line 4283
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x40000000    # 2.0f

    or-int/2addr v2, v3

    iput v2, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4286
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4287
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v14, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    iput-object v14, v0, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 4288
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput v13, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitialAcquireWakeUid:I

    iput v13, v0, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 4289
    xor-int/lit8 v0, p7, 0x1

    iput-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockImportant:Z

    .line 4290
    invoke-virtual {p0, v9, v10, v11, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    goto :goto_1

    .line 4291
    :cond_2
    iget-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockImportant:Z

    if-nez v0, :cond_4

    if-nez p7, :cond_4

    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    if-nez v0, :cond_4

    .line 4293
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v0, :cond_3

    .line 4295
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    const/4 v2, 0x0

    iput-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4296
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4297
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v14, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    iput-object v14, v0, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 4298
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput v13, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitialAcquireWakeUid:I

    iput v13, v0, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 4299
    invoke-virtual {p0, v9, v10, v11, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4301
    :cond_3
    iput-boolean v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockImportant:Z

    .line 4303
    :cond_4
    :goto_1
    iget v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockNesting:I

    add-int/2addr v0, v1

    iput v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockNesting:I

    goto :goto_2

    .line 4268
    .end local v14    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_5
    move-object/from16 v14, p5

    .line 4305
    .end local p5    # "historyName":Ljava/lang/String;
    .restart local v14    # "historyName":Ljava/lang/String;
    :goto_2
    if-ltz v13, :cond_7

    .line 4306
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    if-eqz v0, :cond_6

    .line 4312
    invoke-direct {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->requestWakelockCpuUpdate()V

    .line 4315
    :cond_6
    invoke-virtual {p0, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    move/from16 v1, p2

    move-object/from16 v2, p4

    move/from16 v3, p6

    move-wide/from16 v4, p8

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteStartWakeLocked(ILjava/lang/String;IJ)V

    .line 4329
    :cond_7
    return-void
.end method

.method public blacklist noteStopSensorLocked(II)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "sensor"    # I

    .line 4667
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4668
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4669
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4670
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mSensorNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mSensorNesting:I

    .line 4671
    if-nez v4, :cond_0

    .line 4672
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x800001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4675
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4677
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, p2, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteStopSensor(IJ)V

    .line 4678
    return-void
.end method

.method public blacklist noteStopWakeFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;I)V
    .locals 20
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I

    .line 4479
    move-object/from16 v11, p0

    iget-object v0, v11, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v12

    .line 4480
    .local v12, "elapsedRealtime":J
    iget-object v0, v11, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v14

    .line 4481
    .local v14, "uptime":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v9

    .line 4482
    .local v9, "N":I
    const/4 v0, 0x0

    move v10, v0

    .local v10, "i":I
    :goto_0
    if-ge v10, v9, :cond_0

    .line 4483
    move-object/from16 v7, p1

    invoke-virtual {v7, v10}, Landroid/os/WorkSource;->get(I)I

    move-result v1

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-wide v7, v12

    move/from16 v16, v9

    move/from16 v17, v10

    .end local v9    # "N":I
    .end local v10    # "i":I
    .local v16, "N":I
    .local v17, "i":I
    move-wide v9, v14

    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4482
    add-int/lit8 v10, v17, 0x1

    move/from16 v9, v16

    .end local v17    # "i":I
    .restart local v10    # "i":I
    goto :goto_0

    .end local v16    # "N":I
    .restart local v9    # "N":I
    :cond_0
    move/from16 v16, v9

    move/from16 v17, v10

    .line 4487
    .end local v9    # "N":I
    .end local v10    # "i":I
    .restart local v16    # "N":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v9

    .line 4488
    .local v9, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v9, :cond_2

    .line 4489
    const/4 v0, 0x0

    move v10, v0

    .restart local v10    # "i":I
    :goto_1
    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v0

    if-ge v10, v0, :cond_1

    .line 4490
    invoke-interface {v9, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v17, v0

    check-cast v17, Landroid/os/WorkSource$WorkChain;

    .line 4491
    .local v17, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual/range {v17 .. v17}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v3, v17

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-wide v7, v12

    move-object/from16 v18, v9

    move/from16 v19, v10

    .end local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v10    # "i":I
    .local v18, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v19, "i":I
    move-wide v9, v14

    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4489
    .end local v17    # "wc":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v10, v19, 0x1

    move-object/from16 v9, v18

    .end local v19    # "i":I
    .restart local v10    # "i":I
    goto :goto_1

    .end local v18    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_1
    move-object/from16 v18, v9

    move/from16 v19, v10

    .end local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v10    # "i":I
    .restart local v18    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v19    # "i":I
    goto :goto_2

    .line 4488
    .end local v18    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v19    # "i":I
    .restart local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_2
    move-object/from16 v18, v9

    .line 4495
    .end local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v18    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :goto_2
    return-void
.end method

.method public blacklist noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V
    .locals 13
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "wc"    # Landroid/os/WorkSource$WorkChain;
    .param p4, "name"    # Ljava/lang/String;
    .param p5, "historyName"    # Ljava/lang/String;
    .param p6, "type"    # I
    .param p7, "elapsedRealtime"    # J
    .param p9, "uptime"    # J

    .line 4333
    move-object v8, p0

    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v9

    .line 4334
    .end local p1    # "uid":I
    .local v9, "uid":I
    if-nez p6, :cond_4

    .line 4335
    iget v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockNesting:I

    .line 4336
    iget-boolean v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordAllHistory:Z

    if-eqz v0, :cond_1

    .line 4337
    if-nez p5, :cond_0

    .line 4338
    move-object/from16 v0, p4

    move-object v10, v0

    .end local p5    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    goto :goto_0

    .line 4337
    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v10, p5

    .line 4340
    .end local p5    # "historyName":Ljava/lang/String;
    .local v10, "historyName":Ljava/lang/String;
    :goto_0
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4005

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v10, v9, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 4342
    const/16 v5, 0x4005

    move-object v0, p0

    move-wide/from16 v1, p7

    move-wide/from16 v3, p9

    move-object v6, v10

    move v7, v9

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_1

    .line 4336
    .end local v10    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_1
    move-object/from16 v10, p5

    .line 4346
    .end local p5    # "historyName":Ljava/lang/String;
    .restart local v10    # "historyName":Ljava/lang/String;
    :cond_2
    :goto_1
    iget v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockNesting:I

    if-nez v0, :cond_3

    .line 4347
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v2, -0x40000001    # -1.9999999f

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4350
    const/4 v0, 0x0

    iput-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    .line 4351
    const/4 v0, -0x1

    iput v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 4352
    move-wide/from16 v6, p7

    move-wide/from16 v11, p9

    invoke-virtual {p0, v6, v7, v11, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    goto :goto_2

    .line 4346
    :cond_3
    move-wide/from16 v6, p7

    move-wide/from16 v11, p9

    goto :goto_2

    .line 4334
    .end local v10    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_4
    move-wide/from16 v6, p7

    move-wide/from16 v11, p9

    move-object/from16 v10, p5

    .line 4355
    .end local p5    # "historyName":Ljava/lang/String;
    .restart local v10    # "historyName":Ljava/lang/String;
    :goto_2
    if-ltz v9, :cond_6

    .line 4356
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    if-eqz v0, :cond_5

    .line 4360
    invoke-direct {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->requestWakelockCpuUpdate()V

    .line 4363
    :cond_5
    invoke-virtual {p0, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    move v1, p2

    move-object/from16 v2, p4

    move/from16 v3, p6

    move-wide/from16 v4, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteStopWakeLocked(ILjava/lang/String;IJ)V

    .line 4377
    :cond_6
    return-void
.end method

.method public blacklist noteSyncFinishLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4090
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4091
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4092
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4093
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteStopSyncLocked(Ljava/lang/String;J)V

    .line 4094
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4004

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4095
    return-void

    .line 4097
    :cond_0
    const/16 v5, 0x4004

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4098
    return-void
.end method

.method public blacklist noteSyncStartLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4079
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4080
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4081
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4082
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteStartSyncLocked(Ljava/lang/String;J)V

    .line 4083
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8004

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4084
    return-void

    .line 4086
    :cond_0
    const v5, 0x8004

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4087
    return-void
.end method

.method public blacklist noteUidProcessStateLocked(II)V
    .locals 2
    .param p1, "uid"    # I
    .param p2, "state"    # I

    .line 4056
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v0

    .line 4057
    .local v0, "parentUid":I
    if-eq p1, v0, :cond_0

    .line 4060
    return-void

    .line 4062
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v1

    invoke-virtual {v1, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->updateUidProcessStateLocked(I)V

    .line 4063
    return-void
.end method

.method public greylist noteUserActivityLocked(II)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "event"    # I

    .line 4913
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_0

    .line 4914
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4915
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteUserActivityLocked(I)V

    .line 4917
    :cond_0
    return-void
.end method

.method public blacklist noteVibratorOffLocked(I)V
    .locals 1
    .param p1, "uid"    # I

    .line 5652
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5653
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteVibratorOffLocked()V

    .line 5654
    return-void
.end method

.method public blacklist noteVibratorOnLocked(IJ)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "durationMillis"    # J

    .line 5647
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5648
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2, p3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteVibratorOnLocked(J)V

    .line 5649
    return-void
.end method

.method public greylist noteVideoOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5467
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnNesting:I

    if-nez v0, :cond_0

    .line 5468
    return-void

    .line 5470
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5471
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5472
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5473
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnNesting:I

    if-nez v4, :cond_1

    .line 5474
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x40000001    # -1.9999999f

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5477
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5478
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5480
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteVideoTurnedOffLocked(J)V

    .line 5481
    return-void
.end method

.method public greylist noteVideoOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5451
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5452
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5453
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5454
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnNesting:I

    if-nez v4, :cond_0

    .line 5455
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x40000000    # 2.0f

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5458
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5459
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5461
    :cond_0
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnNesting:I

    .line 5462
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteVideoTurnedOnLocked(J)V

    .line 5463
    return-void
.end method

.method public blacklist noteWakeUpLocked(Ljava/lang/String;I)V
    .locals 13
    .param p1, "reason"    # Ljava/lang/String;
    .param p2, "reasonUid"    # I

    .line 4920
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4921
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4922
    .local v11, "uptime":J
    const/16 v6, 0x12

    move-object v1, p0

    move-wide v2, v9

    move-wide v4, v11

    move-object v7, p1

    move v8, p2

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4924
    return-void
.end method

.method public blacklist noteWakeupReasonLocked(Ljava/lang/String;)V
    .locals 6
    .param p1, "reason"    # Ljava/lang/String;

    .line 4587
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4588
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4591
    .local v2, "uptime":J
    invoke-virtual {p0, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->aggregateLastWakeupUptimeLocked(J)V

    .line 4592
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v5, v4, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v5, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4593
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object p1, v4, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 4594
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    const/4 v5, 0x0

    iput v5, v4, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 4595
    iput-object p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 4596
    iput-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 4597
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4598
    return-void
.end method

.method public blacklist noteWakupAlarmLocked(Ljava/lang/String;ILandroid/os/WorkSource;Ljava/lang/String;)V
    .locals 4
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "workSource"    # Landroid/os/WorkSource;
    .param p4, "tag"    # Ljava/lang/String;

    .line 4172
    if-eqz p3, :cond_5

    .line 4173
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    invoke-virtual {p3}, Landroid/os/WorkSource;->size()I

    move-result v1

    if-ge v0, v1, :cond_2

    .line 4174
    invoke-virtual {p3, v0}, Landroid/os/WorkSource;->get(I)I

    move-result p2

    .line 4175
    invoke-virtual {p3, v0}, Landroid/os/WorkSource;->getName(I)Ljava/lang/String;

    move-result-object v1

    .line 4177
    .local v1, "workSourceName":Ljava/lang/String;
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isOnBattery()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 4178
    nop

    .line 4179
    if-eqz v1, :cond_0

    move-object v2, v1

    goto :goto_1

    :cond_0
    move-object v2, p1

    .line 4178
    :goto_1
    invoke-virtual {p0, p2, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;

    move-result-object v2

    .line 4180
    .local v2, "pkg":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v2, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    .line 4173
    .end local v1    # "workSourceName":Ljava/lang/String;
    .end local v2    # "pkg":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    :cond_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 4184
    .end local v0    # "i":I
    :cond_2
    invoke-virtual {p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    .line 4185
    .local v0, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v0, :cond_4

    .line 4186
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_2
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_4

    .line 4187
    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/WorkSource$WorkChain;

    .line 4188
    .local v2, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result p2

    .line 4190
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isOnBattery()Z

    move-result v3

    if-eqz v3, :cond_3

    .line 4191
    invoke-virtual {p0, p2, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;

    move-result-object v3

    .line 4192
    .local v3, "pkg":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v3, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    .line 4186
    .end local v2    # "wc":Landroid/os/WorkSource$WorkChain;
    .end local v3    # "pkg":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    :cond_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 4196
    .end local v0    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v1    # "i":I
    :cond_4
    goto :goto_3

    .line 4197
    :cond_5
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_6

    .line 4198
    invoke-virtual {p0, p2, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;

    move-result-object v0

    .line 4199
    .local v0, "pkg":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v0, p4}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    .line 4202
    .end local v0    # "pkg":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    :cond_6
    :goto_3
    return-void
.end method

.method public blacklist noteWifiBatchedScanStartedFromSourceLocked(Landroid/os/WorkSource;I)V
    .locals 4
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "csph"    # I

    .line 6236
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6237
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6238
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    invoke-virtual {p0, v2, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteWifiBatchedScanStartedLocked(II)V

    .line 6237
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6241
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6242
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6243
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6244
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v3

    invoke-virtual {p0, v3, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteWifiBatchedScanStartedLocked(II)V

    .line 6243
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6247
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public blacklist noteWifiBatchedScanStartedLocked(II)V
    .locals 3
    .param p1, "uid"    # I
    .param p2, "csph"    # I

    .line 6112
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6113
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6114
    .local v0, "elapsedRealtime":J
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v2

    invoke-virtual {v2, p2, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiBatchedScanStartedLocked(IJ)V

    .line 6115
    return-void
.end method

.method public blacklist noteWifiBatchedScanStoppedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 4
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6250
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6251
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6252
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteWifiBatchedScanStoppedLocked(I)V

    .line 6251
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6255
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6256
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6257
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6258
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteWifiBatchedScanStoppedLocked(I)V

    .line 6257
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6261
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public blacklist noteWifiBatchedScanStoppedLocked(I)V
    .locals 3
    .param p1, "uid"    # I

    .line 6118
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6119
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6120
    .local v0, "elapsedRealtime":J
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v2

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiBatchedScanStoppedLocked(J)V

    .line 6121
    return-void
.end method

.method public greylist noteWifiMulticastDisabledLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6148
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6149
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6150
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6151
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastNesting:I

    .line 6152
    if-nez v4, :cond_0

    .line 6153
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x10001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6156
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6159
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 6161
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 6164
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiMulticastDisabledLocked(J)V

    .line 6165
    return-void
.end method

.method public greylist noteWifiMulticastEnabledLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6127
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6128
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6129
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6130
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastNesting:I

    if-nez v4, :cond_0

    .line 6131
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x10000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6134
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6137
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v4

    if-nez v4, :cond_0

    .line 6139
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 6142
    :cond_0
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastNesting:I

    .line 6143
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiMulticastEnabledLocked(J)V

    .line 6144
    return-void
.end method

.method public blacklist noteWifiOffLocked()V
    .locals 7

    .line 5402
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5403
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5404
    .local v2, "uptime":J
    iget-boolean v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOn:Z

    if-eqz v4, :cond_0

    .line 5405
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x10000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5408
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5409
    const/4 v4, 0x0

    iput-boolean v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOn:Z

    .line 5410
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5411
    const/4 v4, 0x2

    const-string/jumbo v5, "wifi-on"

    invoke-direct {p0, v5, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5413
    :cond_0
    return-void
.end method

.method public blacklist noteWifiOnLocked()V
    .locals 7

    .line 5388
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOn:Z

    if-nez v0, :cond_0

    .line 5389
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5390
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5391
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x10000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5394
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5395
    const/4 v4, 0x1

    iput-boolean v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOn:Z

    .line 5396
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5397
    const/4 v4, 0x2

    const-string/jumbo v5, "wifi-off"

    invoke-direct {p0, v5, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5399
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_0
    return-void
.end method

.method public blacklist noteWifiRadioPowerState(IJI)V
    .locals 11
    .param p1, "powerState"    # I
    .param p2, "timestampNs"    # J
    .param p4, "uid"    # I

    .line 5863
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v7

    .line 5864
    .local v7, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v9

    .line 5865
    .local v9, "uptime":J
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiRadioPowerState:I

    if-eq v0, p1, :cond_4

    .line 5866
    const/4 v0, 0x2

    if-eq p1, v0, :cond_1

    const/4 v0, 0x3

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    .line 5869
    .local v0, "active":Z
    :goto_1
    if-eqz v0, :cond_3

    .line 5870
    if-lez p4, :cond_2

    .line 5871
    move-object v1, p0

    move-wide v2, v7

    move-wide v4, v9

    move v6, p4

    invoke-direct/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteWifiRadioApWakeupLocked(JJI)V

    .line 5873
    :cond_2
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x4000000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5874
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_2

    .line 5876
    :cond_3
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, -0x4000001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5877
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    const-wide/32 v2, 0xf4240

    div-long v2, p2, v2

    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5882
    :goto_2
    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5883
    iput p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiRadioPowerState:I

    .line 5885
    .end local v0    # "active":Z
    :cond_4
    return-void
.end method

.method public blacklist noteWifiRssiChangedLocked(I)V
    .locals 8
    .param p1, "newRssi"    # I

    .line 6027
    const/4 v0, 0x5

    invoke-static {p1, v0}, Landroid/net/wifi/WifiManager;->calculateSignalLevel(II)I

    move-result v0

    .line 6029
    .local v0, "strengthBin":I
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthBin:I

    if-eq v1, v0, :cond_3

    .line 6030
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 6031
    .local v1, "elapsedRealtime":J
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 6032
    .local v3, "uptime":J
    iget v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthBin:I

    if-ltz v5, :cond_0

    .line 6033
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v5, v6, v5

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 6036
    :cond_0
    if-ltz v0, :cond_2

    .line 6037
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v0

    invoke-virtual {v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v5

    if-nez v5, :cond_1

    .line 6038
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v0

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 6040
    :cond_1
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    and-int/lit8 v6, v6, -0x71

    shl-int/lit8 v7, v0, 0x4

    or-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 6045
    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    goto :goto_0

    .line 6047
    :cond_2
    const/4 v5, -0x1

    invoke-virtual {p0, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->stopAllWifiSignalStrengthTimersLocked(I)V

    .line 6049
    :goto_0
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 6051
    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    :cond_3
    return-void
.end method

.method public blacklist noteWifiRunningChangedLocked(Landroid/os/WorkSource;Landroid/os/WorkSource;)V
    .locals 7
    .param p1, "oldWs"    # Landroid/os/WorkSource;
    .param p2, "newWs"    # Landroid/os/WorkSource;

    .line 5918
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunning:Z

    if-eqz v0, :cond_4

    .line 5919
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5920
    .local v0, "elapsedRealtime":J
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v2

    .line 5921
    .local v2, "N":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_0
    if-ge v3, v2, :cond_0

    .line 5922
    invoke-virtual {p1, v3}, Landroid/os/WorkSource;->get(I)I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 5923
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v5

    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 5921
    .end local v4    # "uid":I
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 5926
    .end local v3    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v3

    .line 5927
    .local v3, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v3, :cond_1

    .line 5928
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_1
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v5

    if-ge v4, v5, :cond_1

    .line 5929
    invoke-interface {v3, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v5

    invoke-virtual {p0, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 5930
    .local v5, "uid":I
    invoke-virtual {p0, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v6

    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 5928
    .end local v5    # "uid":I
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 5934
    .end local v4    # "i":I
    :cond_1
    invoke-virtual {p2}, Landroid/os/WorkSource;->size()I

    move-result v2

    .line 5935
    const/4 v4, 0x0

    .restart local v4    # "i":I
    :goto_2
    if-ge v4, v2, :cond_2

    .line 5936
    invoke-virtual {p2, v4}, Landroid/os/WorkSource;->get(I)I

    move-result v5

    invoke-virtual {p0, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 5937
    .restart local v5    # "uid":I
    invoke-virtual {p0, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v6

    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5935
    .end local v5    # "uid":I
    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    .line 5940
    .end local v4    # "i":I
    :cond_2
    invoke-virtual {p2}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v3

    .line 5941
    if-eqz v3, :cond_3

    .line 5942
    const/4 v4, 0x0

    .restart local v4    # "i":I
    :goto_3
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v5

    if-ge v4, v5, :cond_3

    .line 5943
    invoke-interface {v3, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v5

    invoke-virtual {p0, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 5944
    .restart local v5    # "uid":I
    invoke-virtual {p0, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v6

    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5942
    .end local v5    # "uid":I
    add-int/lit8 v4, v4, 0x1

    goto :goto_3

    .line 5947
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "N":I
    .end local v3    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v4    # "i":I
    :cond_3
    goto :goto_4

    .line 5948
    :cond_4
    const-string v0, "OppoBatteryStatsImpl"

    const-string/jumbo v1, "noteWifiRunningChangedLocked -- called while WIFI not running"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5950
    :goto_4
    return-void
.end method

.method public blacklist noteWifiRunningLocked(Landroid/os/WorkSource;)V
    .locals 9
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 5888
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunning:Z

    if-nez v0, :cond_2

    .line 5889
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5890
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5891
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x20000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5894
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5895
    const/4 v4, 0x1

    iput-boolean v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 5896
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5897
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v4

    .line 5898
    .local v4, "N":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_0
    if-ge v5, v4, :cond_0

    .line 5899
    invoke-virtual {p1, v5}, Landroid/os/WorkSource;->get(I)I

    move-result v6

    invoke-virtual {p0, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v6

    .line 5900
    .local v6, "uid":I
    invoke-virtual {p0, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v7

    invoke-virtual {v7, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5898
    .end local v6    # "uid":I
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 5903
    .end local v5    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v5

    .line 5904
    .local v5, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v5, :cond_1

    .line 5905
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_1
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v7

    if-ge v6, v7, :cond_1

    .line 5906
    invoke-interface {v5, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v7}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v7

    invoke-virtual {p0, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v7

    .line 5907
    .local v7, "uid":I
    invoke-virtual {p0, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v8

    invoke-virtual {v8, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5905
    .end local v7    # "uid":I
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 5911
    .end local v6    # "i":I
    :cond_1
    const/4 v6, 0x2

    const-string/jumbo v7, "wifi-running"

    invoke-direct {p0, v7, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5912
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "N":I
    .end local v5    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    goto :goto_2

    .line 5913
    :cond_2
    const-string v0, "OppoBatteryStatsImpl"

    const-string/jumbo v1, "noteWifiRunningLocked -- called while WIFI running"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5915
    :goto_2
    return-void
.end method

.method public blacklist noteWifiScanStartedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6202
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6203
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6204
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 6205
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteWifiScanStartedLocked(I)V

    .line 6203
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6208
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6209
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6210
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6211
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 6212
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 6213
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteWifiScanStartedLocked(I)V

    .line 6210
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6216
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public blacklist noteWifiScanStartedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6086
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6087
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6088
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanNesting:I

    if-nez v4, :cond_0

    .line 6089
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x8000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6092
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6094
    :cond_0
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanNesting:I

    .line 6095
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiScanStartedLocked(J)V

    .line 6096
    return-void
.end method

.method public blacklist noteWifiScanStoppedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6219
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6220
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6221
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 6222
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteWifiScanStoppedLocked(I)V

    .line 6220
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6225
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6226
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6227
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6228
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 6229
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 6230
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteWifiScanStoppedLocked(I)V

    .line 6227
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6233
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public blacklist noteWifiScanStoppedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6099
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6100
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6101
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanNesting:I

    .line 6102
    if-nez v4, :cond_0

    .line 6103
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x8000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6106
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6108
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiScanStoppedLocked(J)V

    .line 6109
    return-void
.end method

.method public blacklist noteWifiStateLocked(ILjava/lang/String;)V
    .locals 4
    .param p1, "wifiState"    # I
    .param p2, "accessPoint"    # Ljava/lang/String;

    .line 5984
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiState:I

    if-eq v0, p1, :cond_1

    .line 5985
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5986
    .local v0, "elapsedRealtime":J
    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiState:I

    if-ltz v2, :cond_0

    .line 5987
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v3, v2

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5989
    :cond_0
    iput p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiState:I

    .line 5990
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, p1

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5991
    const/4 v2, 0x2

    const-string/jumbo v3, "wifi-state"

    invoke-direct {p0, v3, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5993
    .end local v0    # "elapsedRealtime":J
    :cond_1
    return-void
.end method

.method public blacklist noteWifiStoppedLocked(Landroid/os/WorkSource;)V
    .locals 9
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 5953
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunning:Z

    if-eqz v0, :cond_2

    .line 5954
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5955
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5956
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x20000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5959
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5960
    const/4 v4, 0x0

    iput-boolean v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 5961
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5962
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v4

    .line 5963
    .local v4, "N":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_0
    if-ge v5, v4, :cond_0

    .line 5964
    invoke-virtual {p1, v5}, Landroid/os/WorkSource;->get(I)I

    move-result v6

    invoke-virtual {p0, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v6

    .line 5965
    .local v6, "uid":I
    invoke-virtual {p0, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v7

    invoke-virtual {v7, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 5963
    .end local v6    # "uid":I
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 5968
    .end local v5    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v5

    .line 5969
    .local v5, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v5, :cond_1

    .line 5970
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_1
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v7

    if-ge v6, v7, :cond_1

    .line 5971
    invoke-interface {v5, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v7}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v7

    invoke-virtual {p0, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v7

    .line 5972
    .local v7, "uid":I
    invoke-virtual {p0, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v8

    invoke-virtual {v8, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 5970
    .end local v7    # "uid":I
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 5976
    .end local v6    # "i":I
    :cond_1
    const/4 v6, 0x2

    const-string/jumbo v7, "wifi-stopped"

    invoke-direct {p0, v7, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5977
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "N":I
    .end local v5    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    goto :goto_2

    .line 5978
    :cond_2
    const-string v0, "OppoBatteryStatsImpl"

    const-string/jumbo v1, "noteWifiStoppedLocked -- called while WIFI not running"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5980
    :goto_2
    return-void
.end method

.method public blacklist noteWifiSupplicantStateChangedLocked(IZ)V
    .locals 7
    .param p1, "supplState"    # I
    .param p2, "failedAuth"    # Z

    .line 5997
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplState:I

    if-eq v0, p1, :cond_1

    .line 5998
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5999
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6000
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplState:I

    if-ltz v4, :cond_0

    .line 6001
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v4, v5, v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 6003
    :cond_0
    iput p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplState:I

    .line 6004
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, p1

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 6005
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    and-int/lit8 v5, v5, -0x10

    shl-int/lit8 v6, p1, 0x0

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 6010
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6012
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_1
    return-void
.end method

.method public blacklist onCleanupUserLocked(I)V
    .locals 10
    .param p1, "userId"    # I

    .line 13240
    const/4 v0, 0x0

    invoke-static {p1, v0}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    .line 13241
    .local v0, "firstUidForUser":I
    const v1, 0x1869f

    invoke-static {p1, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v7

    .line 13242
    .local v7, "lastUidForUser":I
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v9, Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    .line 13243
    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v5

    move-object v1, v9

    move-object v2, p0

    move v3, v0

    move v4, v7

    invoke-direct/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;IIJ)V

    .line 13242
    invoke-interface {v8, v9}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    .line 13244
    return-void
.end method

.method public blacklist onUserRemovedLocked(I)V
    .locals 6
    .param p1, "userId"    # I

    .line 13247
    const/4 v0, 0x0

    invoke-static {p1, v0}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    .line 13248
    .local v0, "firstUidForUser":I
    const v1, 0x1869f

    invoke-static {p1, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v1

    .line 13249
    .local v1, "lastUidForUser":I
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    const/4 v3, 0x0

    invoke-virtual {v2, v0, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13250
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13251
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v2

    .line 13252
    .local v2, "firstIndex":I
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v3

    .line 13253
    .local v3, "lastIndex":I
    move v4, v2

    .local v4, "i":I
    :goto_0
    if-gt v4, v3, :cond_1

    .line 13254
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 13255
    .local v5, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    if-eqz v5, :cond_0

    .line 13256
    invoke-virtual {v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->detachFromTimeBase()V

    .line 13253
    .end local v5    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_0
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 13259
    .end local v4    # "i":I
    :cond_1
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    sub-int v5, v3, v2

    add-int/lit8 v5, v5, 0x1

    invoke-virtual {v4, v2, v5}, Landroid/util/SparseArray;->removeAtRange(II)V

    .line 13260
    return-void
.end method

.method public blacklist postBatteryNeedsCpuUpdateMsg()V
    .locals 2

    .line 474
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 475
    return-void
.end method

.method public blacklist prepareForDumpLocked()V
    .locals 0

    .line 15312
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 15316
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getStartClockTime()J

    .line 15317
    return-void
.end method

.method public blacklist pullPendingStateUpdatesLocked()V
    .locals 1

    .line 10942
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_0

    .line 10943
    iget v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    .line 10945
    :cond_0
    return-void
.end method

.method blacklist readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V
    .locals 11
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;
    .param p2, "dit"    # Landroid/os/BatteryStats$DailyItem;
    .param p3, "isCharge"    # Z
    .param p4, "tag"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/NumberFormatException;,
            Lorg/xmlpull/v1/XmlPullParserException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 10445
    const/4 v0, 0x0

    const-string/jumbo v1, "n"

    invoke-interface {p1, v0, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 10446
    .local v1, "numAttr":Ljava/lang/String;
    const-string v2, "OppoBatteryStatsImpl"

    if-nez v1, :cond_0

    .line 10447
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Missing \'n\' attribute at "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getPositionDescription()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10448
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10449
    return-void

    .line 10451
    :cond_0
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v3

    .line 10452
    .local v3, "num":I
    new-instance v4, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v4, v3}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    .line 10453
    .local v4, "steps":Landroid/os/BatteryStats$LevelStepTracker;
    if-eqz p3, :cond_1

    .line 10454
    iput-object v4, p2, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    goto :goto_0

    .line 10456
    :cond_1
    iput-object v4, p2, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    .line 10458
    :goto_0
    const/4 v5, 0x0

    .line 10459
    .local v5, "i":I
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v6

    .line 10461
    .local v6, "outerDepth":I
    :cond_2
    :goto_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v7

    move v8, v7

    .local v8, "type":I
    const/4 v9, 0x1

    if-eq v7, v9, :cond_8

    const/4 v7, 0x3

    if-ne v8, v7, :cond_3

    .line 10462
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v9

    if-le v9, v6, :cond_8

    .line 10463
    :cond_3
    if-eq v8, v7, :cond_2

    const/4 v7, 0x4

    if-ne v8, v7, :cond_4

    .line 10464
    goto :goto_1

    .line 10467
    :cond_4
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v7

    .line 10468
    .local v7, "tagName":Ljava/lang/String;
    const-string/jumbo v9, "s"

    invoke-virtual {v9, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_6

    .line 10469
    if-ge v5, v3, :cond_7

    .line 10470
    const-string/jumbo v9, "v"

    invoke-interface {p1, v0, v9}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v9

    .line 10471
    .local v9, "valueAttr":Ljava/lang/String;
    if-eqz v9, :cond_5

    .line 10472
    invoke-virtual {v4, v5, v9}, Landroid/os/BatteryStats$LevelStepTracker;->decodeEntryAt(ILjava/lang/String;)V

    .line 10473
    add-int/lit8 v5, v5, 0x1

    .line 10475
    .end local v9    # "valueAttr":Ljava/lang/String;
    :cond_5
    goto :goto_2

    .line 10477
    :cond_6
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Unknown element under <"

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, ">: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10478
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    .line 10477
    invoke-static {v2, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10479
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10481
    .end local v7    # "tagName":Ljava/lang/String;
    :cond_7
    :goto_2
    goto :goto_1

    .line 10482
    :cond_8
    iput v5, v4, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    .line 10483
    return-void
.end method

.method blacklist readDailyItemTagLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    .locals 10
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/NumberFormatException;,
            Lorg/xmlpull/v1/XmlPullParserException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 10391
    new-instance v0, Landroid/os/BatteryStats$DailyItem;

    invoke-direct {v0}, Landroid/os/BatteryStats$DailyItem;-><init>()V

    .line 10392
    .local v0, "dit":Landroid/os/BatteryStats$DailyItem;
    const/4 v1, 0x0

    const-string/jumbo v2, "start"

    invoke-interface {p1, v1, v2}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 10393
    .local v2, "attr":Ljava/lang/String;
    if-eqz v2, :cond_0

    .line 10394
    invoke-static {v2}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v3

    iput-wide v3, v0, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    .line 10396
    :cond_0
    const-string v3, "end"

    invoke-interface {p1, v1, v3}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 10397
    if-eqz v2, :cond_1

    .line 10398
    invoke-static {v2}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v3

    iput-wide v3, v0, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    .line 10400
    :cond_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v3

    .line 10402
    .local v3, "outerDepth":I
    :cond_2
    :goto_0
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v4

    move v5, v4

    .local v5, "type":I
    const/4 v6, 0x1

    if-eq v4, v6, :cond_c

    const/4 v4, 0x3

    if-ne v5, v4, :cond_3

    .line 10403
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v7

    if-le v7, v3, :cond_c

    .line 10404
    :cond_3
    if-eq v5, v4, :cond_2

    const/4 v4, 0x4

    if-ne v5, v4, :cond_4

    .line 10405
    goto :goto_0

    .line 10408
    :cond_4
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v4

    .line 10409
    .local v4, "tagName":Ljava/lang/String;
    const-string v7, "dis"

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    const/4 v9, 0x0

    if-eqz v8, :cond_5

    .line 10410
    invoke-virtual {p0, p1, v0, v9, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V

    goto/16 :goto_2

    .line 10411
    :cond_5
    const-string v7, "chg"

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_6

    .line 10412
    invoke-virtual {p0, p1, v0, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V

    goto/16 :goto_2

    .line 10413
    :cond_6
    const-string/jumbo v7, "upd"

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    const-string/jumbo v8, "pkg"

    if-eqz v7, :cond_9

    .line 10414
    iget-object v7, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-nez v7, :cond_7

    .line 10415
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V

    iput-object v7, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    .line 10417
    :cond_7
    new-instance v7, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v7}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 10418
    .local v7, "pc":Landroid/os/BatteryStats$PackageChange;
    iput-boolean v6, v7, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 10419
    invoke-interface {p1, v1, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    iput-object v6, v7, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 10420
    const-string/jumbo v6, "ver"

    invoke-interface {p1, v1, v6}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    .line 10421
    .local v6, "verStr":Ljava/lang/String;
    if-eqz v6, :cond_8

    invoke-static {v6}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v8

    goto :goto_1

    :cond_8
    const-wide/16 v8, 0x0

    :goto_1
    iput-wide v8, v7, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    .line 10422
    iget-object v8, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v8, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10423
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10424
    .end local v6    # "verStr":Ljava/lang/String;
    .end local v7    # "pc":Landroid/os/BatteryStats$PackageChange;
    goto :goto_2

    :cond_9
    const-string/jumbo v6, "rem"

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_b

    .line 10425
    iget-object v6, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-nez v6, :cond_a

    .line 10426
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    iput-object v6, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    .line 10428
    :cond_a
    new-instance v6, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v6}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 10429
    .local v6, "pc":Landroid/os/BatteryStats$PackageChange;
    iput-boolean v9, v6, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 10430
    invoke-interface {p1, v1, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    iput-object v7, v6, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 10431
    iget-object v7, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10432
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10433
    .end local v6    # "pc":Landroid/os/BatteryStats$PackageChange;
    goto :goto_2

    .line 10434
    :cond_b
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Unknown element under <item>: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10435
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 10434
    const-string v7, "OppoBatteryStatsImpl"

    invoke-static {v7, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10436
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10438
    .end local v4    # "tagName":Ljava/lang/String;
    :goto_2
    goto/16 :goto_0

    .line 10439
    :cond_c
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10440
    return-void
.end method

.method public blacklist readDailyStatsLocked()V
    .locals 3

    .line 10324
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Reading daily items from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    invoke-virtual {v1}, Landroid/util/AtomicFile;->getBaseFile()Ljava/io/File;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "OppoBatteryStatsImpl"

    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10325
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 10328
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    invoke-virtual {v0}, Landroid/util/AtomicFile;->openRead()Ljava/io/FileInputStream;

    move-result-object v0
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_3

    .line 10331
    .local v0, "stream":Ljava/io/FileInputStream;
    nop

    .line 10333
    :try_start_1
    invoke-static {}, Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;

    move-result-object v1

    .line 10334
    .local v1, "parser":Lorg/xmlpull/v1/XmlPullParser;
    sget-object v2, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v2}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v2

    invoke-interface {v1, v0, v2}, Lorg/xmlpull/v1/XmlPullParser;->setInput(Ljava/io/InputStream;Ljava/lang/String;)V

    .line 10335
    invoke-direct {p0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readDailyItemsLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    :try_end_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10339
    .end local v1    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    :try_start_2
    invoke-virtual {v0}, Ljava/io/FileInputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2

    goto :goto_1

    .line 10338
    :catchall_0
    move-exception v1

    .line 10339
    :try_start_3
    invoke-virtual {v0}, Ljava/io/FileInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    .line 10341
    goto :goto_0

    .line 10340
    :catch_0
    move-exception v2

    .line 10342
    :goto_0
    throw v1

    .line 10336
    :catch_1
    move-exception v1

    .line 10339
    :try_start_4
    invoke-virtual {v0}, Ljava/io/FileInputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    .line 10341
    :goto_1
    goto :goto_2

    .line 10340
    :catch_2
    move-exception v1

    .line 10342
    nop

    .line 10343
    :goto_2
    return-void

    .line 10329
    .end local v0    # "stream":Ljava/io/FileInputStream;
    :catch_3
    move-exception v0

    .line 10330
    .local v0, "e":Ljava/io/FileNotFoundException;
    return-void
.end method

.method public blacklist readFromParcel(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "in"    # Landroid/os/Parcel;

    .line 14886
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readFromParcelLocked(Landroid/os/Parcel;)V

    .line 14887
    return-void
.end method

.method blacklist readFromParcelLocked(Landroid/os/Parcel;)V
    .locals 17
    .param p1, "in"    # Landroid/os/Parcel;

    .line 14890
    move-object/from16 v0, p0

    move-object/from16 v8, p1

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    .line 14891
    .local v9, "magic":I
    const v1, -0x458a8b8b

    if-ne v9, v1, :cond_17

    .line 14895
    const/4 v10, 0x0

    invoke-virtual {v0, v8, v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readHistoryBuffer(Landroid/os/Parcel;Z)V

    .line 14896
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v1, v8}, Lcom/android/internal/os/OppoBatteryStatsHistory;->readFromParcel(Landroid/os/Parcel;)V

    .line 14898
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartCount:I

    .line 14899
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartClockTime:J

    .line 14900
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    .line 14901
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    .line 14902
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUptime:J

    .line 14903
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUptimeStart:J

    .line 14904
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRealtime:J

    .line 14905
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRealtimeStart:J

    .line 14906
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    const/4 v11, 0x1

    if-eqz v1, :cond_0

    move v1, v11

    goto :goto_0

    :cond_0
    move v1, v10

    :goto_0
    iput-boolean v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    .line 14907
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 14908
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 14909
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 14910
    iput-boolean v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryInternal:Z

    .line 14911
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->readFromParcel(Landroid/os/Parcel;)V

    .line 14912
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->readFromParcel(Landroid/os/Parcel;)V

    .line 14914
    iput v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    .line 14915
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/4 v4, -0x1

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14916
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14917
    const/4 v1, 0x0

    move v12, v1

    .local v12, "i":I
    :goto_1
    const/4 v13, 0x5

    if-ge v12, v13, :cond_1

    .line 14918
    iget-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v14, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int/lit8 v4, v12, -0x64

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v14

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v14, v13, v12

    .line 14917
    add-int/lit8 v12, v12, 0x1

    goto :goto_1

    .line 14921
    .end local v12    # "i":I
    :cond_1
    iput-boolean v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractive:Z

    .line 14922
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0xa

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14923
    iput-boolean v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOn:Z

    .line 14924
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v4, -0x2

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14926
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestLightIdleTime:J

    .line 14927
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestFullIdleTime:J

    .line 14928
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v4, -0xe

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14930
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v4, -0xb

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14932
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v4, -0xf

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14934
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v4, -0xc

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14935
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v4, -0x3

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14936
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_2
    if-ge v12, v13, :cond_2

    .line 14937
    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0xc8

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14936
    add-int/lit8 v12, v12, 0x1

    goto :goto_2

    .line 14940
    .end local v12    # "i":I
    :cond_2
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0xc7

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14942
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_3
    sget v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v12, v1, :cond_3

    .line 14943
    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x12c

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14942
    add-int/lit8 v12, v12, 0x1

    goto :goto_3

    .line 14946
    .end local v12    # "i":I
    :cond_3
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_4
    const/16 v2, 0xa

    if-ge v1, v2, :cond_4

    .line 14947
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    new-instance v3, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v3, v2, v1

    .line 14948
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    new-instance v3, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v3, v2, v1

    .line 14946
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 14950
    .end local v1    # "i":I
    :cond_4
    iput v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioPowerState:I

    .line 14951
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0x190

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14953
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v4, -0x191

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14955
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 14956
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 14957
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 14958
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v4, -0x4

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14960
    iput v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiRadioPowerState:I

    .line 14961
    iput-boolean v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOn:Z

    .line 14962
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14963
    iput-boolean v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 14964
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v4, -0x5

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14966
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_5
    const/16 v1, 0x8

    if-ge v12, v1, :cond_5

    .line 14967
    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x258

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14966
    add-int/lit8 v12, v12, 0x1

    goto :goto_5

    .line 14970
    .end local v12    # "i":I
    :cond_5
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_6
    const/16 v1, 0xd

    if-ge v12, v1, :cond_6

    .line 14971
    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x2bc

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14970
    add-int/lit8 v12, v12, 0x1

    goto :goto_6

    .line 14974
    .end local v12    # "i":I
    :cond_6
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_7
    if-ge v12, v13, :cond_7

    .line 14975
    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x320

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14974
    add-int/lit8 v12, v12, 0x1

    goto :goto_7

    .line 14978
    .end local v12    # "i":I
    :cond_7
    new-instance v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0x384

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14980
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v11, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    .line 14982
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_8
    const/4 v1, 0x2

    if-ge v12, v1, :cond_8

    .line 14983
    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x3e8

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14982
    add-int/lit8 v12, v12, 0x1

    goto :goto_8

    .line 14986
    .end local v12    # "i":I
    :cond_8
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v11, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    .line 14988
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v13, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    .line 14990
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    if-eqz v1, :cond_9

    move v1, v11

    goto :goto_9

    :cond_9
    move v1, v10

    :goto_9
    iput-boolean v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasWifiReporting:Z

    .line 14991
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    if-eqz v1, :cond_a

    move v1, v11

    goto :goto_a

    :cond_a
    move v1, v10

    :goto_a
    iput-boolean v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 14992
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    if-eqz v1, :cond_b

    goto :goto_b

    :cond_b
    move v11, v10

    :goto_b
    iput-boolean v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasModemReporting:Z

    .line 14994
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumConnectivityChange:I

    .line 14995
    iput v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnNesting:I

    .line 14997
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v4, 0x0

    const/4 v5, -0x7

    const/4 v6, 0x0

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v2, v1

    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 14998
    iput v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnNesting:I

    .line 14999
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v13, 0x0

    const/4 v14, -0x8

    const/4 v15, 0x0

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v11, v1

    move-object/from16 v16, v2

    invoke-direct/range {v11 .. v16}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 15000
    iput v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnNesting:I

    .line 15001
    new-instance v11, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0x9

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v11

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 15002
    iput v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnNesting:I

    .line 15003
    new-instance v11, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v4, -0xd

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v11

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 15004
    iput v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanNesting:I

    .line 15005
    new-instance v11, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    const/16 v4, -0xe

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object v1, v11

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 15006
    iput-boolean v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    .line 15007
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    .line 15008
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargePlugLevel:I

    .line 15009
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 15010
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 15011
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 15012
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 15013
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 15014
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 15015
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 15016
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 15017
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 15018
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 15019
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v8}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 15020
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v8}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 15021
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 15022
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 15023
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 15024
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 15025
    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 15026
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWriteTime:J

    .line 15028
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->clear()V

    .line 15029
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    .line 15030
    .local v1, "NRPMS":I
    const/4 v2, 0x0

    .local v2, "irpm":I
    :goto_c
    if-ge v2, v1, :cond_d

    .line 15031
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    if-eqz v3, :cond_c

    .line 15032
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v3

    .line 15033
    .local v3, "rpmName":Ljava/lang/String;
    new-instance v4, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v4, v5, v6, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15034
    .local v4, "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5, v3, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15030
    .end local v3    # "rpmName":Ljava/lang/String;
    .end local v4    # "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :cond_c
    add-int/lit8 v2, v2, 0x1

    goto :goto_c

    .line 15037
    .end local v2    # "irpm":I
    :cond_d
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->clear()V

    .line 15038
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 15039
    .local v2, "NSORPMS":I
    const/4 v3, 0x0

    .local v3, "irpm":I
    :goto_d
    if-ge v3, v2, :cond_f

    .line 15040
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    if-eqz v4, :cond_e

    .line 15041
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v4

    .line 15042
    .local v4, "rpmName":Ljava/lang/String;
    new-instance v5, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v5, v6, v7, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15043
    .local v5, "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v6, v4, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15039
    .end local v4    # "rpmName":Ljava/lang/String;
    .end local v5    # "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :cond_e
    add-int/lit8 v3, v3, 0x1

    goto :goto_d

    .line 15047
    .end local v3    # "irpm":I
    :cond_f
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->clear()V

    .line 15048
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    .line 15049
    .local v3, "NKW":I
    const/4 v4, 0x0

    .local v4, "ikw":I
    :goto_e
    if-ge v4, v3, :cond_11

    .line 15050
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-eqz v5, :cond_10

    .line 15051
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v5

    .line 15052
    .local v5, "wakelockName":Ljava/lang/String;
    new-instance v6, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7, v10, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15053
    .local v6, "kwlt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v7, v5, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15049
    .end local v5    # "wakelockName":Ljava/lang/String;
    .end local v6    # "kwlt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :cond_10
    add-int/lit8 v4, v4, 0x1

    goto :goto_e

    .line 15057
    .end local v4    # "ikw":I
    :cond_11
    iget-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->clear()V

    .line 15058
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 15059
    .local v4, "NWR":I
    const/4 v5, 0x0

    .local v5, "iwr":I
    :goto_f
    if-ge v5, v4, :cond_13

    .line 15060
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    if-eqz v6, :cond_12

    .line 15061
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v6

    .line 15062
    .local v6, "reasonName":Ljava/lang/String;
    new-instance v7, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v7, v10, v11, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15063
    .local v7, "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    iget-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v10, v6, v7}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15059
    .end local v6    # "reasonName":Ljava/lang/String;
    .end local v7    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :cond_12
    add-int/lit8 v5, v5, 0x1

    goto :goto_f

    .line 15067
    .end local v5    # "iwr":I
    :cond_13
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v5}, Landroid/util/LongSparseArray;->clear()V

    .line 15068
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 15069
    .local v5, "nmt":I
    const/4 v6, 0x0

    .local v6, "imt":I
    :goto_10
    if-ge v6, v5, :cond_15

    .line 15070
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    if-eqz v7, :cond_14

    .line 15071
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v10

    invoke-static {v10, v11}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v7

    .line 15072
    .local v7, "bucket":Ljava/lang/Long;
    new-instance v10, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v10, v11, v12, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15073
    .local v10, "kmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v7}, Ljava/lang/Long;->longValue()J

    move-result-wide v12

    invoke-virtual {v11, v12, v13, v10}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    .line 15069
    .end local v7    # "bucket":Ljava/lang/Long;
    .end local v10    # "kmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :cond_14
    add-int/lit8 v6, v6, 0x1

    goto :goto_10

    .line 15077
    .end local v6    # "imt":I
    :cond_15
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15078
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15079
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15080
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15081
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15082
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15083
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->clear()V

    .line 15084
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15085
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15086
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15087
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15088
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15091
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 15092
    .local v6, "numUids":I
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->clear()V

    .line 15093
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_11
    if-ge v7, v6, :cond_16

    .line 15094
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    .line 15095
    .local v10, "uid":I
    new-instance v11, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    invoke-direct {v11, v0, v10}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;I)V

    .line 15096
    .local v11, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    iget-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v11, v12, v13, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->readFromParcelLocked(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15097
    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v10, v11}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 15093
    .end local v10    # "uid":I
    .end local v11    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-int/lit8 v7, v7, 0x1

    goto :goto_11

    .line 15099
    .end local v7    # "i":I
    :cond_16
    return-void

    .line 14892
    .end local v1    # "NRPMS":I
    .end local v2    # "NSORPMS":I
    .end local v3    # "NKW":I
    .end local v4    # "NWR":I
    .end local v5    # "nmt":I
    .end local v6    # "numUids":I
    :cond_17
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Bad magic number: #"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v9}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method blacklist readHistoryBuffer(Landroid/os/Parcel;Z)V
    .locals 11
    .param p1, "in"    # Landroid/os/Parcel;
    .param p2, "andOldHistory"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/ParcelFormatException;
        }
    .end annotation

    .line 13747
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    .line 13748
    .local v0, "version":I
    const/16 v1, 0xbb

    if-eq v0, v1, :cond_0

    .line 13749
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "readHistoryBuffer: version got "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", expected "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, "; erasing old stats"

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "BatteryStats"

    invoke-static {v2, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13751
    return-void

    .line 13754
    :cond_0
    invoke-virtual {p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    .line 13756
    .local v1, "historyBaseTime":J
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Landroid/os/Parcel;->setDataSize(I)V

    .line 13757
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v3, v4}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 13759
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    .line 13760
    .local v3, "bufSize":I
    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I

    move-result v4

    .line 13761
    .local v4, "curPos":I
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget v5, v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    mul-int/lit8 v5, v5, 0x64

    if-ge v3, v5, :cond_4

    .line 13764
    and-int/lit8 v5, v3, -0x4

    if-ne v5, v3, :cond_3

    .line 13770
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v5, p1, v4, v3}, Landroid/os/Parcel;->appendFrom(Landroid/os/Parcel;II)V

    .line 13771
    add-int v5, v4, v3

    invoke-virtual {p1, v5}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 13774
    if-eqz p2, :cond_1

    .line 13775
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readOldHistory(Landroid/os/Parcel;)V

    .line 13784
    :cond_1
    iput-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBaseTime:J

    .line 13794
    const-wide/16 v5, 0x0

    cmp-long v5, v1, v5

    if-lez v5, :cond_2

    .line 13795
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v5

    .line 13796
    .local v5, "oldnow":J
    iget-wide v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBaseTime:J

    sub-long/2addr v7, v5

    const-wide/16 v9, 0x1

    add-long/2addr v7, v9

    iput-wide v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBaseTime:J

    .line 13804
    .end local v5    # "oldnow":J
    :cond_2
    return-void

    .line 13765
    :cond_3
    new-instance v5, Landroid/os/ParcelFormatException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "File corrupt: history data buffer not aligned "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 13762
    :cond_4
    new-instance v5, Landroid/os/ParcelFormatException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "File corrupt: history data buffer too large "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v5
.end method

.method public blacklist readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V
    .locals 11
    .param p1, "src"    # Landroid/os/Parcel;
    .param p2, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3527
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    .line 3528
    .local v0, "firstToken":I
    const v1, 0x7ffff

    and-int/2addr v1, v0

    .line 3529
    .local v1, "deltaTimeToken":I
    const/4 v2, 0x0

    iput-byte v2, p2, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    .line 3530
    const/4 v3, 0x1

    iput v3, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3534
    const v4, 0x7fffd

    const/4 v5, 0x2

    if-ge v1, v4, :cond_0

    .line 3535
    iget-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    int-to-long v8, v1

    add-long/2addr v6, v8

    iput-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    goto :goto_0

    .line 3536
    :cond_0
    if-ne v1, v4, :cond_1

    .line 3537
    invoke-virtual {p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v2

    iput-wide v2, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    .line 3538
    iget v2, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v2, v5

    iput v2, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3540
    invoke-virtual {p2, p1}, Landroid/os/BatteryStats$HistoryItem;->readFromParcel(Landroid/os/Parcel;)V

    .line 3541
    return-void

    .line 3542
    :cond_1
    const v4, 0x7fffe

    if-ne v1, v4, :cond_2

    .line 3543
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 3544
    .local v4, "delta":I
    iget-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    int-to-long v8, v4

    add-long/2addr v6, v8

    iput-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    .line 3545
    iget v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v6, v3

    iput v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3547
    .end local v4    # "delta":I
    goto :goto_0

    .line 3548
    :cond_2
    invoke-virtual {p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v6

    .line 3550
    .local v6, "delta":J
    iget-wide v8, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    add-long/2addr v8, v6

    iput-wide v8, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    .line 3551
    iget v4, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v4, v5

    iput v4, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3555
    .end local v6    # "delta":J
    :goto_0
    const/high16 v4, 0x80000

    and-int/2addr v4, v0

    if-eqz v4, :cond_3

    .line 3556
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 3557
    .local v4, "batteryLevelInt":I
    invoke-direct {p0, v4, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readBatteryLevelInt(ILandroid/os/BatteryStats$HistoryItem;)V

    .line 3558
    iget v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v6, v3

    iput v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    goto :goto_1

    .line 3565
    .end local v4    # "batteryLevelInt":I
    :cond_3
    const/4 v4, 0x0

    .line 3568
    .restart local v4    # "batteryLevelInt":I
    :goto_1
    const/high16 v6, 0x100000

    and-int/2addr v6, v0

    const v7, 0xffffff

    const/high16 v8, -0x2000000

    if-eqz v6, :cond_7

    .line 3569
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 3570
    .local v6, "stateInt":I
    and-int/2addr v8, v0

    and-int/2addr v7, v6

    or-int/2addr v7, v8

    iput v7, p2, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3571
    shr-int/lit8 v7, v6, 0x1d

    and-int/lit8 v7, v7, 0x7

    int-to-byte v7, v7

    iput-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 3573
    shr-int/lit8 v7, v6, 0x1a

    and-int/lit8 v7, v7, 0x7

    int-to-byte v7, v7

    iput-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    .line 3575
    shr-int/lit8 v7, v6, 0x18

    const/4 v8, 0x3

    and-int/2addr v7, v8

    int-to-byte v7, v7

    iput-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 3577
    iget-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    if-eq v7, v3, :cond_6

    if-eq v7, v5, :cond_5

    if-eq v7, v8, :cond_4

    goto :goto_2

    .line 3585
    :cond_4
    const/4 v5, 0x4

    iput-byte v5, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    goto :goto_2

    .line 3582
    :cond_5
    iput-byte v5, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 3583
    goto :goto_2

    .line 3579
    :cond_6
    iput-byte v3, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 3580
    nop

    .line 3588
    :goto_2
    iget v5, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v5, v3

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3595
    .end local v6    # "stateInt":I
    goto :goto_3

    .line 3596
    :cond_7
    and-int v5, v0, v8

    iget v6, p2, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/2addr v6, v7

    or-int/2addr v5, v6

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3599
    :goto_3
    const/high16 v5, 0x200000

    and-int/2addr v5, v0

    if-eqz v5, :cond_8

    .line 3600
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 3605
    :cond_8
    const/high16 v5, 0x400000

    and-int/2addr v5, v0

    const/4 v6, 0x0

    const v7, 0xffff

    if-eqz v5, :cond_b

    .line 3606
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 3607
    .local v5, "indexes":I
    and-int v8, v5, v7

    .line 3608
    .local v8, "wakeLockIndex":I
    shr-int/lit8 v9, v5, 0x10

    and-int/2addr v9, v7

    .line 3609
    .local v9, "wakeReasonIndex":I
    if-eq v8, v7, :cond_9

    .line 3610
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3611
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {p0, v8, v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    goto :goto_4

    .line 3615
    :cond_9
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3617
    :goto_4
    if-eq v9, v7, :cond_a

    .line 3618
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3619
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {p0, v9, v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    goto :goto_5

    .line 3623
    :cond_a
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3625
    :goto_5
    iget v10, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v10, v3

    iput v10, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3626
    .end local v5    # "indexes":I
    .end local v8    # "wakeLockIndex":I
    .end local v9    # "wakeReasonIndex":I
    goto :goto_6

    .line 3627
    :cond_b
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3628
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3631
    :goto_6
    const/high16 v5, 0x800000

    and-int/2addr v5, v0

    if-eqz v5, :cond_c

    .line 3632
    iget-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3633
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 3634
    .local v2, "codeAndIndex":I
    and-int v5, v2, v7

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3635
    shr-int/lit8 v5, v2, 0x10

    and-int/2addr v5, v7

    .line 3636
    .local v5, "index":I
    iget-object v7, p2, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {p0, v5, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    .line 3637
    iget v7, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v7, v3

    iput v7, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3641
    .end local v2    # "codeAndIndex":I
    .end local v5    # "index":I
    goto :goto_7

    .line 3642
    :cond_c
    iput v2, p2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3645
    :goto_7
    and-int/lit8 v2, v4, 0x1

    if-eqz v2, :cond_d

    .line 3646
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iput-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3647
    iget-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-virtual {v2, p1}, Landroid/os/BatteryStats$HistoryStepDetails;->readFromParcel(Landroid/os/Parcel;)V

    goto :goto_8

    .line 3649
    :cond_d
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3652
    :goto_8
    const/high16 v2, 0x1000000

    and-int/2addr v2, v0

    if-eqz v2, :cond_e

    .line 3653
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    iput v2, p2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 3655
    :cond_e
    invoke-virtual {p1}, Landroid/os/Parcel;->readDouble()D

    move-result-wide v2

    iput-wide v2, p2, Landroid/os/BatteryStats$HistoryItem;->modemRailChargeMah:D

    .line 3656
    invoke-virtual {p1}, Landroid/os/Parcel;->readDouble()D

    move-result-wide v2

    iput-wide v2, p2, Landroid/os/BatteryStats$HistoryItem;->wifiRailChargeMah:D

    .line 3657
    return-void
.end method

.method public blacklist readKernelUidCpuActiveTimesLocked(Z)V
    .locals 6
    .param p1, "onBattery"    # Z

    .line 12256
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 12257
    .local v0, "startTimeMs":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    new-instance v3, Lcom/android/internal/os/-$$Lambda$OppoBatteryStatsImpl$dEimSfNdOHT99cbpec1M05GWSoY;

    invoke-direct {v3, p0, p1}, Lcom/android/internal/os/-$$Lambda$OppoBatteryStatsImpl$dEimSfNdOHT99cbpec1M05GWSoY;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Z)V

    invoke-virtual {v2, v3}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 12273
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    sub-long/2addr v2, v0

    .line 12274
    .local v2, "elapsedTimeMs":J
    const-wide/16 v4, 0x64

    cmp-long v4, v2, v4

    if-ltz v4, :cond_0

    .line 12275
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Reading cpu active times took "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v5, "ms"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "OppoBatteryStatsImpl"

    invoke-static {v5, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12277
    :cond_0
    return-void
.end method

.method public blacklist readKernelUidCpuClusterTimesLocked(Z)V
    .locals 6
    .param p1, "onBattery"    # Z

    .line 12285
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 12286
    .local v0, "startTimeMs":J
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    new-instance v3, Lcom/android/internal/os/-$$Lambda$OppoBatteryStatsImpl$FDagoo6SNT65yywFjIp-8fbqkiA;

    invoke-direct {v3, p0, p1}, Lcom/android/internal/os/-$$Lambda$OppoBatteryStatsImpl$FDagoo6SNT65yywFjIp-8fbqkiA;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Z)V

    invoke-virtual {v2, v3}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 12302
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    sub-long/2addr v2, v0

    .line 12303
    .local v2, "elapsedTimeMs":J
    const-wide/16 v4, 0x64

    cmp-long v4, v2, v4

    if-ltz v4, :cond_0

    .line 12304
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Reading cpu cluster times took "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v5, "ms"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "OppoBatteryStatsImpl"

    invoke-static {v5, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12306
    :cond_0
    return-void
.end method

.method public blacklist readKernelUidCpuFreqTimesLocked(Ljava/util/ArrayList;ZZ)V
    .locals 21
    .param p2, "onBattery"    # Z
    .param p3, "onBatteryScreenOff"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;ZZ)V"
        }
    .end annotation

    .line 12138
    .local p1, "partialTimers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;>;"
    move-object/from16 v7, p0

    move-object/from16 v8, p1

    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    .line 12139
    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->perClusterTimesAvailable()Z

    move-result v9

    .line 12140
    .local v9, "perClusterTimesAvailable":Z
    if-nez v8, :cond_0

    const/4 v0, 0x0

    goto :goto_0

    :cond_0
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v0

    :goto_0
    move v10, v0

    .line 12141
    .local v10, "numWakelocks":I
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v11

    .line 12142
    .local v11, "numClusters":I
    const/4 v0, 0x0

    iput-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    .line 12143
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v12

    .line 12144
    .local v12, "startTimeMs":J
    iget-object v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    new-instance v15, Lcom/android/internal/os/-$$Lambda$OppoBatteryStatsImpl$NHTk5NXlVu59_v6CKBitTAp1wAQ;

    move-object v0, v15

    move-object/from16 v1, p0

    move/from16 v2, p2

    move/from16 v3, p3

    move v4, v9

    move v5, v11

    move v6, v10

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/-$$Lambda$OppoBatteryStatsImpl$NHTk5NXlVu59_v6CKBitTAp1wAQ;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;ZZZII)V

    invoke-virtual {v14, v15}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 12213
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    sub-long/2addr v0, v12

    .line 12214
    .local v0, "elapsedTimeMs":J
    const-wide/16 v2, 0x64

    cmp-long v2, v0, v2

    if-ltz v2, :cond_1

    .line 12215
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Reading cpu freq times took "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v3, "ms"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "OppoBatteryStatsImpl"

    invoke-static {v3, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12218
    :cond_1
    iget-object v2, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    if-eqz v2, :cond_a

    .line 12219
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v10, :cond_9

    .line 12220
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    iget-object v3, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 12221
    .local v3, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-object v4, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    if-eqz v4, :cond_2

    iget-object v4, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    array-length v4, v4

    if-eq v4, v11, :cond_3

    .line 12223
    :cond_2
    iget-object v4, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-static {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 12224
    new-array v4, v11, [[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iput-object v4, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 12227
    :cond_3
    const/4 v4, 0x0

    .local v4, "cluster":I
    :goto_2
    if-ge v4, v11, :cond_8

    .line 12228
    iget-object v5, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v5, v4}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v5

    .line 12229
    .local v5, "speedsInCluster":I
    iget-object v6, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    if-eqz v6, :cond_4

    iget-object v6, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    array-length v6, v6

    if-eq v6, v5, :cond_5

    .line 12231
    :cond_4
    iget-object v6, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    invoke-static {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 12232
    iget-object v6, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    new-array v14, v5, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aput-object v14, v6, v4

    .line 12235
    :cond_5
    iget-object v6, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    .line 12236
    .local v6, "cpuTimeUs":[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;
    const/4 v14, 0x0

    .local v14, "speed":I
    :goto_3
    if-ge v14, v5, :cond_7

    .line 12237
    aget-object v15, v6, v14

    if-nez v15, :cond_6

    .line 12238
    new-instance v15, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-wide/from16 v16, v0

    .end local v0    # "elapsedTimeMs":J
    .local v16, "elapsedTimeMs":J
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v15, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v15, v6, v14

    goto :goto_4

    .line 12237
    .end local v16    # "elapsedTimeMs":J
    .restart local v0    # "elapsedTimeMs":J
    :cond_6
    move-wide/from16 v16, v0

    .line 12240
    .end local v0    # "elapsedTimeMs":J
    .restart local v16    # "elapsedTimeMs":J
    :goto_4
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v0, v0, v4

    aget-wide v0, v0, v14

    sub-int v15, v10, v2

    move/from16 v18, v9

    .end local v9    # "perClusterTimesAvailable":Z
    .local v18, "perClusterTimesAvailable":Z
    int-to-long v8, v15

    div-long/2addr v0, v8

    .line 12242
    .local v0, "allocationUs":J
    aget-object v8, v6, v14

    move/from16 v9, p2

    invoke-virtual {v8, v0, v1, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12243
    iget-object v8, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v8, v8, v4

    aget-wide v19, v8, v14

    sub-long v19, v19, v0

    aput-wide v19, v8, v14

    .line 12236
    .end local v0    # "allocationUs":J
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v8, p1

    move-wide/from16 v0, v16

    move/from16 v9, v18

    goto :goto_3

    .end local v16    # "elapsedTimeMs":J
    .end local v18    # "perClusterTimesAvailable":Z
    .local v0, "elapsedTimeMs":J
    .restart local v9    # "perClusterTimesAvailable":Z
    :cond_7
    move-wide/from16 v16, v0

    move/from16 v18, v9

    move/from16 v9, p2

    .line 12227
    .end local v0    # "elapsedTimeMs":J
    .end local v5    # "speedsInCluster":I
    .end local v6    # "cpuTimeUs":[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;
    .end local v9    # "perClusterTimesAvailable":Z
    .end local v14    # "speed":I
    .restart local v16    # "elapsedTimeMs":J
    .restart local v18    # "perClusterTimesAvailable":Z
    add-int/lit8 v4, v4, 0x1

    move-object/from16 v8, p1

    move/from16 v9, v18

    goto :goto_2

    .end local v16    # "elapsedTimeMs":J
    .end local v18    # "perClusterTimesAvailable":Z
    .restart local v0    # "elapsedTimeMs":J
    .restart local v9    # "perClusterTimesAvailable":Z
    :cond_8
    move-wide/from16 v16, v0

    move/from16 v18, v9

    move/from16 v9, p2

    .line 12219
    .end local v0    # "elapsedTimeMs":J
    .end local v3    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v4    # "cluster":I
    .end local v9    # "perClusterTimesAvailable":Z
    .restart local v16    # "elapsedTimeMs":J
    .restart local v18    # "perClusterTimesAvailable":Z
    add-int/lit8 v2, v2, 0x1

    move-object/from16 v8, p1

    move/from16 v9, v18

    goto/16 :goto_1

    .end local v16    # "elapsedTimeMs":J
    .end local v18    # "perClusterTimesAvailable":Z
    .restart local v0    # "elapsedTimeMs":J
    .restart local v9    # "perClusterTimesAvailable":Z
    :cond_9
    move-wide/from16 v16, v0

    move/from16 v18, v9

    move/from16 v9, p2

    .end local v0    # "elapsedTimeMs":J
    .end local v9    # "perClusterTimesAvailable":Z
    .restart local v16    # "elapsedTimeMs":J
    .restart local v18    # "perClusterTimesAvailable":Z
    goto :goto_5

    .line 12218
    .end local v2    # "i":I
    .end local v16    # "elapsedTimeMs":J
    .end local v18    # "perClusterTimesAvailable":Z
    .restart local v0    # "elapsedTimeMs":J
    .restart local v9    # "perClusterTimesAvailable":Z
    :cond_a
    move-wide/from16 v16, v0

    move/from16 v18, v9

    move/from16 v9, p2

    .line 12248
    .end local v0    # "elapsedTimeMs":J
    .end local v9    # "perClusterTimesAvailable":Z
    .restart local v16    # "elapsedTimeMs":J
    .restart local v18    # "perClusterTimesAvailable":Z
    :goto_5
    return-void
.end method

.method public blacklist readKernelUidCpuTimesLocked(Ljava/util/ArrayList;Landroid/util/SparseLongArray;Z)V
    .locals 18
    .param p2, "updatedUids"    # Landroid/util/SparseLongArray;
    .param p3, "onBattery"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;",
            ">;",
            "Landroid/util/SparseLongArray;",
            "Z)V"
        }
    .end annotation

    .line 12026
    .local p1, "partialTimers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;>;"
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    const-wide/16 v4, 0x0

    iput-wide v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    iput-wide v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12027
    if-nez v1, :cond_0

    const/4 v6, 0x0

    goto :goto_0

    :cond_0
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v6

    .line 12028
    .local v6, "numWakelocks":I
    :goto_0
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v7

    .line 12030
    .local v7, "startTimeMs":J
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    new-instance v10, Lcom/android/internal/os/-$$Lambda$OppoBatteryStatsImpl$j8vEp5VYwTWm3EuslTdP4JOx6IE;

    invoke-direct {v10, v0, v6, v3, v2}, Lcom/android/internal/os/-$$Lambda$OppoBatteryStatsImpl$j8vEp5VYwTWm3EuslTdP4JOx6IE;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;IZLandroid/util/SparseLongArray;)V

    invoke-virtual {v9, v10}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 12087
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v9

    sub-long/2addr v9, v7

    .line 12088
    .local v9, "elapsedTimeMs":J
    const-wide/16 v11, 0x64

    cmp-long v13, v9, v11

    if-ltz v13, :cond_1

    .line 12089
    new-instance v13, Ljava/lang/StringBuilder;

    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    const-string v14, "Reading cpu stats took "

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v13, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v14, "ms"

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    const-string v14, "OppoBatteryStatsImpl"

    invoke-static {v14, v13}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12092
    :cond_1
    if-lez v6, :cond_4

    .line 12094
    iget-wide v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    const-wide/16 v15, 0x32

    mul-long/2addr v13, v15

    div-long/2addr v13, v11

    iput-wide v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12095
    iget-wide v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    mul-long/2addr v13, v15

    div-long/2addr v13, v11

    iput-wide v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    .line 12098
    const/4 v11, 0x0

    .local v11, "i":I
    :goto_1
    if-ge v11, v6, :cond_3

    .line 12099
    invoke-virtual {v1, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 12100
    .local v12, "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;
    iget-wide v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    sub-int v15, v6, v11

    int-to-long v4, v15

    div-long/2addr v13, v4

    long-to-int v4, v13

    .line 12101
    .local v4, "userTimeUs":I
    iget-wide v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    sub-int v5, v6, v11

    move v15, v6

    .end local v6    # "numWakelocks":I
    .local v15, "numWakelocks":I
    int-to-long v5, v5

    div-long/2addr v13, v5

    long-to-int v5, v13

    .line 12113
    .local v5, "systemTimeUs":I
    iget-object v6, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    iget-object v6, v6, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    int-to-long v13, v4

    invoke-virtual {v6, v13, v14, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12114
    iget-object v6, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    iget-object v6, v6, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    int-to-long v13, v5

    invoke-virtual {v6, v13, v14, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12115
    if-eqz v2, :cond_2

    .line 12116
    iget-object v6, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    invoke-virtual {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getUid()I

    move-result v6

    .line 12117
    .local v6, "uid":I
    const-wide/16 v13, 0x0

    invoke-virtual {v2, v6, v13, v14}, Landroid/util/SparseLongArray;->get(IJ)J

    move-result-wide v16

    int-to-long v13, v4

    add-long v16, v16, v13

    int-to-long v13, v5

    add-long v13, v16, v13

    invoke-virtual {v2, v6, v13, v14}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 12120
    .end local v6    # "uid":I
    :cond_2
    iget-object v6, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    const-string v13, "*wakelock*"

    invoke-virtual {v6, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;

    move-result-object v6

    .line 12121
    .local v6, "proc":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;
    div-int/lit16 v13, v4, 0x3e8

    div-int/lit16 v14, v5, 0x3e8

    invoke-virtual {v6, v13, v14, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(IIZ)V

    .line 12123
    iget-wide v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    int-to-long v1, v4

    sub-long/2addr v13, v1

    iput-wide v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12124
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    int-to-long v13, v5

    sub-long/2addr v1, v13

    iput-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    .line 12098
    .end local v4    # "userTimeUs":I
    .end local v5    # "systemTimeUs":I
    .end local v6    # "proc":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;
    .end local v12    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;
    add-int/lit8 v11, v11, 0x1

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move v6, v15

    const-wide/16 v4, 0x0

    goto :goto_1

    .end local v15    # "numWakelocks":I
    .local v6, "numWakelocks":I
    :cond_3
    move v15, v6

    .end local v6    # "numWakelocks":I
    .restart local v15    # "numWakelocks":I
    goto :goto_2

    .line 12092
    .end local v11    # "i":I
    .end local v15    # "numWakelocks":I
    .restart local v6    # "numWakelocks":I
    :cond_4
    move v15, v6

    .line 12127
    .end local v6    # "numWakelocks":I
    .restart local v15    # "numWakelocks":I
    :goto_2
    return-void
.end method

.method public greylist readLocked()V
    .locals 14

    .line 13666
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    if-eqz v0, :cond_0

    .line 13667
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readDailyStatsLocked()V

    .line 13670
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    const-string v1, "OppoBatteryStatsImpl"

    if-nez v0, :cond_1

    .line 13671
    const-string/jumbo v0, "readLocked: no file associated with this instance"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13672
    return-void

    .line 13675
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsHistory;->getActiveFile()Landroid/util/AtomicFile;

    move-result-object v0

    if-nez v0, :cond_2

    .line 13676
    const-string/jumbo v0, "readLocked: no history file associated with this instance"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13678
    return-void

    .line 13681
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->clear()V

    .line 13683
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    .line 13685
    .local v0, "stats":Landroid/os/Parcel;
    const/4 v2, 0x0

    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    .line 13686
    .local v3, "start":J
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    invoke-virtual {v5}, Landroid/util/AtomicFile;->readFully()[B

    move-result-object v5

    .line 13687
    .local v5, "raw":[B
    array-length v6, v5

    invoke-virtual {v0, v5, v2, v6}, Landroid/os/Parcel;->unmarshall([BII)V

    .line 13688
    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 13689
    invoke-virtual {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .end local v3    # "start":J
    .end local v5    # "raw":[B
    goto :goto_0

    .line 13699
    :catchall_0
    move-exception v1

    goto/16 :goto_4

    .line 13695
    :catch_0
    move-exception v3

    .line 13696
    .local v3, "e":Ljava/lang/Exception;
    :try_start_1
    const-string v4, "Error reading battery statistics"

    invoke-static {v1, v4, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13697
    invoke-direct {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->resetAllStatsLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13699
    .end local v3    # "e":Ljava/lang/Exception;
    :goto_0
    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V

    .line 13700
    nop

    .line 13702
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v3

    .line 13704
    .local v3, "history":Landroid/os/Parcel;
    const/4 v4, 0x1

    :try_start_2
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v5

    .line 13705
    .local v5, "start":J
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v7}, Lcom/android/internal/os/OppoBatteryStatsHistory;->getActiveFile()Landroid/util/AtomicFile;

    move-result-object v7

    invoke-virtual {v7}, Landroid/util/AtomicFile;->readFully()[B

    move-result-object v7

    .line 13706
    .local v7, "raw":[B
    array-length v8, v7

    if-lez v8, :cond_3

    .line 13707
    array-length v8, v7

    invoke-virtual {v3, v7, v2, v8}, Landroid/os/Parcel;->unmarshall([BII)V

    .line 13708
    invoke-virtual {v3, v2}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 13709
    invoke-virtual {p0, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readHistoryBuffer(Landroid/os/Parcel;Z)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 13722
    .end local v5    # "start":J
    .end local v7    # "raw":[B
    :cond_3
    :goto_1
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V

    .line 13723
    goto :goto_2

    .line 13722
    :catchall_1
    move-exception v1

    goto :goto_3

    .line 13717
    :catch_1
    move-exception v5

    .line 13718
    .local v5, "e":Ljava/lang/Exception;
    :try_start_3
    const-string v6, "Error reading battery history"

    invoke-static {v1, v6, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13719
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->clearHistoryLocked()V

    .line 13720
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v1}, Lcom/android/internal/os/OppoBatteryStatsHistory;->resetAllFiles()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .end local v5    # "e":Ljava/lang/Exception;
    goto :goto_1

    .line 13725
    :goto_2
    sget-object v1, Landroid/os/Build;->ID:Ljava/lang/String;

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    .line 13727
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataPosition()I

    move-result v1

    if-gtz v1, :cond_4

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    .line 13728
    invoke-virtual {v1}, Lcom/android/internal/os/OppoBatteryStatsHistory;->getFilesNumbers()Ljava/util/List;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    if-le v1, v4, :cond_5

    .line 13729
    :cond_4
    iput-boolean v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    .line 13730
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v10

    .line 13731
    .local v10, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v12

    .line 13735
    .local v12, "uptime":J
    const/4 v1, 0x4

    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {p0, v10, v11, v1, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 13736
    const/4 v9, 0x0

    move-object v4, p0

    move-wide v5, v10

    move-wide v7, v12

    invoke-direct/range {v4 .. v9}, Lcom/android/internal/os/OppoBatteryStatsImpl;->startRecordingHistory(JJZ)V

    .line 13739
    .end local v10    # "elapsedRealtime":J
    .end local v12    # "uptime":J
    :cond_5
    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->recordDailyStatsIfNeededLocked(Z)V

    .line 13740
    return-void

    .line 13722
    :goto_3
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V

    .line 13723
    throw v1

    .line 13699
    .end local v3    # "history":Landroid/os/Parcel;
    :goto_4
    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V

    .line 13700
    throw v1
.end method

.method blacklist readOldHistory(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "in"    # Landroid/os/Parcel;

    .line 13808
    return-void
.end method

.method public blacklist readSummaryFromParcel(Landroid/os/Parcel;)V
    .locals 29
    .param p1, "in"    # Landroid/os/Parcel;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/ParcelFormatException;
        }
    .end annotation

    .line 13858
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 13859
    .local v2, "version":I
    const/16 v3, 0xbb

    if-eq v2, v3, :cond_0

    .line 13860
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "readFromParcel: version got "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, ", expected "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, "; erasing old stats"

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "BatteryStats"

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13862
    return-void

    .line 13865
    :cond_0
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readBoolean()Z

    move-result v3

    .line 13866
    .local v3, "inclHistory":Z
    const/4 v4, 0x1

    if-eqz v3, :cond_1

    .line 13867
    invoke-virtual {v0, v1, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readHistoryBuffer(Landroid/os/Parcel;Z)V

    .line 13868
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v5, v1}, Lcom/android/internal/os/OppoBatteryStatsHistory;->readFromParcel(Landroid/os/Parcel;)V

    .line 13871
    :cond_1
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 13872
    const/4 v5, 0x0

    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 13873
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumHistoryTagChars:I

    .line 13875
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 13876
    .local v6, "numTags":I
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_0
    if-ge v7, v6, :cond_4

    .line 13877
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v8

    .line 13878
    .local v8, "idx":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v9

    .line 13879
    .local v9, "str":Ljava/lang/String;
    if-eqz v9, :cond_3

    .line 13882
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    .line 13883
    .local v10, "uid":I
    new-instance v11, Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v11}, Landroid/os/BatteryStats$HistoryTag;-><init>()V

    .line 13884
    .local v11, "tag":Landroid/os/BatteryStats$HistoryTag;
    iput-object v9, v11, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 13885
    iput v10, v11, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 13886
    iput v8, v11, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    .line 13887
    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    invoke-virtual {v12, v11, v13}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13888
    iget v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextHistoryTagIdx:I

    if-lt v8, v12, :cond_2

    .line 13889
    add-int/lit8 v12, v8, 0x1

    iput v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 13891
    :cond_2
    iget v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumHistoryTagChars:I

    iget-object v13, v11, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {v13}, Ljava/lang/String;->length()I

    move-result v13

    add-int/2addr v13, v4

    add-int/2addr v12, v13

    iput v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumHistoryTagChars:I

    .line 13876
    .end local v8    # "idx":I
    .end local v9    # "str":Ljava/lang/String;
    .end local v10    # "uid":I
    .end local v11    # "tag":Landroid/os/BatteryStats$HistoryTag;
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 13880
    .restart local v8    # "idx":I
    .restart local v9    # "str":Ljava/lang/String;
    :cond_3
    new-instance v4, Landroid/os/ParcelFormatException;

    const-string/jumbo v5, "null history tag string"

    invoke-direct {v4, v5}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 13894
    .end local v7    # "i":I
    .end local v8    # "idx":I
    .end local v9    # "str":Ljava/lang/String;
    :cond_4
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartCount:I

    .line 13895
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v7

    iput-wide v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUptime:J

    .line 13896
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v7

    iput-wide v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRealtime:J

    .line 13897
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v7

    iput-wide v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartClockTime:J

    .line 13898
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v7

    iput-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    .line 13899
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v7

    iput-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    .line 13900
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13901
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13902
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    .line 13903
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargePlugLevel:I

    .line 13904
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 13905
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 13906
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 13907
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 13908
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 13909
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 13910
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 13911
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 13912
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 13913
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 13914
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v7, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13915
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v7, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13916
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v7, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13917
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v7, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13918
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13919
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13920
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13921
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13922
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13923
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    .line 13924
    .local v7, "NPKG":I
    const/4 v8, 0x0

    if-lez v7, :cond_6

    .line 13925
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9, v7}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 13926
    :goto_1
    if-lez v7, :cond_7

    .line 13927
    add-int/lit8 v7, v7, -0x1

    .line 13928
    new-instance v9, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v9}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 13929
    .local v9, "pc":Landroid/os/BatteryStats$PackageChange;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v10

    iput-object v10, v9, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 13930
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_5

    move v10, v4

    goto :goto_2

    :cond_5
    move v10, v5

    :goto_2
    iput-boolean v10, v9, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 13931
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v10

    iput-wide v10, v9, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    .line 13932
    iget-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 13933
    .end local v9    # "pc":Landroid/os/BatteryStats$PackageChange;
    goto :goto_1

    .line 13935
    :cond_6
    iput-object v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 13937
    :cond_7
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v9

    iput-wide v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyStartTime:J

    .line 13938
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v9

    iput-wide v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 13939
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v9

    iput-wide v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 13941
    iget v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartCount:I

    add-int/2addr v9, v4

    iput v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartCount:I

    .line 13943
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    .line 13944
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13945
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13946
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_3
    const/4 v10, 0x5

    if-ge v9, v10, :cond_8

    .line 13947
    iget-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v10, v10, v9

    invoke-virtual {v10, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13946
    add-int/lit8 v9, v9, 0x1

    goto :goto_3

    .line 13949
    .end local v9    # "i":I
    :cond_8
    iput-boolean v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractive:Z

    .line 13950
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13951
    iput-boolean v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOn:Z

    .line 13952
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13953
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v11

    iput-wide v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestLightIdleTime:J

    .line 13954
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v11

    iput-wide v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestFullIdleTime:J

    .line 13955
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13956
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13957
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13958
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13959
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13960
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_4
    if-ge v9, v10, :cond_9

    .line 13961
    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v9

    invoke-virtual {v11, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13960
    add-int/lit8 v9, v9, 0x1

    goto :goto_4

    .line 13963
    .end local v9    # "i":I
    :cond_9
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13964
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_5
    sget v11, Lcom/android/internal/os/OppoBatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v9, v11, :cond_a

    .line 13965
    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v9

    invoke-virtual {v11, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13964
    add-int/lit8 v9, v9, 0x1

    goto :goto_5

    .line 13967
    .end local v9    # "i":I
    :cond_a
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_6
    const/16 v11, 0xa

    if-ge v9, v11, :cond_b

    .line 13968
    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v11, v11, v9

    invoke-virtual {v11, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13969
    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v11, v11, v9

    invoke-virtual {v11, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13967
    add-int/lit8 v9, v9, 0x1

    goto :goto_6

    .line 13971
    .end local v9    # "i":I
    :cond_b
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioPowerState:I

    .line 13972
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13973
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13974
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13975
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13976
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13977
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13978
    iput v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiRadioPowerState:I

    .line 13979
    iput-boolean v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOn:Z

    .line 13980
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13981
    iput-boolean v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 13982
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13983
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_7
    const/16 v12, 0x8

    if-ge v9, v12, :cond_c

    .line 13984
    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v12, v12, v9

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13983
    add-int/lit8 v9, v9, 0x1

    goto :goto_7

    .line 13986
    .end local v9    # "i":I
    :cond_c
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_8
    const/16 v12, 0xd

    if-ge v9, v12, :cond_d

    .line 13987
    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v12, v12, v9

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13986
    add-int/lit8 v9, v9, 0x1

    goto :goto_8

    .line 13989
    .end local v9    # "i":I
    :cond_d
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_9
    if-ge v9, v10, :cond_e

    .line 13990
    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v12, v12, v9

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13989
    add-int/lit8 v9, v9, 0x1

    goto :goto_9

    .line 13992
    .end local v9    # "i":I
    :cond_e
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13993
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13994
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_a
    const/4 v12, 0x2

    if-ge v9, v12, :cond_f

    .line 13995
    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v12, v12, v9

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13994
    add-int/lit8 v9, v9, 0x1

    goto :goto_a

    .line 13997
    .end local v9    # "i":I
    :cond_f
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13998
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13999
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    if-eqz v9, :cond_10

    move v9, v4

    goto :goto_b

    :cond_10
    move v9, v5

    :goto_b
    iput-boolean v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasWifiReporting:Z

    .line 14000
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    if-eqz v9, :cond_11

    move v9, v4

    goto :goto_c

    :cond_11
    move v9, v5

    :goto_c
    iput-boolean v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 14001
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    if-eqz v9, :cond_12

    move v9, v4

    goto :goto_d

    :cond_12
    move v9, v5

    :goto_d
    iput-boolean v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasModemReporting:Z

    .line 14003
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    iput v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumConnectivityChange:I

    .line 14004
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnNesting:I

    .line 14005
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14006
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnNesting:I

    .line 14007
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14008
    iput v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanNesting:I

    .line 14009
    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14010
    iput-boolean v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    .line 14012
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    .line 14013
    .local v9, "NRPMS":I
    const/16 v12, 0x2710

    if-gt v9, v12, :cond_5d

    .line 14016
    const/4 v13, 0x0

    .local v13, "irpm":I
    :goto_e
    if-ge v13, v9, :cond_14

    .line 14017
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v14

    if-eqz v14, :cond_13

    .line 14018
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v14

    .line 14019
    .local v14, "rpmName":Ljava/lang/String;
    invoke-virtual {v0, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    move-result-object v15

    invoke-virtual {v15, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14016
    .end local v14    # "rpmName":Ljava/lang/String;
    :cond_13
    add-int/lit8 v13, v13, 0x1

    goto :goto_e

    .line 14022
    .end local v13    # "irpm":I
    :cond_14
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v13

    .line 14023
    .local v13, "NSORPMS":I
    if-gt v13, v12, :cond_5c

    .line 14026
    const/4 v14, 0x0

    .local v14, "irpm":I
    :goto_f
    if-ge v14, v13, :cond_16

    .line 14027
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v15

    if-eqz v15, :cond_15

    .line 14028
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v15

    .line 14029
    .local v15, "rpmName":Ljava/lang/String;
    invoke-virtual {v0, v15}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getScreenOffRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    move-result-object v4

    invoke-virtual {v4, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14026
    .end local v15    # "rpmName":Ljava/lang/String;
    :cond_15
    add-int/lit8 v14, v14, 0x1

    const/4 v4, 0x1

    goto :goto_f

    .line 14033
    .end local v14    # "irpm":I
    :cond_16
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 14034
    .local v4, "NKW":I
    if-gt v4, v12, :cond_5b

    .line 14037
    const/4 v14, 0x0

    .local v14, "ikw":I
    :goto_10
    if-ge v14, v4, :cond_18

    .line 14038
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v15

    if-eqz v15, :cond_17

    .line 14039
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v15

    .line 14040
    .local v15, "kwltName":Ljava/lang/String;
    invoke-virtual {v0, v15}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getKernelWakelockTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    move-result-object v11

    invoke-virtual {v11, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14037
    .end local v15    # "kwltName":Ljava/lang/String;
    :cond_17
    add-int/lit8 v14, v14, 0x1

    const/16 v11, 0xa

    goto :goto_10

    .line 14044
    .end local v14    # "ikw":I
    :cond_18
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v11

    .line 14045
    .local v11, "NWR":I
    if-gt v11, v12, :cond_5a

    .line 14048
    const/4 v14, 0x0

    .local v14, "iwr":I
    :goto_11
    if-ge v14, v11, :cond_1a

    .line 14049
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v15

    if-eqz v15, :cond_19

    .line 14050
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v15

    .line 14051
    .local v15, "reasonName":Ljava/lang/String;
    invoke-virtual {v0, v15}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    move-result-object v8

    invoke-virtual {v8, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14048
    .end local v15    # "reasonName":Ljava/lang/String;
    :cond_19
    add-int/lit8 v14, v14, 0x1

    const/4 v8, 0x0

    goto :goto_11

    .line 14055
    .end local v14    # "iwr":I
    :cond_1a
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v8

    .line 14056
    .local v8, "NMS":I
    const/4 v14, 0x0

    .local v14, "ims":I
    :goto_12
    if-ge v14, v8, :cond_1c

    .line 14057
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v15

    if-eqz v15, :cond_1b

    .line 14058
    move/from16 v17, v11

    .end local v11    # "NWR":I
    .local v17, "NWR":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v10

    .line 14059
    .local v10, "kmstName":J
    invoke-virtual {v0, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getKernelMemoryTimerLocked(J)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    move-result-object v15

    invoke-virtual {v15, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_13

    .line 14057
    .end local v10    # "kmstName":J
    .end local v17    # "NWR":I
    .restart local v11    # "NWR":I
    :cond_1b
    move/from16 v17, v11

    .line 14056
    .end local v11    # "NWR":I
    .restart local v17    # "NWR":I
    :goto_13
    add-int/lit8 v14, v14, 0x1

    move/from16 v11, v17

    const/4 v10, 0x5

    goto :goto_12

    .end local v17    # "NWR":I
    .restart local v11    # "NWR":I
    :cond_1c
    move/from16 v17, v11

    .line 14063
    .end local v11    # "NWR":I
    .end local v14    # "ims":I
    .restart local v17    # "NWR":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    .line 14064
    .local v10, "NU":I
    if-gt v10, v12, :cond_59

    .line 14067
    const/4 v11, 0x0

    .local v11, "iu":I
    :goto_14
    if-ge v11, v10, :cond_58

    .line 14068
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v14

    .line 14069
    .local v14, "uid":I
    new-instance v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    invoke-direct {v15, v0, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;I)V

    .line 14070
    .local v15, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v14, v15}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 14072
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mOnBatteryBackgroundTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 14073
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mOnBatteryScreenOffBackgroundTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 14075
    iput-boolean v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiRunning:Z

    .line 14076
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_1d

    .line 14077
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14079
    :cond_1d
    iput-boolean v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mFullWifiLockOut:Z

    .line 14080
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_1e

    .line 14081
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14083
    :cond_1e
    iput-boolean v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiScanStarted:Z

    .line 14084
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_1f

    .line 14085
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14087
    :cond_1f
    const/4 v12, -0x1

    iput v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiBatchedScanBinStarted:I

    .line 14088
    const/4 v12, 0x0

    .local v12, "i":I
    :goto_15
    const/4 v5, 0x5

    if-ge v12, v5, :cond_21

    .line 14089
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v18

    if-eqz v18, :cond_20

    .line 14090
    const/4 v5, 0x0

    invoke-virtual {v15, v12, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->makeWifiBatchedScanBin(ILandroid/os/Parcel;)V

    .line 14091
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v12

    invoke-virtual {v5, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14088
    :cond_20
    add-int/lit8 v12, v12, 0x1

    const/4 v5, 0x0

    goto :goto_15

    .line 14094
    .end local v12    # "i":I
    :cond_21
    const/4 v5, 0x0

    iput v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiMulticastWakelockCount:I

    .line 14095
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_22

    .line 14096
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14098
    :cond_22
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_23

    .line 14099
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createAudioTurnedOnTimerLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14101
    :cond_23
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_24

    .line 14102
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createVideoTurnedOnTimerLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14104
    :cond_24
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_25

    .line 14105
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createFlashlightTurnedOnTimerLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14107
    :cond_25
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_26

    .line 14108
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createCameraTurnedOnTimerLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14112
    :cond_26
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_27

    .line 14113
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createForegroundActivityTimerLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14115
    :cond_27
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_28

    .line 14116
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createForegroundServiceTimerLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14118
    :cond_28
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_29

    .line 14119
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createAggregatedPartialWakelockTimerLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14121
    :cond_29
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_2a

    .line 14122
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createBluetoothScanTimerLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14124
    :cond_2a
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_2b

    .line 14125
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createBluetoothUnoptimizedScanTimerLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14127
    :cond_2b
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_2c

    .line 14128
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createBluetoothScanResultCounterLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14130
    :cond_2c
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_2d

    .line 14131
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createBluetoothScanResultBgCounterLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14133
    :cond_2d
    const/16 v12, 0x14

    iput v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcessState:I

    .line 14134
    const/4 v12, 0x0

    .restart local v12    # "i":I
    :goto_16
    const/4 v5, 0x7

    if-ge v12, v5, :cond_2f

    .line 14135
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-eqz v5, :cond_2e

    .line 14136
    const/4 v5, 0x0

    invoke-virtual {v15, v12, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->makeProcessState(ILandroid/os/Parcel;)V

    .line 14137
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v12

    invoke-virtual {v5, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14134
    :cond_2e
    add-int/lit8 v12, v12, 0x1

    const/4 v5, 0x0

    goto :goto_16

    .line 14142
    .end local v12    # "i":I
    :cond_2f
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_30

    .line 14143
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->createVibratorOnTimerLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$BatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$BatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14146
    :cond_30
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_32

    .line 14147
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    if-nez v12, :cond_31

    .line 14148
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->initUserActivityLocked()V

    .line 14150
    :cond_31
    const/4 v12, 0x0

    .restart local v12    # "i":I
    :goto_17
    sget v5, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->NUM_USER_ACTIVITY_TYPES:I

    if-ge v12, v5, :cond_32

    .line 14151
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    aget-object v5, v5, v12

    invoke-virtual {v5, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14150
    add-int/lit8 v12, v12, 0x1

    const/4 v5, 0x7

    goto :goto_17

    .line 14155
    .end local v12    # "i":I
    :cond_32
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-eqz v5, :cond_35

    .line 14156
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    if-nez v5, :cond_33

    .line 14157
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->initNetworkActivityLocked()V

    .line 14159
    :cond_33
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_18
    const/16 v12, 0xa

    if-ge v5, v12, :cond_34

    .line 14160
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v12, v12, v5

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14161
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v12, v12, v5

    invoke-virtual {v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14159
    add-int/lit8 v5, v5, 0x1

    goto :goto_18

    .line 14163
    .end local v5    # "i":I
    :cond_34
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mMobileRadioActiveTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v5, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14164
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mMobileRadioActiveCount:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v5, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14167
    :cond_35
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v5, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14168
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v5, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14170
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-eqz v5, :cond_3e

    .line 14171
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 14172
    .local v5, "numClusters":I
    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-eqz v12, :cond_37

    invoke-virtual {v12}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v12

    if-ne v12, v5, :cond_36

    move/from16 v20, v2

    goto :goto_19

    .line 14173
    :cond_36
    new-instance v12, Landroid/os/ParcelFormatException;

    move/from16 v20, v2

    .end local v2    # "version":I
    .local v20, "version":I
    const-string v2, "Incompatible cpu cluster arrangement"

    invoke-direct {v12, v2}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v12

    .line 14172
    .end local v20    # "version":I
    .restart local v2    # "version":I
    :cond_37
    move/from16 v20, v2

    .line 14175
    .end local v2    # "version":I
    .restart local v20    # "version":I
    :goto_19
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-static {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14176
    new-array v2, v5, [[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iput-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 14177
    const/4 v2, 0x0

    .local v2, "cluster":I
    :goto_1a
    if-ge v2, v5, :cond_3d

    .line 14178
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_3c

    .line 14179
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    .line 14180
    .local v12, "NSB":I
    move/from16 v21, v3

    .end local v3    # "inclHistory":Z
    .local v21, "inclHistory":Z
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-eqz v3, :cond_39

    .line 14181
    invoke-virtual {v3, v2}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v3

    if-ne v3, v12, :cond_38

    move/from16 v22, v5

    move/from16 v23, v6

    goto :goto_1b

    .line 14182
    :cond_38
    new-instance v3, Landroid/os/ParcelFormatException;

    move/from16 v22, v5

    .end local v5    # "numClusters":I
    .local v22, "numClusters":I
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    move/from16 v23, v6

    .end local v6    # "numTags":I
    .local v23, "numTags":I
    const-string v6, "File corrupt: too many speed bins "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v3, v5}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 14180
    .end local v22    # "numClusters":I
    .end local v23    # "numTags":I
    .restart local v5    # "numClusters":I
    .restart local v6    # "numTags":I
    :cond_39
    move/from16 v22, v5

    move/from16 v23, v6

    .line 14186
    .end local v5    # "numClusters":I
    .end local v6    # "numTags":I
    .restart local v22    # "numClusters":I
    .restart local v23    # "numTags":I
    :goto_1b
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    new-array v5, v12, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aput-object v5, v3, v2

    .line 14187
    const/4 v3, 0x0

    .local v3, "speed":I
    :goto_1c
    if-ge v3, v12, :cond_3b

    .line 14188
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-eqz v5, :cond_3a

    .line 14189
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v5, v5, v2

    new-instance v6, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move/from16 v24, v7

    .end local v7    # "NPKG":I
    .local v24, "NPKG":I
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v6, v5, v3

    .line 14191
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v5, v5, v2

    aget-object v5, v5, v3

    invoke-virtual {v5, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_1d

    .line 14188
    .end local v24    # "NPKG":I
    .restart local v7    # "NPKG":I
    :cond_3a
    move/from16 v24, v7

    .line 14187
    .end local v7    # "NPKG":I
    .restart local v24    # "NPKG":I
    :goto_1d
    add-int/lit8 v3, v3, 0x1

    move/from16 v7, v24

    goto :goto_1c

    .end local v24    # "NPKG":I
    .restart local v7    # "NPKG":I
    :cond_3b
    move/from16 v24, v7

    .line 14194
    .end local v3    # "speed":I
    .end local v7    # "NPKG":I
    .end local v12    # "NSB":I
    .restart local v24    # "NPKG":I
    goto :goto_1e

    .line 14195
    .end local v21    # "inclHistory":Z
    .end local v22    # "numClusters":I
    .end local v23    # "numTags":I
    .end local v24    # "NPKG":I
    .local v3, "inclHistory":Z
    .restart local v5    # "numClusters":I
    .restart local v6    # "numTags":I
    .restart local v7    # "NPKG":I
    :cond_3c
    move/from16 v21, v3

    move/from16 v22, v5

    move/from16 v23, v6

    move/from16 v24, v7

    .end local v3    # "inclHistory":Z
    .end local v5    # "numClusters":I
    .end local v6    # "numTags":I
    .end local v7    # "NPKG":I
    .restart local v21    # "inclHistory":Z
    .restart local v22    # "numClusters":I
    .restart local v23    # "numTags":I
    .restart local v24    # "NPKG":I
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    const/4 v5, 0x0

    aput-object v5, v3, v2

    .line 14177
    :goto_1e
    add-int/lit8 v2, v2, 0x1

    move/from16 v3, v21

    move/from16 v5, v22

    move/from16 v6, v23

    move/from16 v7, v24

    goto/16 :goto_1a

    .end local v21    # "inclHistory":Z
    .end local v22    # "numClusters":I
    .end local v23    # "numTags":I
    .end local v24    # "NPKG":I
    .restart local v3    # "inclHistory":Z
    .restart local v5    # "numClusters":I
    .restart local v6    # "numTags":I
    .restart local v7    # "NPKG":I
    :cond_3d
    move/from16 v21, v3

    move/from16 v22, v5

    move/from16 v23, v6

    move/from16 v24, v7

    .line 14198
    .end local v2    # "cluster":I
    .end local v3    # "inclHistory":Z
    .end local v5    # "numClusters":I
    .end local v6    # "numTags":I
    .end local v7    # "NPKG":I
    .restart local v21    # "inclHistory":Z
    .restart local v23    # "numTags":I
    .restart local v24    # "NPKG":I
    goto :goto_1f

    .line 14199
    .end local v20    # "version":I
    .end local v21    # "inclHistory":Z
    .end local v23    # "numTags":I
    .end local v24    # "NPKG":I
    .local v2, "version":I
    .restart local v3    # "inclHistory":Z
    .restart local v6    # "numTags":I
    .restart local v7    # "NPKG":I
    :cond_3e
    move/from16 v20, v2

    move/from16 v21, v3

    move/from16 v23, v6

    move/from16 v24, v7

    .end local v2    # "version":I
    .end local v3    # "inclHistory":Z
    .end local v6    # "numTags":I
    .end local v7    # "NPKG":I
    .restart local v20    # "version":I
    .restart local v21    # "inclHistory":Z
    .restart local v23    # "numTags":I
    .restart local v24    # "NPKG":I
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-static {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([[Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14200
    const/4 v2, 0x0

    iput-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 14204
    :goto_1f
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14205
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-static {v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v2

    iput-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    .line 14207
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14208
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-static {v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v2

    iput-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    .line 14211
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14212
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v2, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->access$2300(Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;Landroid/os/Parcel;)V

    .line 14215
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14216
    .local v2, "length":I
    const/4 v3, 0x7

    if-ne v2, v3, :cond_40

    .line 14217
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14218
    new-array v3, v2, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    iput-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    .line 14219
    const/4 v3, 0x0

    .local v3, "procState":I
    :goto_20
    if-ge v3, v2, :cond_3f

    .line 14220
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 14221
    invoke-static {v1, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v6

    aput-object v6, v5, v3

    .line 14219
    add-int/lit8 v3, v3, 0x1

    goto :goto_20

    .end local v3    # "procState":I
    :cond_3f
    goto :goto_21

    .line 14225
    :cond_40
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14226
    const/4 v3, 0x0

    iput-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    .line 14228
    :goto_21
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14229
    const/4 v3, 0x7

    if-ne v2, v3, :cond_42

    .line 14230
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14231
    new-array v3, v2, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    iput-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    .line 14232
    const/4 v3, 0x0

    .restart local v3    # "procState":I
    :goto_22
    if-ge v3, v2, :cond_41

    .line 14233
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 14234
    invoke-static {v1, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v6

    aput-object v6, v5, v3

    .line 14232
    add-int/lit8 v3, v3, 0x1

    goto :goto_22

    .end local v3    # "procState":I
    :cond_41
    goto :goto_23

    .line 14238
    :cond_42
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14239
    const/4 v3, 0x0

    iput-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    .line 14242
    :goto_23
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    if-eqz v3, :cond_43

    .line 14243
    invoke-static {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2400(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-static {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14244
    new-instance v3, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v3, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    invoke-static {v15, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2402(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 14245
    invoke-static {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2400(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-virtual {v3, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_24

    .line 14247
    :cond_43
    invoke-static {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2400(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-static {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14248
    const/4 v3, 0x0

    invoke-static {v15, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2402(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 14251
    :goto_24
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    if-eqz v3, :cond_44

    .line 14252
    invoke-static {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2500(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-static {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14253
    new-instance v3, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v3, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    invoke-static {v15, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2502(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 14254
    invoke-static {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2500(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-virtual {v3, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    const/4 v3, 0x0

    goto :goto_25

    .line 14256
    :cond_44
    invoke-static {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2500(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-static {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14257
    const/4 v3, 0x0

    invoke-static {v15, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2502(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 14260
    :goto_25
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 14261
    .local v5, "NW":I
    sget v6, Lcom/android/internal/os/OppoBatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    const/4 v7, 0x1

    add-int/2addr v6, v7

    if-gt v5, v6, :cond_57

    .line 14264
    const/4 v6, 0x0

    .local v6, "iw":I
    :goto_26
    if-ge v6, v5, :cond_45

    .line 14265
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v7

    .line 14266
    .local v7, "wlName":Ljava/lang/String;
    invoke-virtual {v15, v7, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->readWakeSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    .line 14264
    .end local v7    # "wlName":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    goto :goto_26

    .line 14269
    .end local v6    # "iw":I
    :cond_45
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 14270
    .local v6, "NS":I
    sget v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    const/4 v12, 0x1

    add-int/2addr v7, v12

    if-gt v6, v7, :cond_56

    .line 14273
    const/4 v7, 0x0

    .local v7, "is":I
    :goto_27
    if-ge v7, v6, :cond_46

    .line 14274
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v12

    .line 14275
    .local v12, "name":Ljava/lang/String;
    invoke-virtual {v15, v12, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->readSyncSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    .line 14273
    .end local v12    # "name":Ljava/lang/String;
    add-int/lit8 v7, v7, 0x1

    goto :goto_27

    .line 14278
    .end local v7    # "is":I
    :cond_46
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    .line 14279
    .local v7, "NJ":I
    sget v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    const/16 v16, 0x1

    add-int/lit8 v12, v12, 0x1

    if-gt v7, v12, :cond_55

    .line 14282
    const/4 v12, 0x0

    .local v12, "ij":I
    :goto_28
    if-ge v12, v7, :cond_47

    .line 14283
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v3

    .line 14284
    .local v3, "name":Ljava/lang/String;
    invoke-virtual {v15, v3, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->readJobSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    .line 14282
    .end local v3    # "name":Ljava/lang/String;
    add-int/lit8 v12, v12, 0x1

    const/4 v3, 0x0

    goto :goto_28

    .line 14287
    .end local v12    # "ij":I
    :cond_47
    invoke-virtual {v15, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->readJobCompletionsFromParcelLocked(Landroid/os/Parcel;)V

    .line 14289
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobsDeferredEventCount:Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    invoke-virtual {v3, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14290
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobsDeferredCount:Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    invoke-virtual {v3, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14291
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobsFreshnessTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v3, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14292
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    invoke-static {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14293
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_29
    sget-object v12, Lcom/android/internal/os/OppoBatteryStatsImpl;->JOB_FRESHNESS_BUCKETS:[J

    array-length v12, v12

    if-ge v3, v12, :cond_49

    .line 14294
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_48

    .line 14295
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    move/from16 v19, v2

    .end local v2    # "length":I
    .local v19, "length":I
    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    move/from16 v22, v8

    .end local v8    # "NMS":I
    .local v22, "NMS":I
    iget-object v8, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBsi:Lcom/android/internal/os/OppoBatteryStatsImpl;

    iget-object v8, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v2, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v2, v12, v3

    .line 14296
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    aget-object v2, v2, v3

    invoke-virtual {v2, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_2a

    .line 14294
    .end local v19    # "length":I
    .end local v22    # "NMS":I
    .restart local v2    # "length":I
    .restart local v8    # "NMS":I
    :cond_48
    move/from16 v19, v2

    move/from16 v22, v8

    .line 14293
    .end local v2    # "length":I
    .end local v8    # "NMS":I
    .restart local v19    # "length":I
    .restart local v22    # "NMS":I
    :goto_2a
    add-int/lit8 v3, v3, 0x1

    move/from16 v2, v19

    move/from16 v8, v22

    goto :goto_29

    .end local v19    # "length":I
    .end local v22    # "NMS":I
    .restart local v2    # "length":I
    .restart local v8    # "NMS":I
    :cond_49
    move/from16 v19, v2

    move/from16 v22, v8

    .line 14300
    .end local v2    # "length":I
    .end local v3    # "i":I
    .end local v8    # "NMS":I
    .restart local v19    # "length":I
    .restart local v22    # "NMS":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14301
    .local v2, "NP":I
    const/16 v3, 0x3e8

    if-gt v2, v3, :cond_54

    .line 14304
    const/4 v8, 0x0

    .local v8, "is":I
    :goto_2b
    if-ge v8, v2, :cond_4b

    .line 14305
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    .line 14306
    .local v12, "seNumber":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v25

    if-eqz v25, :cond_4a

    .line 14307
    move/from16 v16, v14

    const/4 v3, 0x1

    .end local v14    # "uid":I
    .local v16, "uid":I
    invoke-virtual {v15, v12, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getSensorTimerLocked(IZ)Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    move-result-object v14

    invoke-virtual {v14, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_2c

    .line 14306
    .end local v16    # "uid":I
    .restart local v14    # "uid":I
    :cond_4a
    move/from16 v16, v14

    const/4 v3, 0x1

    .line 14304
    .end local v12    # "seNumber":I
    .end local v14    # "uid":I
    .restart local v16    # "uid":I
    :goto_2c
    add-int/lit8 v8, v8, 0x1

    move/from16 v14, v16

    const/16 v3, 0x3e8

    goto :goto_2b

    .end local v16    # "uid":I
    .restart local v14    # "uid":I
    :cond_4b
    move/from16 v16, v14

    const/4 v3, 0x1

    .line 14311
    .end local v8    # "is":I
    .end local v14    # "uid":I
    .restart local v16    # "uid":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14312
    const/16 v8, 0x3e8

    if-gt v2, v8, :cond_53

    .line 14315
    const/4 v8, 0x0

    .local v8, "ip":I
    :goto_2d
    if-ge v8, v2, :cond_4c

    .line 14316
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v12

    .line 14317
    .local v12, "procName":Ljava/lang/String;
    invoke-virtual {v15, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;

    move-result-object v14

    .line 14318
    .local v14, "p":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;
    move/from16 v25, v4

    .end local v4    # "NKW":I
    .local v25, "NKW":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    iput-wide v3, v14, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mUserTime:J

    .line 14319
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    iput-wide v3, v14, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mSystemTime:J

    .line 14320
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    iput-wide v3, v14, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mForegroundTime:J

    .line 14321
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v14, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mStarts:I

    .line 14322
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v14, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mNumCrashes:I

    .line 14323
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v14, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mNumAnrs:I

    .line 14324
    invoke-virtual {v14, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->readExcessivePowerFromParcelLocked(Landroid/os/Parcel;)V

    .line 14315
    .end local v12    # "procName":Ljava/lang/String;
    .end local v14    # "p":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;
    add-int/lit8 v8, v8, 0x1

    move/from16 v4, v25

    const/4 v3, 0x1

    goto :goto_2d

    .end local v25    # "NKW":I
    .restart local v4    # "NKW":I
    :cond_4c
    move/from16 v25, v4

    .line 14327
    .end local v4    # "NKW":I
    .end local v8    # "ip":I
    .restart local v25    # "NKW":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14328
    const/16 v3, 0x2710

    if-gt v2, v3, :cond_52

    .line 14331
    const/4 v3, 0x0

    .local v3, "ip":I
    :goto_2e
    if-ge v3, v2, :cond_51

    .line 14332
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v4

    .line 14333
    .local v4, "pkgName":Ljava/lang/String;
    iget-object v8, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    invoke-virtual {v8, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;

    invoke-static {v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBaseObs;)V

    .line 14334
    invoke-virtual {v15, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getPackageStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;

    move-result-object v8

    .line 14335
    .local v8, "p":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    .line 14336
    .local v12, "NWA":I
    const/16 v14, 0x2710

    if-gt v12, v14, :cond_50

    .line 14339
    iget-object v14, v8, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v14}, Landroid/util/ArrayMap;->clear()V

    .line 14340
    const/4 v14, 0x0

    .local v14, "iwa":I
    :goto_2f
    if-ge v14, v12, :cond_4d

    .line 14341
    move/from16 v26, v6

    .end local v6    # "NS":I
    .local v26, "NS":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v6

    .line 14342
    .local v6, "tag":Ljava/lang/String;
    move/from16 v27, v9

    .end local v9    # "NRPMS":I
    .local v27, "NRPMS":I
    new-instance v9, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    move/from16 v28, v13

    .end local v13    # "NSORPMS":I
    .local v28, "NSORPMS":I
    iget-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v9, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    .line 14343
    .local v9, "c":Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;
    invoke-virtual {v9, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14344
    iget-object v13, v8, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v13, v6, v9}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14340
    .end local v6    # "tag":Ljava/lang/String;
    .end local v9    # "c":Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;
    add-int/lit8 v14, v14, 0x1

    move/from16 v6, v26

    move/from16 v9, v27

    move/from16 v13, v28

    goto :goto_2f

    .end local v26    # "NS":I
    .end local v27    # "NRPMS":I
    .end local v28    # "NSORPMS":I
    .local v6, "NS":I
    .local v9, "NRPMS":I
    .restart local v13    # "NSORPMS":I
    :cond_4d
    move/from16 v26, v6

    move/from16 v27, v9

    move/from16 v28, v13

    .line 14346
    .end local v6    # "NS":I
    .end local v9    # "NRPMS":I
    .end local v13    # "NSORPMS":I
    .end local v14    # "iwa":I
    .restart local v26    # "NS":I
    .restart local v27    # "NRPMS":I
    .restart local v28    # "NSORPMS":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 14347
    .end local v26    # "NS":I
    .restart local v6    # "NS":I
    const/16 v9, 0x2710

    if-gt v6, v9, :cond_4f

    .line 14350
    const/4 v13, 0x0

    .local v13, "is":I
    :goto_30
    if-ge v13, v6, :cond_4e

    .line 14351
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v14

    .line 14352
    .local v14, "servName":Ljava/lang/String;
    invoke-virtual {v15, v4, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getServiceStatsLocked(Ljava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;

    move-result-object v9

    .line 14353
    .local v9, "s":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v9, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;->mStartTime:J

    .line 14354
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v9, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;->mStarts:I

    .line 14355
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v9, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;->mLaunches:I

    .line 14350
    .end local v9    # "s":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;
    .end local v14    # "servName":Ljava/lang/String;
    add-int/lit8 v13, v13, 0x1

    const/16 v9, 0x2710

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    goto :goto_30

    .line 14331
    .end local v4    # "pkgName":Ljava/lang/String;
    .end local v8    # "p":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    .end local v12    # "NWA":I
    .end local v13    # "is":I
    :cond_4e
    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v9, v27

    move/from16 v13, v28

    goto/16 :goto_2e

    .line 14348
    .restart local v4    # "pkgName":Ljava/lang/String;
    .restart local v8    # "p":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    .restart local v12    # "NWA":I
    :cond_4f
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "File corrupt: too many services "

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14337
    .end local v27    # "NRPMS":I
    .end local v28    # "NSORPMS":I
    .local v9, "NRPMS":I
    .local v13, "NSORPMS":I
    :cond_50
    move/from16 v26, v6

    .end local v6    # "NS":I
    .restart local v26    # "NS":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "File corrupt: too many wakeup alarms "

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14331
    .end local v4    # "pkgName":Ljava/lang/String;
    .end local v8    # "p":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    .end local v12    # "NWA":I
    .end local v26    # "NS":I
    .restart local v6    # "NS":I
    :cond_51
    move/from16 v26, v6

    move/from16 v27, v9

    move/from16 v28, v13

    .line 14067
    .end local v2    # "NP":I
    .end local v3    # "ip":I
    .end local v5    # "NW":I
    .end local v6    # "NS":I
    .end local v7    # "NJ":I
    .end local v9    # "NRPMS":I
    .end local v13    # "NSORPMS":I
    .end local v15    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v16    # "uid":I
    .end local v19    # "length":I
    .restart local v27    # "NRPMS":I
    .restart local v28    # "NSORPMS":I
    add-int/lit8 v11, v11, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v20

    move/from16 v3, v21

    move/from16 v8, v22

    move/from16 v6, v23

    move/from16 v7, v24

    move/from16 v4, v25

    const/4 v5, 0x0

    const/16 v12, 0x2710

    goto/16 :goto_14

    .line 14329
    .end local v27    # "NRPMS":I
    .end local v28    # "NSORPMS":I
    .restart local v2    # "NP":I
    .restart local v5    # "NW":I
    .restart local v6    # "NS":I
    .restart local v7    # "NJ":I
    .restart local v9    # "NRPMS":I
    .restart local v13    # "NSORPMS":I
    .restart local v15    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .restart local v16    # "uid":I
    .restart local v19    # "length":I
    :cond_52
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many packages "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14313
    .end local v25    # "NKW":I
    .local v4, "NKW":I
    :cond_53
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many processes "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14302
    .end local v16    # "uid":I
    .local v14, "uid":I
    :cond_54
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many sensors "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14280
    .end local v19    # "length":I
    .end local v22    # "NMS":I
    .local v2, "length":I
    .local v8, "NMS":I
    :cond_55
    move/from16 v19, v2

    .end local v2    # "length":I
    .restart local v19    # "length":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many job timers "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14271
    .end local v7    # "NJ":I
    .end local v19    # "length":I
    .restart local v2    # "length":I
    :cond_56
    move/from16 v19, v2

    .end local v2    # "length":I
    .restart local v19    # "length":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many syncs "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14262
    .end local v6    # "NS":I
    .end local v19    # "length":I
    .restart local v2    # "length":I
    :cond_57
    move/from16 v19, v2

    .end local v2    # "length":I
    .restart local v19    # "length":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many wake locks "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14359
    .end local v5    # "NW":I
    .end local v11    # "iu":I
    .end local v14    # "uid":I
    .end local v15    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v19    # "length":I
    .end local v20    # "version":I
    .end local v21    # "inclHistory":Z
    .end local v23    # "numTags":I
    .end local v24    # "NPKG":I
    .local v2, "version":I
    .local v3, "inclHistory":Z
    .local v6, "numTags":I
    .local v7, "NPKG":I
    :cond_58
    return-void

    .line 14065
    :cond_59
    move/from16 v20, v2

    .end local v2    # "version":I
    .restart local v20    # "version":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many uids "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14046
    .end local v8    # "NMS":I
    .end local v10    # "NU":I
    .end local v17    # "NWR":I
    .end local v20    # "version":I
    .restart local v2    # "version":I
    .local v11, "NWR":I
    :cond_5a
    move/from16 v20, v2

    move/from16 v17, v11

    .end local v2    # "version":I
    .end local v11    # "NWR":I
    .restart local v17    # "NWR":I
    .restart local v20    # "version":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many wakeup reasons "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v2, v17

    .end local v17    # "NWR":I
    .local v2, "NWR":I
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14035
    .end local v20    # "version":I
    .local v2, "version":I
    :cond_5b
    move/from16 v20, v2

    move/from16 v25, v4

    .end local v2    # "version":I
    .end local v4    # "NKW":I
    .restart local v20    # "version":I
    .restart local v25    # "NKW":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many kernel wake locks "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v2, v25

    .end local v25    # "NKW":I
    .local v2, "NKW":I
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14024
    .end local v20    # "version":I
    .local v2, "version":I
    :cond_5c
    move/from16 v20, v2

    move/from16 v28, v13

    .end local v2    # "version":I
    .end local v13    # "NSORPMS":I
    .restart local v20    # "version":I
    .restart local v28    # "NSORPMS":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many screen-off rpm stats "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v2, v28

    .end local v28    # "NSORPMS":I
    .local v2, "NSORPMS":I
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14014
    .end local v20    # "version":I
    .local v2, "version":I
    :cond_5d
    move/from16 v20, v2

    move/from16 v27, v9

    .end local v2    # "version":I
    .end local v9    # "NRPMS":I
    .restart local v20    # "version":I
    .restart local v27    # "NRPMS":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many rpm stats "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v2, v27

    .end local v27    # "NRPMS":I
    .local v2, "NRPMS":I
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public blacklist recordDailyStatsIfNeededLocked(Z)V
    .locals 6
    .param p1, "settled"    # Z

    .line 10200
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    .line 10201
    .local v0, "currentTime":J
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMaxDailyDeadline:J

    cmp-long v2, v0, v2

    if-ltz v2, :cond_0

    .line 10202
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->recordDailyStatsLocked()V

    goto :goto_0

    .line 10203
    :cond_0
    if-eqz p1, :cond_1

    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMinDailyDeadline:J

    cmp-long v2, v0, v2

    if-ltz v2, :cond_1

    .line 10204
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->recordDailyStatsLocked()V

    goto :goto_0

    .line 10205
    :cond_1
    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyStartTime:J

    const-wide/32 v4, 0x5265c00

    sub-long/2addr v2, v4

    cmp-long v2, v0, v2

    if-gez v2, :cond_2

    .line 10206
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->recordDailyStatsLocked()V

    .line 10208
    :cond_2
    :goto_0
    return-void
.end method

.method public blacklist recordDailyStatsLocked()V
    .locals 10

    .line 10211
    new-instance v0, Landroid/os/BatteryStats$DailyItem;

    invoke-direct {v0}, Landroid/os/BatteryStats$DailyItem;-><init>()V

    .line 10212
    .local v0, "item":Landroid/os/BatteryStats$DailyItem;
    iget-wide v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyStartTime:J

    iput-wide v1, v0, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    .line 10213
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    .line 10214
    const/4 v1, 0x0

    .line 10215
    .local v1, "hasData":Z
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v2, v2, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    if-lez v2, :cond_0

    .line 10216
    const/4 v1, 0x1

    .line 10217
    new-instance v2, Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v3, v3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v4, v4, Landroid/os/BatteryStats$LevelStepTracker;->mStepDurations:[J

    invoke-direct {v2, v3, v4}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I[J)V

    iput-object v2, v0, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    .line 10221
    :cond_0
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v2, v2, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    if-lez v2, :cond_1

    .line 10222
    const/4 v1, 0x1

    .line 10223
    new-instance v2, Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v3, v3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v4, v4, Landroid/os/BatteryStats$LevelStepTracker;->mStepDurations:[J

    invoke-direct {v2, v3, v4}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I[J)V

    iput-object v2, v0, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    .line 10227
    :cond_1
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-eqz v2, :cond_2

    .line 10228
    const/4 v1, 0x1

    .line 10229
    iput-object v2, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    .line 10230
    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 10232
    :cond_2
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v2}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10233
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v2}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10234
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateDailyDeadlineLocked()V

    .line 10236
    if-eqz v1, :cond_4

    .line 10237
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 10238
    .local v2, "startTime":J
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10239
    :goto_0
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    const/16 v5, 0xa

    if-le v4, v5, :cond_3

    .line 10240
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    goto :goto_0

    .line 10242
    :cond_3
    new-instance v4, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v4}, Ljava/io/ByteArrayOutputStream;-><init>()V

    .line 10244
    .local v4, "memStream":Ljava/io/ByteArrayOutputStream;
    :try_start_0
    new-instance v5, Lcom/android/internal/util/FastXmlSerializer;

    invoke-direct {v5}, Lcom/android/internal/util/FastXmlSerializer;-><init>()V

    .line 10245
    .local v5, "out":Lorg/xmlpull/v1/XmlSerializer;
    sget-object v6, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v6}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v6

    invoke-interface {v5, v4, v6}, Lorg/xmlpull/v1/XmlSerializer;->setOutput(Ljava/io/OutputStream;Ljava/lang/String;)V

    .line 10246
    invoke-direct {p0, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeDailyItemsLocked(Lorg/xmlpull/v1/XmlSerializer;)V

    .line 10247
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    sub-long/2addr v6, v2

    .line 10248
    .local v6, "initialTime":J
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v8

    new-instance v9, Lcom/android/internal/os/OppoBatteryStatsImpl$3;

    invoke-direct {v9, p0, v4, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$3;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Ljava/io/ByteArrayOutputStream;J)V

    invoke-virtual {v8, v9}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10271
    nop

    .end local v5    # "out":Lorg/xmlpull/v1/XmlSerializer;
    .end local v6    # "initialTime":J
    goto :goto_1

    .line 10270
    :catch_0
    move-exception v5

    .line 10273
    .end local v2    # "startTime":J
    .end local v4    # "memStream":Ljava/io/ByteArrayOutputStream;
    :cond_4
    :goto_1
    return-void
.end method

.method public blacklist removeIsolatedUidLocked(I)V
    .locals 5
    .param p1, "isolatedUid"    # I

    .line 3989
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseIntArray;->indexOfKey(I)I

    move-result v0

    .line 3990
    .local v0, "idx":I
    if-ltz v0, :cond_0

    .line 3991
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v1

    .line 3992
    .local v1, "ownerUid":I
    invoke-virtual {p0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v2

    .line 3993
    .local v2, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v2, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->removeIsolatedUid(I)V

    .line 3994
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseIntArray;->removeAt(I)V

    .line 3996
    .end local v1    # "ownerUid":I
    .end local v2    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;

    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    invoke-direct {v2, p0, p1, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;IJ)V

    invoke-interface {v1, v2}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    .line 3997
    return-void
.end method

.method public greylist removeUidStatsLocked(I)V
    .locals 5
    .param p1, "uid"    # I

    .line 13267
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 13268
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    if-eqz v0, :cond_0

    .line 13269
    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->detachFromTimeBase()V

    .line 13271
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 13272
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v2, Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;

    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    invoke-direct {v2, p0, p1, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$UidToRemove;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;IJ)V

    invoke-interface {v1, v2}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    .line 13273
    return-void
.end method

.method public blacklist reportExcessiveCpuLocked(ILjava/lang/String;JJ)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "proc"    # Ljava/lang/String;
    .param p3, "overTime"    # J
    .param p5, "usedTime"    # J

    .line 4643
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4644
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 4645
    .local v0, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    if-eqz v0, :cond_0

    .line 4646
    move-object v1, v0

    move-object v2, p2

    move-wide v3, p3

    move-wide v5, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->reportExcessiveCpuLocked(Ljava/lang/String;JJ)V

    .line 4648
    :cond_0
    return-void
.end method

.method public blacklist resetAllStatsCmdLocked()V
    .locals 10

    .line 10706
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->collectCheckinFile()V

    .line 10708
    invoke-direct {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->resetAllStatsLocked()V

    .line 10709
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 10710
    .local v0, "mSecUptime":J
    const-wide/16 v2, 0x3e8

    mul-long v4, v0, v2

    .line 10711
    .local v4, "uptime":J
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v6

    .line 10712
    .local v6, "mSecRealtime":J
    mul-long/2addr v2, v6

    .line 10713
    .local v2, "realtime":J
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStartLevel:I

    .line 10714
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 10715
    invoke-virtual {p0, v6, v7, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 10716
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurrentBatteryLevel:I

    iput v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargePlugLevel:I

    iput v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    iput v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 10718
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v8, v4, v5, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->reset(JJ)V

    .line 10719
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v8, v4, v5, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->reset(JJ)V

    .line 10720
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v8, v8, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v9, 0x80000

    and-int/2addr v8, v9

    if-nez v8, :cond_2

    .line 10721
    iget v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOn(I)Z

    move-result v8

    const/4 v9, 0x0

    if-eqz v8, :cond_0

    .line 10722
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10723
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10724
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_0

    .line 10725
    :cond_0
    iget v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenDoze(I)Z

    move-result v8

    if-eqz v8, :cond_1

    .line 10726
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10727
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10728
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_0

    .line 10730
    :cond_1
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10731
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10732
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 10734
    :goto_0
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 10735
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 10736
    iput v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 10738
    :cond_2
    invoke-direct {p0, v6, v7, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->initActiveHistoryEventsLocked(JJ)V

    .line 10739
    return-void
.end method

.method public blacklist scheduleRemoveIsolatedUidLocked(II)V
    .locals 2
    .param p1, "isolatedUid"    # I
    .param p2, "appUid"    # I

    .line 3975
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    const/4 v1, -0x1

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseIntArray;->get(II)I

    move-result v0

    .line 3976
    .local v0, "curUid":I
    if-ne v0, p2, :cond_0

    .line 3977
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    if-eqz v1, :cond_0

    .line 3978
    invoke-interface {v1, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToRemovedUid(I)Ljava/util/concurrent/Future;

    .line 3981
    :cond_0
    return-void
.end method

.method public blacklist setBatteryStateLocked(Landroid/content/Context;IIIIIIIIJ)V
    .locals 28
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "status"    # I
    .param p3, "health"    # I
    .param p4, "plugType"    # I
    .param p5, "level"    # I
    .param p6, "temp"    # I
    .param p7, "volt"    # I
    .param p8, "chargeUAh"    # I
    .param p9, "chargeFullUAh"    # I
    .param p10, "chargeTimeToFullSeconds"    # J

    .line 12572
    move-object/from16 v10, p0

    move/from16 v11, p2

    move/from16 v12, p3

    move/from16 v13, p4

    move/from16 v14, p5

    move/from16 v15, p7

    move/from16 v9, p8

    move/from16 v8, p9

    const/4 v7, 0x0

    move/from16 v0, p6

    invoke-static {v7, v0}, Ljava/lang/Math;->max(II)I

    move-result v6

    .line 12574
    .end local p6    # "temp":I
    .local v6, "temp":I
    iget-boolean v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHaveBatteryLevel:Z

    if-eqz v0, :cond_0

    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    invoke-direct {v10, v0, v11, v13, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl;->reportChangesToStatsLog(Landroid/os/BatteryStats$HistoryItem;III)V

    .line 12577
    invoke-static {v13, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isOnBattery(II)Z

    move-result v5

    .line 12578
    .local v5, "onBattery":Z
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 12579
    .local v3, "uptime":J
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 12580
    .local v1, "elapsedRealtime":J
    iget-boolean v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHaveBatteryLevel:Z

    const/4 v8, 0x1

    if-nez v0, :cond_3

    .line 12581
    iput-boolean v8, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 12586
    iget-boolean v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    if-ne v5, v0, :cond_2

    .line 12587
    if-eqz v5, :cond_1

    .line 12588
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v17, -0x80001

    and-int v7, v7, v17

    iput v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    goto :goto_1

    .line 12590
    :cond_1
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v17, 0x80000

    or-int v7, v7, v17

    iput v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 12594
    :cond_2
    :goto_1
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v17, 0x1000000

    or-int v7, v7, v17

    iput v7, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 12595
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v7, v11

    iput-byte v7, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12596
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v7, v14

    iput-byte v7, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12597
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput v9, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 12598
    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastDischargeStepLevel:I

    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastChargeStepLevel:I

    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinDischargeStepLevel:I

    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxChargeStepLevel:I

    .line 12600
    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastChargingStateLevel:I

    goto :goto_3

    .line 12601
    :cond_3
    iget v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurrentBatteryLevel:I

    if-ne v0, v14, :cond_4

    iget-boolean v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    if-eq v0, v5, :cond_6

    .line 12602
    :cond_4
    const/16 v0, 0x64

    if-lt v14, v0, :cond_5

    if-eqz v5, :cond_5

    move v0, v8

    goto :goto_2

    :cond_5
    const/4 v0, 0x0

    :goto_2
    invoke-virtual {v10, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->recordDailyStatsIfNeededLocked(Z)V

    .line 12604
    :cond_6
    :goto_3
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v7, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12605
    .local v7, "oldStatus":I
    if-eqz v5, :cond_8

    .line 12606
    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 12607
    iget-boolean v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    if-nez v0, :cond_7

    .line 12608
    iput-boolean v8, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    .line 12609
    const/16 v17, 0x1

    move-object/from16 v0, p0

    move-wide/from16 v22, v1

    .end local v1    # "elapsedRealtime":J
    .local v22, "elapsedRealtime":J
    move-wide/from16 v24, v3

    .end local v3    # "uptime":J
    .local v24, "uptime":J
    move/from16 v26, v5

    .end local v5    # "onBattery":Z
    .local v26, "onBattery":Z
    move/from16 v5, v17

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->startRecordingHistory(JJZ)V

    goto :goto_4

    .line 12607
    .end local v22    # "elapsedRealtime":J
    .end local v24    # "uptime":J
    .end local v26    # "onBattery":Z
    .restart local v1    # "elapsedRealtime":J
    .restart local v3    # "uptime":J
    .restart local v5    # "onBattery":Z
    :cond_7
    move-wide/from16 v22, v1

    move-wide/from16 v24, v3

    move/from16 v26, v5

    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    .end local v5    # "onBattery":Z
    .restart local v22    # "elapsedRealtime":J
    .restart local v24    # "uptime":J
    .restart local v26    # "onBattery":Z
    goto :goto_4

    .line 12611
    .end local v22    # "elapsedRealtime":J
    .end local v24    # "uptime":J
    .end local v26    # "onBattery":Z
    .restart local v1    # "elapsedRealtime":J
    .restart local v3    # "uptime":J
    .restart local v5    # "onBattery":Z
    :cond_8
    move-wide/from16 v22, v1

    move-wide/from16 v24, v3

    move/from16 v26, v5

    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    .end local v5    # "onBattery":Z
    .restart local v22    # "elapsedRealtime":J
    .restart local v24    # "uptime":J
    .restart local v26    # "onBattery":Z
    const/16 v0, 0x60

    if-ge v14, v0, :cond_9

    if-eq v11, v8, :cond_9

    .line 12613
    iget-boolean v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    if-nez v0, :cond_9

    .line 12614
    iput-boolean v8, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    .line 12615
    const/4 v5, 0x1

    move-object/from16 v0, p0

    move-wide/from16 v1, v22

    move-wide/from16 v3, v24

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->startRecordingHistory(JJZ)V

    .line 12618
    :cond_9
    :goto_4
    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 12619
    iget v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargePlugLevel:I

    if-gez v0, :cond_a

    .line 12620
    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargePlugLevel:I

    .line 12623
    :cond_a
    iget-boolean v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    const/4 v1, 0x2

    move/from16 v4, v26

    .end local v26    # "onBattery":Z
    .local v4, "onBattery":Z
    if-eq v4, v0, :cond_e

    .line 12624
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v14

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12625
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v11

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12626
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v12

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    .line 12627
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v13

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 12628
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-short v2, v6

    iput-short v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    .line 12629
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-char v2, v15

    iput-char v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    .line 12630
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    if-ge v9, v0, :cond_d

    .line 12632
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    sub-int/2addr v0, v9

    int-to-long v2, v0

    .line 12633
    .local v2, "chargeDiff":J
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12634
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12635
    iget v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    invoke-virtual {v10, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenDoze(I)Z

    move-result v0

    if-eqz v0, :cond_b

    .line 12636
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12638
    :cond_b
    iget v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleMode:I

    if-ne v0, v8, :cond_c

    .line 12639
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_5

    .line 12640
    :cond_c
    if-ne v0, v1, :cond_d

    .line 12641
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12644
    .end local v2    # "chargeDiff":J
    :cond_d
    :goto_5
    iget-object v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput v9, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 12649
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v2, v22

    move/from16 v26, v4

    .end local v4    # "onBattery":Z
    .restart local v26    # "onBattery":Z
    move-wide/from16 v4, v24

    move v15, v6

    .end local v6    # "temp":I
    .local v15, "temp":I
    move/from16 v6, v26

    move/from16 v27, v7

    .end local v7    # "oldStatus":I
    .local v27, "oldStatus":I
    move/from16 v8, p5

    move/from16 v9, p8

    invoke-virtual/range {v0 .. v9}, Lcom/android/internal/os/OppoBatteryStatsImpl;->setOnBatteryLocked(Landroid/content/Context;JJZIII)V

    move/from16 v5, p8

    move/from16 p6, v15

    move-wide/from16 v6, v22

    move-wide/from16 v3, v24

    const/4 v8, 0x1

    goto/16 :goto_b

    .line 12652
    .end local v15    # "temp":I
    .end local v26    # "onBattery":Z
    .end local v27    # "oldStatus":I
    .restart local v4    # "onBattery":Z
    .restart local v6    # "temp":I
    .restart local v7    # "oldStatus":I
    :cond_e
    move/from16 v26, v4

    move v15, v6

    move/from16 v27, v7

    .end local v4    # "onBattery":Z
    .end local v6    # "temp":I
    .end local v7    # "oldStatus":I
    .restart local v15    # "temp":I
    .restart local v26    # "onBattery":Z
    .restart local v27    # "oldStatus":I
    const/4 v0, 0x0

    .line 12653
    .local v0, "changed":Z
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-eq v2, v14, :cond_f

    .line 12654
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v14

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12655
    const/4 v0, 0x1

    .line 12659
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    iget-object v3, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget-wide v3, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->BATTERY_LEVEL_COLLECTION_DELAY_MS:J

    invoke-interface {v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;->scheduleSyncDueToBatteryLevelChange(J)Ljava/util/concurrent/Future;

    .line 12662
    :cond_f
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    if-eq v2, v11, :cond_10

    .line 12663
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v11

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12664
    const/4 v0, 0x1

    .line 12666
    :cond_10
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    if-eq v2, v12, :cond_11

    .line 12667
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v12

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    .line 12668
    const/4 v0, 0x1

    .line 12670
    :cond_11
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    if-eq v2, v13, :cond_12

    .line 12671
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v13

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 12672
    const/4 v0, 0x1

    .line 12674
    :cond_12
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-short v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    add-int/lit8 v2, v2, 0xa

    if-ge v15, v2, :cond_13

    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-short v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    add-int/lit8 v2, v2, -0xa

    if-gt v15, v2, :cond_14

    .line 12676
    :cond_13
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-short v3, v15

    iput-short v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    .line 12677
    const/4 v0, 0x1

    .line 12679
    :cond_14
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-char v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    add-int/lit8 v2, v2, 0x14

    move/from16 v3, p7

    move v4, v15

    .end local v15    # "temp":I
    .local v4, "temp":I
    if-gt v3, v2, :cond_15

    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-char v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    add-int/lit8 v2, v2, -0x14

    if-ge v3, v2, :cond_16

    .line 12681
    :cond_15
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-char v5, v3

    iput-char v5, v2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    .line 12682
    const/4 v0, 0x1

    .line 12684
    :cond_16
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    add-int/lit8 v2, v2, 0xa

    move/from16 v5, p8

    if-ge v5, v2, :cond_18

    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    add-int/lit8 v2, v2, -0xa

    if-gt v5, v2, :cond_17

    goto :goto_6

    :cond_17
    const/4 v8, 0x1

    goto :goto_8

    .line 12686
    :cond_18
    :goto_6
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    if-ge v5, v2, :cond_1b

    .line 12688
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    sub-int/2addr v2, v5

    int-to-long v6, v2

    .line 12689
    .local v6, "chargeDiff":J
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12690
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12691
    iget v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    invoke-virtual {v10, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenDoze(I)Z

    move-result v2

    if-eqz v2, :cond_19

    .line 12692
    iget-object v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12694
    :cond_19
    iget v2, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleMode:I

    const/4 v8, 0x1

    if-ne v2, v8, :cond_1a

    .line 12695
    iget-object v1, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_7

    .line 12696
    :cond_1a
    if-ne v2, v1, :cond_1c

    .line 12697
    iget-object v1, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_7

    .line 12686
    .end local v6    # "chargeDiff":J
    :cond_1b
    const/4 v8, 0x1

    .line 12700
    :cond_1c
    :goto_7
    iget-object v1, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput v5, v1, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 12701
    const/4 v0, 0x1

    .line 12703
    :goto_8
    iget v1, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitStepMode:I

    int-to-long v1, v1

    const/16 v6, 0x30

    shl-long/2addr v1, v6

    iget v6, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    int-to-long v6, v6

    const/16 v9, 0x38

    shl-long/2addr v6, v9

    or-long/2addr v1, v6

    and-int/lit16 v6, v14, 0xff

    int-to-long v6, v6

    const/16 v9, 0x28

    shl-long/2addr v6, v9

    or-long/2addr v1, v6

    .line 12706
    .local v1, "modeBits":J
    if-eqz v26, :cond_1e

    .line 12707
    const/4 v6, 0x0

    invoke-virtual {v10, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v7

    or-int/2addr v0, v7

    .line 12708
    iget v7, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastDischargeStepLevel:I

    if-eq v7, v14, :cond_1d

    iget v9, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinDischargeStepLevel:I

    if-le v9, v14, :cond_1d

    .line 12709
    iget-object v9, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    sub-int v17, v7, v14

    move-object/from16 v16, v9

    move-wide/from16 v18, v1

    move-wide/from16 v20, v22

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12711
    iget-object v7, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v9, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastDischargeStepLevel:I

    sub-int v17, v9, v14

    move-object/from16 v16, v7

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12713
    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastDischargeStepLevel:I

    .line 12714
    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinDischargeStepLevel:I

    .line 12715
    iget v7, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    iput v7, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitStepMode:I

    .line 12716
    iput v6, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    .line 12759
    :cond_1d
    move/from16 p6, v4

    goto/16 :goto_a

    .line 12719
    :cond_1e
    const/4 v6, 0x0

    const/16 v7, 0x5a

    if-lt v14, v7, :cond_1f

    .line 12722
    invoke-virtual {v10, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v7

    or-int/2addr v0, v7

    move/from16 p6, v4

    goto :goto_9

    .line 12723
    :cond_1f
    iget-boolean v7, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCharging:Z

    if-nez v7, :cond_22

    .line 12724
    iget v7, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastChargeStepLevel:I

    if-ge v7, v14, :cond_21

    .line 12728
    iget-object v7, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v9, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    invoke-virtual {v7, v9}, Landroid/os/Handler;->hasCallbacks(Ljava/lang/Runnable;)Z

    move-result v7

    if-nez v7, :cond_20

    .line 12729
    iget-object v7, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v9, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    iget-object v15, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget v15, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->BATTERY_CHARGED_DELAY_MS:I

    move/from16 p6, v4

    .end local v4    # "temp":I
    .restart local p6    # "temp":I
    int-to-long v3, v15

    invoke-virtual {v7, v9, v3, v4}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    goto :goto_9

    .line 12728
    .end local p6    # "temp":I
    .restart local v4    # "temp":I
    :cond_20
    move/from16 p6, v4

    .end local v4    # "temp":I
    .restart local p6    # "temp":I
    goto :goto_9

    .line 12733
    .end local p6    # "temp":I
    .restart local v4    # "temp":I
    :cond_21
    move/from16 p6, v4

    .end local v4    # "temp":I
    .restart local p6    # "temp":I
    if-le v7, v14, :cond_23

    .line 12737
    iget-object v3, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v4, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    invoke-virtual {v3, v4}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    goto :goto_9

    .line 12740
    .end local p6    # "temp":I
    .restart local v4    # "temp":I
    :cond_22
    move/from16 p6, v4

    .end local v4    # "temp":I
    .restart local p6    # "temp":I
    iget v3, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastChargeStepLevel:I

    if-le v3, v14, :cond_23

    .line 12745
    invoke-virtual {v10, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v3

    or-int/2addr v0, v3

    .line 12748
    :cond_23
    :goto_9
    iget v3, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastChargeStepLevel:I

    if-eq v3, v14, :cond_24

    iget v4, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxChargeStepLevel:I

    if-ge v4, v14, :cond_24

    .line 12749
    iget-object v4, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    sub-int v17, v14, v3

    move-object/from16 v16, v4

    move-wide/from16 v18, v1

    move-wide/from16 v20, v22

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12751
    iget-object v3, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v4, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastChargeStepLevel:I

    sub-int v17, v14, v4

    move-object/from16 v16, v3

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12753
    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxChargeStepLevel:I

    .line 12754
    iget v3, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    iput v3, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitStepMode:I

    .line 12755
    iput v6, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    .line 12757
    :cond_24
    iput v14, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastChargeStepLevel:I

    .line 12759
    :goto_a
    if-eqz v0, :cond_25

    .line 12760
    move-wide/from16 v6, v22

    move-wide/from16 v3, v24

    .end local v22    # "elapsedRealtime":J
    .end local v24    # "uptime":J
    .restart local v3    # "uptime":J
    .local v6, "elapsedRealtime":J
    invoke-virtual {v10, v6, v7, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    goto :goto_b

    .line 12759
    .end local v3    # "uptime":J
    .end local v6    # "elapsedRealtime":J
    .restart local v22    # "elapsedRealtime":J
    .restart local v24    # "uptime":J
    :cond_25
    move-wide/from16 v6, v22

    move-wide/from16 v3, v24

    .line 12763
    .end local v0    # "changed":Z
    .end local v1    # "modeBits":J
    .end local v22    # "elapsedRealtime":J
    .end local v24    # "uptime":J
    .restart local v3    # "uptime":J
    .restart local v6    # "elapsedRealtime":J
    :goto_b
    if-nez v26, :cond_27

    const/4 v0, 0x5

    if-eq v11, v0, :cond_26

    if-ne v11, v8, :cond_27

    .line 12769
    :cond_26
    const/4 v0, 0x0

    iput-boolean v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    .line 12772
    :cond_27
    iget v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    const/4 v1, -0x1

    if-ne v0, v1, :cond_28

    .line 12773
    move/from16 v1, p9

    iput v1, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    goto :goto_c

    .line 12775
    :cond_28
    move/from16 v1, p9

    invoke-static {v0, v1}, Ljava/lang/Math;->min(II)I

    move-result v0

    iput v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 12777
    :goto_c
    iget v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    invoke-static {v0, v1}, Ljava/lang/Math;->max(II)I

    move-result v0

    iput v0, v10, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 12778
    return-void
.end method

.method public blacklist setCallback(Lcom/android/internal/os/OppoBatteryStatsImpl$BatteryCallback;)V
    .locals 0
    .param p1, "cb"    # Lcom/android/internal/os/OppoBatteryStatsImpl$BatteryCallback;

    .line 10169
    iput-object p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$BatteryCallback;

    .line 10170
    return-void
.end method

.method blacklist setChargingLocked(Z)Z
    .locals 3
    .param p1, "charging"    # Z

    .line 12316
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 12317
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCharging:Z

    if-eq v0, p1, :cond_1

    .line 12318
    iput-boolean p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCharging:Z

    .line 12319
    if-eqz p1, :cond_0

    .line 12320
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v2, 0x1000000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    goto :goto_0

    .line 12322
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x1000001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 12324
    :goto_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v1, 0x3

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 12325
    const/4 v0, 0x1

    return v0

    .line 12327
    :cond_1
    const/4 v0, 0x0

    return v0
.end method

.method public blacklist setExternalStatsSyncLocked(Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;)V
    .locals 0
    .param p1, "sync"    # Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    .line 10179
    iput-object p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    .line 10180
    return-void
.end method

.method public blacklist setNoAutoReset(Z)V
    .locals 0
    .param p1, "enabled"    # Z

    .line 4252
    iput-boolean p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNoAutoReset:Z

    .line 4253
    return-void
.end method

.method protected blacklist setOnBatteryLocked(Landroid/content/Context;JJZIII)V
    .locals 25
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "mSecRealtime"    # J
    .param p4, "mSecUptime"    # J
    .param p6, "onBattery"    # Z
    .param p7, "oldStatus"    # I
    .param p8, "level"    # I
    .param p9, "chargeUAh"    # I

    .line 12370
    move-object/from16 v7, p0

    move-object/from16 v8, p1

    move-wide/from16 v9, p2

    move-wide/from16 v11, p4

    move/from16 v13, p6

    move/from16 v14, p8

    move/from16 v15, p9

    const/16 v16, 0x0

    .line 12371
    .local v16, "doWrite":Z
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v1, 0x2

    invoke-virtual {v0, v1}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v6

    .line 12372
    .local v6, "m":Landroid/os/Message;
    iput v13, v6, Landroid/os/Message;->arg1:I

    .line 12373
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v6}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 12375
    const-wide/16 v0, 0x3e8

    mul-long v17, v11, v0

    .line 12376
    .local v17, "uptime":J
    mul-long v19, v9, v0

    .line 12377
    .local v19, "realtime":J
    iget v5, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenState:I

    .line 12378
    .local v5, "screenState":I
    if-eqz v13, :cond_7

    .line 12383
    const/4 v1, 0x0

    .line 12429
    .local v1, "reset":Z
    iget-boolean v2, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNoAutoReset:Z

    if-nez v2, :cond_2

    iget-object v2, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v2}, Landroid/os/Parcel;->dataSize()I

    move-result v2

    iget-object v4, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget v4, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    if-lt v2, v4, :cond_2

    .line 12430
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Resetting battery stats: level="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " status="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v4, p7

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " dischargeLevel="

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " lowAmount="

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12432
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    move-result v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " highAmount="

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12433
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12430
    const-string v2, "OppoBatteryStatsImpl"

    invoke-static {v2, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12435
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    .line 12436
    .local v0, "eventMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
    const-string v3, "batterystats_reset"

    move/from16 v21, v1

    .end local v1    # "reset":Z
    .local v21, "reset":Z
    const-string/jumbo v1, "maxhistory"

    invoke-interface {v0, v3, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12437
    if-eqz v8, :cond_0

    .line 12438
    const-string v1, "20089"

    const/4 v2, 0x0

    invoke-static {v8, v1, v3, v0, v2}, Loplus/util/OplusStatistics;->onCommon(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Z)V

    goto :goto_0

    .line 12440
    :cond_0
    const-string v1, "batterystats_reset-maxhistory,but context is null!"

    invoke-static {v2, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12443
    :goto_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->collectCheckinFile()V

    .line 12445
    const/4 v1, 0x1

    .line 12446
    .end local v16    # "doWrite":Z
    .local v1, "doWrite":Z
    invoke-direct/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->resetAllStatsLocked()V

    .line 12447
    if-lez v15, :cond_1

    if-lez v14, :cond_1

    .line 12449
    div-int/lit16 v2, v15, 0x3e8

    int-to-double v2, v2

    move-object/from16 v22, v0

    move/from16 v16, v1

    .end local v0    # "eventMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
    .end local v1    # "doWrite":Z
    .restart local v16    # "doWrite":Z
    .local v22, "eventMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
    int-to-double v0, v14

    const-wide/high16 v23, 0x4059000000000000L    # 100.0

    div-double v0, v0, v23

    div-double/2addr v2, v0

    double-to-int v0, v2

    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    goto :goto_1

    .line 12447
    .end local v16    # "doWrite":Z
    .end local v22    # "eventMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
    .restart local v0    # "eventMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
    .restart local v1    # "doWrite":Z
    :cond_1
    move-object/from16 v22, v0

    move/from16 v16, v1

    .line 12451
    .end local v0    # "eventMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
    .end local v1    # "doWrite":Z
    .restart local v16    # "doWrite":Z
    .restart local v22    # "eventMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
    :goto_1
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStartLevel:I

    .line 12452
    const/4 v1, 0x1

    .line 12453
    .end local v21    # "reset":Z
    .local v1, "reset":Z
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    move/from16 v21, v1

    goto :goto_2

    .line 12429
    .end local v22    # "eventMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
    :cond_2
    move/from16 v4, p7

    move/from16 v21, v1

    .line 12455
    .end local v1    # "reset":Z
    .restart local v21    # "reset":Z
    :goto_2
    iget-boolean v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCharging:Z

    if-eqz v0, :cond_3

    .line 12456
    const/4 v0, 0x0

    invoke-virtual {v7, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->setChargingLocked(Z)Z

    .line 12458
    :cond_3
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastChargingStateLevel:I

    .line 12459
    const/4 v0, 0x1

    iput-boolean v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    .line 12460
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastDischargeStepLevel:I

    .line 12461
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinDischargeStepLevel:I

    .line 12462
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->clearTime()V

    .line 12463
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->clearTime()V

    .line 12464
    iget v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitStepMode:I

    .line 12465
    const/4 v3, 0x0

    iput v3, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    .line 12466
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 12467
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v1, v14

    iput-byte v1, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12468
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v2, -0x80001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 12471
    if-eqz v21, :cond_4

    .line 12472
    const/4 v0, 0x1

    iput-boolean v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordingHistory:Z

    .line 12473
    move-object/from16 v0, p0

    move-wide/from16 v1, p2

    move v8, v3

    move-wide/from16 v3, p4

    move v8, v5

    .end local v5    # "screenState":I
    .local v8, "screenState":I
    move/from16 v5, v21

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->startRecordingHistory(JJZ)V

    goto :goto_3

    .line 12471
    .end local v8    # "screenState":I
    .restart local v5    # "screenState":I
    :cond_4
    move v8, v5

    .line 12475
    .end local v5    # "screenState":I
    .restart local v8    # "screenState":I
    :goto_3
    invoke-virtual {v7, v9, v10, v11, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 12476
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 12477
    invoke-virtual {v7, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 12478
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 12479
    const/4 v0, 0x0

    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 12480
    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_4

    .line 12481
    :cond_5
    const/4 v0, 0x0

    invoke-virtual {v7, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_6

    .line 12482
    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 12483
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 12484
    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_4

    .line 12486
    :cond_6
    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 12487
    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 12488
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 12490
    :goto_4
    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 12491
    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 12492
    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 12493
    const/4 v1, 0x1

    move-object/from16 v0, p0

    move v2, v8

    move-wide/from16 v3, v17

    move-object/from16 v22, v6

    .end local v6    # "m":Landroid/os/Message;
    .local v22, "m":Landroid/os/Message;
    move-wide/from16 v5, v19

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 12494
    .end local v21    # "reset":Z
    goto :goto_5

    .line 12495
    .end local v8    # "screenState":I
    .end local v22    # "m":Landroid/os/Message;
    .restart local v5    # "screenState":I
    .restart local v6    # "m":Landroid/os/Message;
    :cond_7
    move v8, v5

    move-object/from16 v22, v6

    .end local v5    # "screenState":I
    .end local v6    # "m":Landroid/os/Message;
    .restart local v8    # "screenState":I
    .restart local v22    # "m":Landroid/os/Message;
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastChargingStateLevel:I

    .line 12496
    const/4 v0, 0x0

    iput-boolean v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    .line 12497
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 12498
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v1, v14

    iput-byte v1, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12499
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v2, 0x80000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 12502
    invoke-virtual {v7, v9, v10, v11, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 12503
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargePlugLevel:I

    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 12504
    iget v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v14, v0, :cond_8

    .line 12505
    iget v1, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    sub-int v2, v0, v14

    const/4 v3, 0x1

    sub-int/2addr v2, v3

    add-int/2addr v1, v2

    iput v1, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 12506
    iget v1, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    sub-int/2addr v0, v14

    add-int/2addr v1, v0

    iput v1, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 12508
    :cond_8
    invoke-virtual {v7, v8, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    .line 12509
    const/4 v1, 0x0

    move-object/from16 v0, p0

    move v2, v8

    move-wide/from16 v3, v17

    move-wide/from16 v5, v19

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 12510
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 12511
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastChargeStepLevel:I

    .line 12512
    iput v14, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxChargeStepLevel:I

    .line 12513
    iget v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurStepMode:I

    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInitStepMode:I

    .line 12514
    const/4 v0, 0x0

    iput v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModStepMode:I

    .line 12516
    :goto_5
    if-nez v16, :cond_9

    iget-wide v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWriteTime:J

    const-wide/32 v2, 0xea60

    add-long/2addr v0, v2

    cmp-long v0, v0, v9

    if-gez v0, :cond_a

    .line 12517
    :cond_9
    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    if-eqz v0, :cond_a

    iget-object v0, v7, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsHistory;->getActiveFile()Landroid/util/AtomicFile;

    move-result-object v0

    if-eqz v0, :cond_a

    .line 12518
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeAsyncLocked()V

    .line 12521
    :cond_a
    return-void
.end method

.method public blacklist setPowerProfileLocked(Lcom/android/internal/os/PowerProfile;)V
    .locals 6
    .param p1, "profile"    # Lcom/android/internal/os/PowerProfile;

    .line 10147
    iput-object p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    .line 10152
    invoke-virtual {p1}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v0

    .line 10153
    .local v0, "numClusters":I
    new-array v1, v0, [Lcom/android/internal/os/KernelCpuSpeedReader;

    iput-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    .line 10154
    const/4 v1, 0x0

    .line 10155
    .local v1, "firstCpuOfCluster":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 10156
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v3, v2}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v3

    .line 10157
    .local v3, "numSpeedSteps":I
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    new-instance v5, Lcom/android/internal/os/KernelCpuSpeedReader;

    invoke-direct {v5, v1, v3}, Lcom/android/internal/os/KernelCpuSpeedReader;-><init>(II)V

    aput-object v5, v4, v2

    .line 10159
    iget-object v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v4, v2}, Lcom/android/internal/os/PowerProfile;->getNumCoresInCpuCluster(I)I

    move-result v4

    add-int/2addr v1, v4

    .line 10155
    .end local v3    # "numSpeedSteps":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 10162
    .end local v2    # "i":I
    :cond_0
    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    const/4 v3, -0x1

    if-ne v2, v3, :cond_1

    .line 10164
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v2}, Lcom/android/internal/os/PowerProfile;->getBatteryCapacity()D

    move-result-wide v2

    double-to-int v2, v2

    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 10166
    :cond_1
    return-void
.end method

.method public blacklist setPretendScreenOff(Z)V
    .locals 1
    .param p1, "pretendScreenOff"    # Z

    .line 4256
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPretendScreenOff:Z

    if-eq v0, p1, :cond_1

    .line 4257
    iput-boolean p1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPretendScreenOff:Z

    .line 4258
    if-eqz p1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x2

    :goto_0
    invoke-virtual {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->noteScreenStateLocked(I)V

    .line 4260
    :cond_1
    return-void
.end method

.method public blacklist setRadioScanningTimeoutLocked(J)V
    .locals 1
    .param p1, "timeout"    # J

    .line 10173
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v0, :cond_0

    .line 10174
    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->setTimeout(J)V

    .line 10176
    :cond_0
    return-void
.end method

.method public blacklist setRecordAllHistoryLocked(Z)V
    .locals 20
    .param p1, "enabled"    # Z

    .line 4213
    move-object/from16 v8, p0

    move/from16 v9, p1

    iput-boolean v9, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRecordAllHistory:Z

    .line 4214
    const/4 v0, 0x1

    if-nez v9, :cond_2

    .line 4216
    iget-object v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/4 v2, 0x5

    invoke-virtual {v1, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->removeEvents(I)V

    .line 4217
    iget-object v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v2, 0xd

    invoke-virtual {v1, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->removeEvents(I)V

    .line 4220
    iget-object v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v1, v0}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v10

    .line 4222
    .local v10, "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-eqz v10, :cond_1

    .line 4223
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v11

    .line 4224
    .local v11, "mSecRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v13

    .line 4225
    .local v13, "mSecUptime":J
    invoke-virtual {v10}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v15

    :goto_0
    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v16, v0

    check-cast v16, Ljava/util/Map$Entry;

    .line 4226
    .local v16, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface/range {v16 .. v16}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    move-object v7, v0

    check-cast v7, Landroid/util/SparseIntArray;

    .line 4227
    .local v7, "uids":Landroid/util/SparseIntArray;
    const/4 v0, 0x0

    move v6, v0

    .local v6, "j":I
    :goto_1
    invoke-virtual {v7}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-ge v6, v0, :cond_0

    .line 4228
    const/16 v5, 0x4001

    .line 4229
    invoke-interface/range {v16 .. v16}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v17, v0

    check-cast v17, Ljava/lang/String;

    invoke-virtual {v7, v6}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v18

    .line 4228
    move-object/from16 v0, p0

    move-wide v1, v11

    move-wide v3, v13

    move/from16 v19, v6

    .end local v6    # "j":I
    .local v19, "j":I
    move-object/from16 v6, v17

    move-object/from16 v17, v7

    .end local v7    # "uids":Landroid/util/SparseIntArray;
    .local v17, "uids":Landroid/util/SparseIntArray;
    move/from16 v7, v18

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4227
    add-int/lit8 v6, v19, 0x1

    move-object/from16 v7, v17

    .end local v19    # "j":I
    .restart local v6    # "j":I
    goto :goto_1

    .end local v17    # "uids":Landroid/util/SparseIntArray;
    .restart local v7    # "uids":Landroid/util/SparseIntArray;
    :cond_0
    move/from16 v19, v6

    move-object/from16 v17, v7

    .line 4231
    .end local v6    # "j":I
    .end local v7    # "uids":Landroid/util/SparseIntArray;
    .end local v16    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    goto :goto_0

    .line 4233
    .end local v10    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v11    # "mSecRealtime":J
    .end local v13    # "mSecUptime":J
    :cond_1
    goto :goto_4

    .line 4235
    :cond_2
    iget-object v1, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v1, v0}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v10

    .line 4237
    .restart local v10    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-eqz v10, :cond_4

    .line 4238
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v11

    .line 4239
    .restart local v11    # "mSecRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v13

    .line 4240
    .restart local v13    # "mSecUptime":J
    invoke-virtual {v10}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v15

    :goto_2
    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_4

    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v16, v0

    check-cast v16, Ljava/util/Map$Entry;

    .line 4241
    .restart local v16    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface/range {v16 .. v16}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    move-object v7, v0

    check-cast v7, Landroid/util/SparseIntArray;

    .line 4242
    .restart local v7    # "uids":Landroid/util/SparseIntArray;
    const/4 v0, 0x0

    move v6, v0

    .restart local v6    # "j":I
    :goto_3
    invoke-virtual {v7}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-ge v6, v0, :cond_3

    .line 4243
    const v5, 0x8001

    .line 4244
    invoke-interface/range {v16 .. v16}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v17, v0

    check-cast v17, Ljava/lang/String;

    invoke-virtual {v7, v6}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v18

    .line 4243
    move-object/from16 v0, p0

    move-wide v1, v11

    move-wide v3, v13

    move/from16 v19, v6

    .end local v6    # "j":I
    .restart local v19    # "j":I
    move-object/from16 v6, v17

    move-object/from16 v17, v7

    .end local v7    # "uids":Landroid/util/SparseIntArray;
    .restart local v17    # "uids":Landroid/util/SparseIntArray;
    move/from16 v7, v18

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4242
    add-int/lit8 v6, v19, 0x1

    move-object/from16 v7, v17

    .end local v19    # "j":I
    .restart local v6    # "j":I
    goto :goto_3

    .end local v17    # "uids":Landroid/util/SparseIntArray;
    .restart local v7    # "uids":Landroid/util/SparseIntArray;
    :cond_3
    move/from16 v19, v6

    move-object/from16 v17, v7

    .line 4246
    .end local v6    # "j":I
    .end local v7    # "uids":Landroid/util/SparseIntArray;
    .end local v16    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    goto :goto_2

    .line 4249
    .end local v10    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v11    # "mSecRealtime":J
    .end local v13    # "mSecUptime":J
    :cond_4
    :goto_4
    return-void
.end method

.method public blacklist shutdownLocked()V
    .locals 4

    .line 13309
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    invoke-direct {p0, v0, v1, v2, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->recordShutdownLocked(JJ)V

    .line 13310
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeSyncLocked()V

    .line 13311
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mShuttingDown:Z

    .line 13312
    return-void
.end method

.method public blacklist startAddingCpuLocked()Z
    .locals 1

    .line 4601
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$ExternalStatsSync;->cancelCpuSyncDueToWakelockChange()V

    .line 4602
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryInternal:Z

    return v0
.end method

.method public blacklist startAnalyzeBatteryStats()V
    .locals 2

    .line 15406
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$7;

    invoke-direct {v1, p0}, Lcom/android/internal/os/OppoBatteryStatsImpl$7;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 15417
    return-void
.end method

.method public greylist startIteratingHistoryLocked()Z
    .locals 7

    .line 10571
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsHistory;->startIteratingHistory()Z

    .line 10572
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadOverflow:Z

    .line 10573
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIteratingHistory:Z

    .line 10574
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->size()I

    move-result v2

    new-array v2, v2, [Ljava/lang/String;

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    .line 10575
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->size()I

    move-result v2

    new-array v2, v2, [I

    iput-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryUids:[I

    .line 10576
    iput v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryChars:I

    .line 10577
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_0

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 10578
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$HistoryTag;

    .line 10579
    .local v3, "tag":Landroid/os/BatteryStats$HistoryTag;
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    .line 10580
    .local v4, "idx":I
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    iget-object v6, v3, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    aput-object v6, v5, v4

    .line 10581
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryUids:[I

    iget v6, v3, Landroid/os/BatteryStats$HistoryTag;->uid:I

    aput v6, v5, v4

    .line 10582
    iget v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryChars:I

    iget-object v6, v3, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {v6}, Ljava/lang/String;->length()I

    move-result v6

    add-int/2addr v6, v1

    add-int/2addr v5, v6

    iput v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadHistoryChars:I

    .line 10583
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    .end local v3    # "tag":Landroid/os/BatteryStats$HistoryTag;
    .end local v4    # "idx":I
    goto :goto_0

    .line 10584
    :cond_0
    return v1
.end method

.method public blacklist startIteratingOldHistoryLocked()Z
    .locals 2

    .line 10510
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistory:Landroid/os/BatteryStats$HistoryItem;

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 10511
    return v1

    .line 10513
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 10514
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    .line 10515
    iput-boolean v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mReadOverflow:Z

    .line 10516
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIteratingHistory:Z

    .line 10517
    return v0
.end method

.method blacklist stopAllGpsSignalQualityTimersLocked(I)V
    .locals 4
    .param p1, "except"    # I

    .line 5144
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5145
    .local v0, "elapsedRealtime":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    const/4 v3, 0x2

    if-ge v2, v3, :cond_2

    .line 5146
    if-ne v2, p1, :cond_0

    .line 5147
    goto :goto_2

    .line 5149
    :cond_0
    :goto_1
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 5150
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    .line 5145
    :cond_1
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5153
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method blacklist stopAllPhoneSignalStrengthTimersLocked(I)V
    .locals 4
    .param p1, "except"    # I

    .line 5219
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5220
    .local v0, "elapsedRealtime":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    const/4 v3, 0x5

    if-ge v2, v3, :cond_2

    .line 5221
    if-ne v2, p1, :cond_0

    .line 5222
    goto :goto_2

    .line 5224
    :cond_0
    :goto_1
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 5225
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    .line 5220
    :cond_1
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5228
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method blacklist stopAllWifiSignalStrengthTimersLocked(I)V
    .locals 4
    .param p1, "except"    # I

    .line 6015
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6016
    .local v0, "elapsedRealtime":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    const/4 v3, 0x5

    if-ge v2, v3, :cond_2

    .line 6017
    if-ne v2, p1, :cond_0

    .line 6018
    goto :goto_2

    .line 6020
    :cond_0
    :goto_1
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 6021
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    .line 6016
    :cond_1
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 6024
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method public blacklist systemReady(Landroid/content/Context;)V
    .locals 4
    .param p1, "context"    # Landroid/content/Context;

    .line 10697
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x80

    const-wide/16 v2, 0x1388

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 10700
    return-void
.end method

.method public blacklist systemServicesReady(Landroid/content/Context;)V
    .locals 2
    .param p1, "context"    # Landroid/content/Context;

    .line 13319
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->startObserving(Landroid/content/ContentResolver;)V

    .line 13320
    invoke-direct {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->registerUsbStateReceiver(Landroid/content/Context;)V

    .line 13321
    return-void
.end method

.method public blacklist trackPerProcStateCpuTimes()Z
    .locals 1

    .line 13315
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget-boolean v0, v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->TRACK_CPU_TIMES_BY_PROC_STATE:Z

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public blacklist updateBluetoothStateLocked(Landroid/bluetooth/BluetoothActivityEnergyInfo;)V
    .locals 41
    .param p1, "info"    # Landroid/bluetooth/BluetoothActivityEnergyInfo;

    .line 11529
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    if-eqz v1, :cond_13

    iget-boolean v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryInternal:Z

    if-nez v2, :cond_0

    move-object v2, v1

    goto/16 :goto_e

    .line 11533
    :cond_0
    const/4 v2, 0x1

    iput-boolean v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 11535
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    .line 11536
    .local v3, "elapsedRealtimeMs":J
    nop

    .line 11537
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerRxTimeMillis()J

    move-result-wide v5

    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v7, v7, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;->rxTimeMs:J

    sub-long/2addr v5, v7

    .line 11538
    .local v5, "rxTimeMs":J
    nop

    .line 11539
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerTxTimeMillis()J

    move-result-wide v7

    iget-object v9, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v9, v9, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;->txTimeMs:J

    sub-long/2addr v7, v9

    .line 11540
    .local v7, "txTimeMs":J
    nop

    .line 11541
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerIdleTimeMillis()J

    move-result-wide v9

    iget-object v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v11, v11, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;->idleTimeMs:J

    sub-long/2addr v9, v11

    .line 11550
    .local v9, "idleTimeMs":J
    const-wide/16 v11, 0x0

    .line 11552
    .local v11, "totalScanTimeMs":J
    iget-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v13

    .line 11553
    .local v13, "uidCount":I
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_0
    if-ge v14, v13, :cond_2

    .line 11554
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 11555
    .local v2, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-object v15, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    if-nez v15, :cond_1

    .line 11556
    goto :goto_1

    .line 11559
    :cond_1
    iget-object v15, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    move-object/from16 v16, v2

    const-wide/16 v18, 0x3e8

    .end local v2    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .local v16, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    mul-long v1, v3, v18

    invoke-virtual {v15, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v1

    div-long v1, v1, v18

    add-long/2addr v11, v1

    .line 11553
    .end local v16    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :goto_1
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v1, p1

    const/4 v2, 0x1

    goto :goto_0

    .line 11563
    .end local v14    # "i":I
    :cond_2
    cmp-long v1, v11, v5

    if-lez v1, :cond_3

    const/4 v1, 0x1

    goto :goto_2

    :cond_3
    const/4 v1, 0x0

    .line 11564
    .local v1, "normalizeScanRxTime":Z
    :goto_2
    cmp-long v14, v11, v7

    if-lez v14, :cond_4

    const/16 v17, 0x1

    goto :goto_3

    :cond_4
    const/16 v17, 0x0

    :goto_3
    move/from16 v14, v17

    .line 11571
    .local v14, "normalizeScanTxTime":Z
    move-wide v15, v5

    .line 11572
    .local v15, "leftOverRxTimeMs":J
    move-wide/from16 v20, v7

    .line 11574
    .local v20, "leftOverTxTimeMs":J
    const/16 v17, 0x0

    move/from16 v2, v17

    .local v2, "i":I
    :goto_4
    const-wide/16 v22, 0x0

    if-ge v2, v13, :cond_9

    .line 11575
    move/from16 v24, v13

    .end local v13    # "uidCount":I
    .local v24, "uidCount":I
    iget-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v13, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 11576
    .local v13, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    move-wide/from16 v25, v9

    .end local v9    # "idleTimeMs":J
    .local v25, "idleTimeMs":J
    iget-object v9, v13, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    if-nez v9, :cond_5

    .line 11577
    move/from16 v31, v1

    move-wide/from16 v29, v3

    move-wide/from16 v27, v7

    const-wide/16 v18, 0x3e8

    goto :goto_6

    .line 11580
    :cond_5
    iget-object v9, v13, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    move-wide/from16 v27, v7

    const-wide/16 v18, 0x3e8

    .end local v7    # "txTimeMs":J
    .local v27, "txTimeMs":J
    mul-long v7, v3, v18

    invoke-virtual {v9, v7, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v7

    div-long v7, v7, v18

    .line 11582
    .local v7, "scanTimeSinceMarkMs":J
    cmp-long v9, v7, v22

    if-lez v9, :cond_8

    .line 11584
    iget-object v9, v13, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    invoke-virtual {v9, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->setMark(J)V

    .line 11586
    move-wide v9, v7

    .line 11587
    .local v9, "scanTimeRxSinceMarkMs":J
    move-wide/from16 v22, v7

    .line 11589
    .local v22, "scanTimeTxSinceMarkMs":J
    if-eqz v1, :cond_6

    .line 11593
    mul-long v29, v5, v9

    div-long v9, v29, v11

    .line 11596
    :cond_6
    if-eqz v14, :cond_7

    .line 11600
    mul-long v29, v27, v22

    div-long v22, v29, v11

    move-wide/from16 v29, v3

    move-wide/from16 v3, v22

    goto :goto_5

    .line 11596
    :cond_7
    move-wide/from16 v29, v3

    move-wide/from16 v3, v22

    .line 11603
    .end local v22    # "scanTimeTxSinceMarkMs":J
    .local v3, "scanTimeTxSinceMarkMs":J
    .local v29, "elapsedRealtimeMs":J
    :goto_5
    nop

    .line 11604
    invoke-virtual {v13}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getOrCreateBluetoothControllerActivityLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v22

    .line 11605
    .local v22, "counter":Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;
    move/from16 v31, v1

    .end local v1    # "normalizeScanRxTime":Z
    .local v31, "normalizeScanRxTime":Z
    invoke-virtual/range {v22 .. v22}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {v1, v9, v10}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11606
    invoke-virtual/range {v22 .. v22}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    const/16 v17, 0x0

    aget-object v1, v1, v17

    invoke-virtual {v1, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11608
    sub-long/2addr v15, v9

    .line 11609
    sub-long v20, v20, v3

    goto :goto_6

    .line 11582
    .end local v9    # "scanTimeRxSinceMarkMs":J
    .end local v22    # "counter":Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v29    # "elapsedRealtimeMs":J
    .end local v31    # "normalizeScanRxTime":Z
    .restart local v1    # "normalizeScanRxTime":Z
    .local v3, "elapsedRealtimeMs":J
    :cond_8
    move/from16 v31, v1

    move-wide/from16 v29, v3

    .line 11574
    .end local v1    # "normalizeScanRxTime":Z
    .end local v3    # "elapsedRealtimeMs":J
    .end local v7    # "scanTimeSinceMarkMs":J
    .end local v13    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .restart local v29    # "elapsedRealtimeMs":J
    .restart local v31    # "normalizeScanRxTime":Z
    :goto_6
    add-int/lit8 v2, v2, 0x1

    move/from16 v13, v24

    move-wide/from16 v9, v25

    move-wide/from16 v7, v27

    move-wide/from16 v3, v29

    move/from16 v1, v31

    goto :goto_4

    .end local v24    # "uidCount":I
    .end local v25    # "idleTimeMs":J
    .end local v27    # "txTimeMs":J
    .end local v29    # "elapsedRealtimeMs":J
    .end local v31    # "normalizeScanRxTime":Z
    .restart local v1    # "normalizeScanRxTime":Z
    .restart local v3    # "elapsedRealtimeMs":J
    .local v7, "txTimeMs":J
    .local v9, "idleTimeMs":J
    .local v13, "uidCount":I
    :cond_9
    move/from16 v31, v1

    move-wide/from16 v29, v3

    move-wide/from16 v27, v7

    move-wide/from16 v25, v9

    move/from16 v24, v13

    .line 11622
    .end local v1    # "normalizeScanRxTime":Z
    .end local v2    # "i":I
    .end local v3    # "elapsedRealtimeMs":J
    .end local v7    # "txTimeMs":J
    .end local v9    # "idleTimeMs":J
    .end local v13    # "uidCount":I
    .restart local v24    # "uidCount":I
    .restart local v25    # "idleTimeMs":J
    .restart local v27    # "txTimeMs":J
    .restart local v29    # "elapsedRealtimeMs":J
    .restart local v31    # "normalizeScanRxTime":Z
    const-wide/16 v1, 0x0

    .line 11623
    .local v1, "totalTxBytes":J
    const-wide/16 v3, 0x0

    .line 11625
    .local v3, "totalRxBytes":J
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getUidTraffic()[Landroid/bluetooth/UidTraffic;

    move-result-object v7

    .line 11626
    .local v7, "uidTraffic":[Landroid/bluetooth/UidTraffic;
    if-eqz v7, :cond_a

    array-length v8, v7

    goto :goto_7

    :cond_a
    const/4 v8, 0x0

    .line 11627
    .local v8, "numUids":I
    :goto_7
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_8
    if-ge v9, v8, :cond_b

    .line 11628
    aget-object v10, v7, v9

    .line 11629
    .local v10, "traffic":Landroid/bluetooth/UidTraffic;
    invoke-virtual {v10}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    move-result-wide v18

    iget-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v13, v13, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;->uidRxBytes:Landroid/util/SparseLongArray;

    .line 11630
    move-wide/from16 v32, v11

    .end local v11    # "totalScanTimeMs":J
    .local v32, "totalScanTimeMs":J
    invoke-virtual {v10}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v11

    .line 11629
    invoke-virtual {v13, v11}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v11

    sub-long v11, v18, v11

    .line 11631
    .local v11, "rxBytes":J
    invoke-virtual {v10}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    move-result-wide v18

    iget-object v13, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v13, v13, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;->uidTxBytes:Landroid/util/SparseLongArray;

    .line 11632
    move/from16 v40, v14

    .end local v14    # "normalizeScanTxTime":Z
    .local v40, "normalizeScanTxTime":Z
    invoke-virtual {v10}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v14

    .line 11631
    invoke-virtual {v13, v14}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v13

    sub-long v13, v18, v13

    .line 11635
    .local v13, "txBytes":J
    move-wide/from16 v18, v5

    .end local v5    # "rxTimeMs":J
    .local v18, "rxTimeMs":J
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    const/4 v6, 0x4

    aget-object v5, v5, v6

    invoke-virtual {v5, v11, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11636
    iget-object v5, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    const/4 v6, 0x5

    aget-object v5, v5, v6

    invoke-virtual {v5, v13, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11639
    invoke-virtual {v10}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v5

    invoke-virtual {v0, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v5

    invoke-virtual {v0, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v5

    .line 11640
    .local v5, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    const/16 v35, 0x4

    const-wide/16 v38, 0x0

    move-object/from16 v34, v5

    move-wide/from16 v36, v11

    invoke-virtual/range {v34 .. v39}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11641
    const/16 v35, 0x5

    move-wide/from16 v36, v13

    invoke-virtual/range {v34 .. v39}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11644
    add-long/2addr v3, v11

    .line 11645
    add-long/2addr v1, v13

    .line 11627
    .end local v5    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v10    # "traffic":Landroid/bluetooth/UidTraffic;
    .end local v11    # "rxBytes":J
    .end local v13    # "txBytes":J
    add-int/lit8 v9, v9, 0x1

    move-wide/from16 v5, v18

    move-wide/from16 v11, v32

    move/from16 v14, v40

    goto :goto_8

    .end local v18    # "rxTimeMs":J
    .end local v32    # "totalScanTimeMs":J
    .end local v40    # "normalizeScanTxTime":Z
    .local v5, "rxTimeMs":J
    .local v11, "totalScanTimeMs":J
    .restart local v14    # "normalizeScanTxTime":Z
    :cond_b
    move-wide/from16 v18, v5

    move-wide/from16 v32, v11

    move/from16 v40, v14

    .line 11648
    .end local v5    # "rxTimeMs":J
    .end local v9    # "i":I
    .end local v11    # "totalScanTimeMs":J
    .end local v14    # "normalizeScanTxTime":Z
    .restart local v18    # "rxTimeMs":J
    .restart local v32    # "totalScanTimeMs":J
    .restart local v40    # "normalizeScanTxTime":Z
    cmp-long v5, v1, v22

    if-nez v5, :cond_d

    cmp-long v5, v3, v22

    if-eqz v5, :cond_c

    goto :goto_9

    :cond_c
    move-wide/from16 v35, v3

    move-object/from16 v37, v7

    goto/16 :goto_c

    :cond_d
    :goto_9
    cmp-long v5, v15, v22

    if-nez v5, :cond_e

    cmp-long v5, v20, v22

    if-eqz v5, :cond_c

    .line 11650
    :cond_e
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_a
    if-ge v5, v8, :cond_11

    .line 11651
    aget-object v6, v7, v5

    .line 11652
    .local v6, "traffic":Landroid/bluetooth/UidTraffic;
    invoke-virtual {v6}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v9

    .line 11653
    .local v9, "uid":I
    nop

    .line 11654
    invoke-virtual {v6}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    move-result-wide v10

    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v12, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;->uidRxBytes:Landroid/util/SparseLongArray;

    invoke-virtual {v12, v9}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v12

    sub-long/2addr v10, v12

    .line 11655
    .local v10, "rxBytes":J
    nop

    .line 11656
    invoke-virtual {v6}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    move-result-wide v12

    iget-object v14, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v14, v14, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;->uidTxBytes:Landroid/util/SparseLongArray;

    invoke-virtual {v14, v9}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v34

    sub-long v12, v12, v34

    .line 11658
    .local v12, "txBytes":J
    invoke-virtual {v0, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v14

    invoke-virtual {v0, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v14

    .line 11659
    .local v14, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    nop

    .line 11660
    invoke-virtual {v14}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getOrCreateBluetoothControllerActivityLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v34

    .line 11662
    .local v34, "counter":Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;
    cmp-long v35, v3, v22

    if-lez v35, :cond_f

    cmp-long v35, v10, v22

    if-lez v35, :cond_f

    .line 11663
    mul-long v35, v15, v10

    move-object/from16 v38, v6

    move-object/from16 v37, v7

    .end local v6    # "traffic":Landroid/bluetooth/UidTraffic;
    .end local v7    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .local v37, "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .local v38, "traffic":Landroid/bluetooth/UidTraffic;
    div-long v6, v35, v3

    .line 11667
    .local v6, "timeRxMs":J
    move-wide/from16 v35, v3

    .end local v3    # "totalRxBytes":J
    .local v35, "totalRxBytes":J
    invoke-virtual/range {v34 .. v34}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-virtual {v3, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_b

    .line 11662
    .end local v35    # "totalRxBytes":J
    .end local v37    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .end local v38    # "traffic":Landroid/bluetooth/UidTraffic;
    .restart local v3    # "totalRxBytes":J
    .local v6, "traffic":Landroid/bluetooth/UidTraffic;
    .restart local v7    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    :cond_f
    move-wide/from16 v35, v3

    move-object/from16 v38, v6

    move-object/from16 v37, v7

    .line 11670
    .end local v3    # "totalRxBytes":J
    .end local v6    # "traffic":Landroid/bluetooth/UidTraffic;
    .end local v7    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .restart local v35    # "totalRxBytes":J
    .restart local v37    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .restart local v38    # "traffic":Landroid/bluetooth/UidTraffic;
    :goto_b
    cmp-long v3, v1, v22

    if-lez v3, :cond_10

    cmp-long v3, v12, v22

    if-lez v3, :cond_10

    .line 11671
    mul-long v3, v20, v12

    div-long/2addr v3, v1

    .line 11675
    .local v3, "timeTxMs":J
    invoke-virtual/range {v34 .. v34}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v6

    const/4 v7, 0x0

    aget-object v6, v6, v7

    invoke-virtual {v6, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11650
    .end local v3    # "timeTxMs":J
    .end local v9    # "uid":I
    .end local v10    # "rxBytes":J
    .end local v12    # "txBytes":J
    .end local v14    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v34    # "counter":Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v38    # "traffic":Landroid/bluetooth/UidTraffic;
    :cond_10
    add-int/lit8 v5, v5, 0x1

    move-wide/from16 v3, v35

    move-object/from16 v7, v37

    goto :goto_a

    .end local v35    # "totalRxBytes":J
    .end local v37    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .local v3, "totalRxBytes":J
    .restart local v7    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    :cond_11
    move-wide/from16 v35, v3

    move-object/from16 v37, v7

    .line 11680
    .end local v3    # "totalRxBytes":J
    .end local v5    # "i":I
    .end local v7    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .restart local v35    # "totalRxBytes":J
    .restart local v37    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    :goto_c
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    move-wide/from16 v5, v18

    .end local v18    # "rxTimeMs":J
    .local v5, "rxTimeMs":J
    invoke-virtual {v3, v5, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11681
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    const/4 v4, 0x0

    aget-object v3, v3, v4

    move-wide/from16 v9, v27

    .end local v27    # "txTimeMs":J
    .local v9, "txTimeMs":J
    invoke-virtual {v3, v9, v10}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11682
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    move-wide/from16 v11, v25

    .end local v25    # "idleTimeMs":J
    .local v11, "idleTimeMs":J
    invoke-virtual {v3, v11, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11685
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string v4, "bluetooth.controller.voltage"

    invoke-virtual {v3, v4}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v3

    const-wide v13, 0x408f400000000000L    # 1000.0

    div-double/2addr v3, v13

    .line 11687
    .local v3, "opVolt":D
    const-wide/16 v13, 0x0

    cmpl-double v7, v3, v13

    if-eqz v7, :cond_12

    .line 11689
    iget-object v7, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v7

    .line 11690
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerEnergyUsed()J

    move-result-wide v13

    move-wide/from16 v17, v1

    .end local v1    # "totalTxBytes":J
    .local v17, "totalTxBytes":J
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v1, v1, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;->energy:J

    sub-long/2addr v13, v1

    long-to-double v1, v13

    div-double/2addr v1, v3

    double-to-long v1, v1

    .line 11689
    invoke-virtual {v7, v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_d

    .line 11687
    .end local v17    # "totalTxBytes":J
    .restart local v1    # "totalTxBytes":J
    :cond_12
    move-wide/from16 v17, v1

    .line 11693
    .end local v1    # "totalTxBytes":J
    .restart local v17    # "totalTxBytes":J
    :goto_d
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;

    move-object/from16 v2, p1

    invoke-virtual {v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$BluetoothActivityInfoCache;->set(Landroid/bluetooth/BluetoothActivityEnergyInfo;)V

    .line 11694
    return-void

    .line 11529
    .end local v3    # "opVolt":D
    .end local v5    # "rxTimeMs":J
    .end local v8    # "numUids":I
    .end local v9    # "txTimeMs":J
    .end local v11    # "idleTimeMs":J
    .end local v15    # "leftOverRxTimeMs":J
    .end local v17    # "totalTxBytes":J
    .end local v20    # "leftOverTxTimeMs":J
    .end local v24    # "uidCount":I
    .end local v29    # "elapsedRealtimeMs":J
    .end local v31    # "normalizeScanRxTime":Z
    .end local v32    # "totalScanTimeMs":J
    .end local v35    # "totalRxBytes":J
    .end local v37    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .end local v40    # "normalizeScanTxTime":Z
    :cond_13
    move-object v2, v1

    .line 11530
    :goto_e
    return-void
.end method

.method public blacklist updateClusterSpeedTimes(Landroid/util/SparseLongArray;Z)V
    .locals 19
    .param p1, "updatedUids"    # Landroid/util/SparseLongArray;
    .param p2, "onBattery"    # Z

    .line 11966
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    const-wide/16 v2, 0x0

    .line 11968
    .local v2, "totalCpuClustersTimeMs":J
    iget-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length v4, v4

    new-array v4, v4, [[J

    .line 11969
    .local v4, "clusterSpeedTimesMs":[[J
    const/4 v5, 0x0

    .local v5, "cluster":I
    :goto_0
    iget-object v6, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length v7, v6

    if-ge v5, v7, :cond_1

    .line 11970
    aget-object v6, v6, v5

    invoke-virtual {v6}, Lcom/android/internal/os/KernelCpuSpeedReader;->readDelta()[J

    move-result-object v6

    aput-object v6, v4, v5

    .line 11971
    aget-object v6, v4, v5

    if-eqz v6, :cond_0

    .line 11972
    aget-object v6, v4, v5

    array-length v6, v6

    add-int/lit8 v6, v6, -0x1

    .local v6, "speed":I
    :goto_1
    if-ltz v6, :cond_0

    .line 11973
    aget-object v7, v4, v5

    aget-wide v7, v7, v6

    add-long/2addr v2, v7

    .line 11972
    add-int/lit8 v6, v6, -0x1

    goto :goto_1

    .line 11969
    .end local v6    # "speed":I
    :cond_0
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 11977
    .end local v5    # "cluster":I
    :cond_1
    const-wide/16 v5, 0x0

    cmp-long v5, v2, v5

    if-eqz v5, :cond_a

    .line 11981
    invoke-virtual/range {p1 .. p1}, Landroid/util/SparseLongArray;->size()I

    move-result v5

    .line 11982
    .local v5, "updatedUidsCount":I
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_2
    if-ge v6, v5, :cond_9

    .line 11983
    invoke-virtual {v1, v6}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v7

    invoke-virtual {v0, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v7

    .line 11984
    .local v7, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v1, v6}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v8

    .line 11986
    .local v8, "appCpuTimeUs":J
    iget-object v10, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v10}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v10

    .line 11987
    .local v10, "numClusters":I
    iget-object v11, v7, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    if-eqz v11, :cond_2

    iget-object v11, v7, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    array-length v11, v11

    if-eq v11, v10, :cond_3

    .line 11989
    :cond_2
    new-array v11, v10, [[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iput-object v11, v7, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    .line 11992
    :cond_3
    const/4 v11, 0x0

    .local v11, "cluster":I
    :goto_3
    array-length v12, v4

    if-ge v11, v12, :cond_8

    .line 11993
    aget-object v12, v4, v11

    array-length v12, v12

    .line 11994
    .local v12, "speedsInCluster":I
    iget-object v13, v7, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v13, v13, v11

    if-eqz v13, :cond_4

    iget-object v13, v7, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v13, v13, v11

    array-length v13, v13

    if-eq v12, v13, :cond_5

    .line 11996
    :cond_4
    iget-object v13, v7, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    new-array v14, v12, [Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aput-object v14, v13, v11

    .line 12000
    :cond_5
    iget-object v13, v7, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v13, v13, v11

    .line 12001
    .local v13, "cpuSpeeds":[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;
    const/4 v14, 0x0

    .local v14, "speed":I
    :goto_4
    if-ge v14, v12, :cond_7

    .line 12002
    aget-object v15, v13, v14

    if-nez v15, :cond_6

    .line 12003
    new-instance v15, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v15, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    aput-object v15, v13, v14

    .line 12005
    :cond_6
    aget-object v1, v13, v14

    aget-object v15, v4, v11

    aget-wide v15, v15, v14

    mul-long/2addr v15, v8

    move-object/from16 v17, v4

    move/from16 v18, v5

    .end local v4    # "clusterSpeedTimesMs":[[J
    .end local v5    # "updatedUidsCount":I
    .local v17, "clusterSpeedTimesMs":[[J
    .local v18, "updatedUidsCount":I
    div-long v4, v15, v2

    move/from16 v15, p2

    invoke-virtual {v1, v4, v5, v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12001
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v1, p1

    move-object/from16 v4, v17

    move/from16 v5, v18

    goto :goto_4

    .end local v17    # "clusterSpeedTimesMs":[[J
    .end local v18    # "updatedUidsCount":I
    .restart local v4    # "clusterSpeedTimesMs":[[J
    .restart local v5    # "updatedUidsCount":I
    :cond_7
    move/from16 v15, p2

    move-object/from16 v17, v4

    move/from16 v18, v5

    .line 11992
    .end local v4    # "clusterSpeedTimesMs":[[J
    .end local v5    # "updatedUidsCount":I
    .end local v12    # "speedsInCluster":I
    .end local v13    # "cpuSpeeds":[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;
    .end local v14    # "speed":I
    .restart local v17    # "clusterSpeedTimesMs":[[J
    .restart local v18    # "updatedUidsCount":I
    add-int/lit8 v11, v11, 0x1

    move-object/from16 v1, p1

    goto :goto_3

    .end local v17    # "clusterSpeedTimesMs":[[J
    .end local v18    # "updatedUidsCount":I
    .restart local v4    # "clusterSpeedTimesMs":[[J
    .restart local v5    # "updatedUidsCount":I
    :cond_8
    move/from16 v15, p2

    move-object/from16 v17, v4

    move/from16 v18, v5

    .line 11982
    .end local v4    # "clusterSpeedTimesMs":[[J
    .end local v5    # "updatedUidsCount":I
    .end local v7    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v8    # "appCpuTimeUs":J
    .end local v10    # "numClusters":I
    .end local v11    # "cluster":I
    .restart local v17    # "clusterSpeedTimesMs":[[J
    .restart local v18    # "updatedUidsCount":I
    add-int/lit8 v6, v6, 0x1

    move-object/from16 v1, p1

    goto :goto_2

    .end local v17    # "clusterSpeedTimesMs":[[J
    .end local v18    # "updatedUidsCount":I
    .restart local v4    # "clusterSpeedTimesMs":[[J
    .restart local v5    # "updatedUidsCount":I
    :cond_9
    move/from16 v15, p2

    move-object/from16 v17, v4

    move/from16 v18, v5

    .end local v4    # "clusterSpeedTimesMs":[[J
    .end local v5    # "updatedUidsCount":I
    .restart local v17    # "clusterSpeedTimesMs":[[J
    .restart local v18    # "updatedUidsCount":I
    goto :goto_5

    .line 11977
    .end local v6    # "i":I
    .end local v17    # "clusterSpeedTimesMs":[[J
    .end local v18    # "updatedUidsCount":I
    .restart local v4    # "clusterSpeedTimesMs":[[J
    :cond_a
    move/from16 v15, p2

    move-object/from16 v17, v4

    .line 12013
    .end local v4    # "clusterSpeedTimesMs":[[J
    .restart local v17    # "clusterSpeedTimesMs":[[J
    :goto_5
    return-void
.end method

.method public blacklist updateCpuTimeLocked(ZZ)V
    .locals 5
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z

    .line 11862
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-nez v0, :cond_0

    .line 11863
    return-void

    .line 11870
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuFreqs:[J

    if-nez v1, :cond_1

    .line 11871
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readFreqs(Lcom/android/internal/os/PowerProfile;)[J

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuFreqs:[J

    .line 11877
    :cond_1
    const/4 v0, 0x0

    .line 11878
    .local v0, "partialTimersToConsider":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;>;"
    if-eqz p2, :cond_3

    .line 11879
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    move-object v0, v1

    .line 11880
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_3

    .line 11881
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    .line 11887
    .local v2, "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;
    iget-boolean v3, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->mInList:Z

    if-eqz v3, :cond_2

    iget-object v3, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    if-eqz v3, :cond_2

    iget-object v3, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    iget v3, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUid:I

    const/16 v4, 0x3e8

    if-eq v3, v4, :cond_2

    .line 11888
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11880
    .end local v2    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;
    :cond_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 11892
    .end local v1    # "i":I
    :cond_3
    invoke-virtual {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->markPartialTimersAsEligible()V

    .line 11896
    const/4 v1, 0x0

    if-nez p1, :cond_6

    .line 11897
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 11898
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 11899
    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v2, v2, 0x2

    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 11900
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget-boolean v2, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->TRACK_CPU_ACTIVE_CLUSTER_TIME:Z

    if-eqz v2, :cond_4

    .line 11901
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 11902
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 11903
    iget v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v1, v1, 0x2

    iput v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 11905
    :cond_4
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length v1, v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "cluster":I
    :goto_1
    if-ltz v1, :cond_5

    .line 11906
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    aget-object v2, v2, v1

    invoke-virtual {v2}, Lcom/android/internal/os/KernelCpuSpeedReader;->readDelta()[J

    .line 11905
    add-int/lit8 v1, v1, -0x1

    goto :goto_1

    .line 11908
    .end local v1    # "cluster":I
    :cond_5
    return-void

    .line 11911
    :cond_6
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;

    invoke-virtual {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$UserInfoProvider;->refreshUserIds()V

    .line 11912
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->perClusterTimesAvailable()Z

    move-result v2

    if-eqz v2, :cond_7

    .line 11913
    goto :goto_2

    :cond_7
    new-instance v1, Landroid/util/SparseLongArray;

    invoke-direct {v1}, Landroid/util/SparseLongArray;-><init>()V

    .line 11914
    .local v1, "updatedUids":Landroid/util/SparseLongArray;
    :goto_2
    invoke-virtual {p0, v0, v1, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readKernelUidCpuTimesLocked(Ljava/util/ArrayList;Landroid/util/SparseLongArray;Z)V

    .line 11917
    if-eqz v1, :cond_8

    .line 11918
    invoke-virtual {p0, v1, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateClusterSpeedTimes(Landroid/util/SparseLongArray;Z)V

    .line 11920
    :cond_8
    invoke-virtual {p0, v0, p1, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readKernelUidCpuFreqTimesLocked(Ljava/util/ArrayList;ZZ)V

    .line 11921
    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v2, v2, 0x2

    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 11922
    iget-object v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget-boolean v2, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->TRACK_CPU_ACTIVE_CLUSTER_TIME:Z

    if-eqz v2, :cond_9

    .line 11923
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readKernelUidCpuActiveTimesLocked(Z)V

    .line 11924
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readKernelUidCpuClusterTimesLocked(Z)V

    .line 11925
    iget v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v2, v2, 0x2

    iput v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 11927
    :cond_9
    return-void
.end method

.method public blacklist updateDailyDeadlineLocked()V
    .locals 6

    .line 10184
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyStartTime:J

    .line 10185
    .local v0, "currentTime":J
    invoke-static {}, Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;

    move-result-object v2

    .line 10186
    .local v2, "calDeadline":Ljava/util/Calendar;
    invoke-virtual {v2, v0, v1}, Ljava/util/Calendar;->setTimeInMillis(J)V

    .line 10189
    const/4 v3, 0x6

    invoke-virtual {v2, v3}, Ljava/util/Calendar;->get(I)I

    move-result v4

    const/4 v5, 0x1

    add-int/2addr v4, v5

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10190
    const/16 v3, 0xe

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10191
    const/16 v3, 0xd

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10192
    const/16 v3, 0xc

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10193
    const/16 v3, 0xb

    invoke-virtual {v2, v3, v5}, Ljava/util/Calendar;->set(II)V

    .line 10194
    invoke-virtual {v2}, Ljava/util/Calendar;->getTimeInMillis()J

    move-result-wide v4

    iput-wide v4, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 10195
    const/4 v4, 0x3

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10196
    invoke-virtual {v2}, Ljava/util/Calendar;->getTimeInMillis()J

    move-result-wide v3

    iput-wide v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 10197
    return-void
.end method

.method blacklist updateDischargeScreenLevelsLocked(II)V
    .locals 0
    .param p1, "oldState"    # I
    .param p2, "newState"    # I

    .line 10899
    invoke-direct {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateOldDischargeScreenLevelLocked(I)V

    .line 10900
    invoke-direct {p0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateNewDischargeScreenLevelLocked(I)V

    .line 10901
    return-void
.end method

.method public blacklist updateKernelMemoryBandwidthLocked()V
    .locals 8

    .line 11821
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;->updateStats()V

    .line 11822
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;->getBandwidthEntries()Landroid/util/LongSparseLongArray;

    move-result-object v0

    .line 11823
    .local v0, "bandwidthEntries":Landroid/util/LongSparseLongArray;
    invoke-virtual {v0}, Landroid/util/LongSparseLongArray;->size()I

    move-result v1

    .line 11825
    .local v1, "bandwidthEntryCount":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v1, :cond_1

    .line 11827
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->keyAt(I)J

    move-result-wide v4

    invoke-virtual {v3, v4, v5}, Landroid/util/LongSparseArray;->indexOfKey(J)I

    move-result v3

    move v4, v3

    .local v4, "index":I
    if-ltz v3, :cond_0

    .line 11828
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v3, v4}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .local v3, "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    goto :goto_1

    .line 11830
    .end local v3    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :cond_0
    new-instance v3, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v3, v5, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    .line 11831
    .restart local v3    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    iget-object v5, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->keyAt(I)J

    move-result-wide v6

    invoke-virtual {v5, v6, v7, v3}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    .line 11833
    :goto_1
    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->valueAt(I)J

    move-result-wide v5

    const/4 v7, 0x1

    invoke-virtual {v3, v5, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11825
    .end local v3    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 11842
    .end local v2    # "i":I
    .end local v4    # "index":I
    :cond_1
    return-void
.end method

.method public blacklist updateKernelWakelocksLocked()V
    .locals 10

    .line 11765
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    invoke-virtual {v0, v1}, Lcom/android/internal/os/KernelWakelockReader;->readKernelWakelockStats(Lcom/android/internal/os/KernelWakelockStats;)Lcom/android/internal/os/KernelWakelockStats;

    move-result-object v0

    .line 11767
    .local v0, "wakelockStats":Lcom/android/internal/os/KernelWakelockStats;
    const-string v1, "OppoBatteryStatsImpl"

    if-nez v0, :cond_0

    .line 11769
    const-string v2, "Couldn\'t get kernel wake lock stats"

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11770
    return-void

    .line 11773
    :cond_0
    invoke-virtual {v0}, Lcom/android/internal/os/KernelWakelockStats;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_2

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    .line 11774
    .local v3, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/KernelWakelockStats$Entry;>;"
    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 11775
    .local v4, "name":Ljava/lang/String;
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/KernelWakelockStats$Entry;

    .line 11777
    .local v5, "kws":Lcom/android/internal/os/KernelWakelockStats$Entry;
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v6, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 11778
    .local v6, "kwlt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-nez v6, :cond_1

    .line 11779
    new-instance v7, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    iget-object v9, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-direct {v7, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;)V

    move-object v6, v7

    .line 11780
    iget-object v7, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v7, v4, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 11783
    :cond_1
    iget-wide v7, v5, Lcom/android/internal/os/KernelWakelockStats$Entry;->mTotalTime:J

    iget v9, v5, Lcom/android/internal/os/KernelWakelockStats$Entry;->mCount:I

    invoke-virtual {v6, v7, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11784
    iget v7, v5, Lcom/android/internal/os/KernelWakelockStats$Entry;->mVersion:I

    invoke-virtual {v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->setUpdateVersion(I)V

    .line 11785
    .end local v3    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/KernelWakelockStats$Entry;>;"
    .end local v4    # "name":Ljava/lang/String;
    .end local v5    # "kws":Lcom/android/internal/os/KernelWakelockStats$Entry;
    .end local v6    # "kwlt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    goto :goto_0

    .line 11787
    :cond_2
    const/4 v2, 0x0

    .line 11790
    .local v2, "numWakelocksSetStale":I
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_1
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_4

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/Map$Entry;

    .line 11791
    .local v4, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 11792
    .local v5, "st":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    invoke-virtual {v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->getUpdateVersion()I

    move-result v6

    iget v7, v0, Lcom/android/internal/os/KernelWakelockStats;->kernelWakelockVersion:I

    if-eq v6, v7, :cond_3

    .line 11793
    invoke-virtual {v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->endSample()V

    .line 11794
    add-int/lit8 v2, v2, 0x1

    .line 11796
    .end local v4    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    .end local v5    # "st":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :cond_3
    goto :goto_1

    .line 11799
    :cond_4
    invoke-virtual {v0}, Lcom/android/internal/os/KernelWakelockStats;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_5

    .line 11800
    const-string v3, "All kernel wakelocks had time of zero"

    invoke-static {v1, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 11803
    :cond_5
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->size()I

    move-result v3

    if-ne v2, v3, :cond_6

    .line 11804
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "All kernel wakelocks were set stale. new version="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v0, Lcom/android/internal/os/KernelWakelockStats;->kernelWakelockVersion:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 11807
    :cond_6
    return-void
.end method

.method public blacklist updateMobileRadioState(Landroid/telephony/ModemActivityInfo;)V
    .locals 30
    .param p1, "activityInfo"    # Landroid/telephony/ModemActivityInfo;

    .line 11285
    move-object/from16 v1, p0

    invoke-direct/range {p0 .. p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getDeltaModemActivityInfo(Landroid/telephony/ModemActivityInfo;)Landroid/telephony/ModemActivityInfo;

    move-result-object v2

    .line 11288
    .local v2, "deltaInfo":Landroid/telephony/ModemActivityInfo;
    invoke-direct {v1, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addModemTxPowerToHistory(Landroid/telephony/ModemActivityInfo;)V

    .line 11291
    const/4 v3, 0x0

    .line 11292
    .local v3, "delta":Landroid/net/NetworkStats;
    iget-object v4, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v4

    .line 11293
    :try_start_0
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    invoke-direct {v1, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readNetworkStatsLocked([Ljava/lang/String;)Landroid/net/NetworkStats;

    move-result-object v0

    .line 11294
    .local v0, "latestStats":Landroid/net/NetworkStats;
    if-eqz v0, :cond_0

    .line 11295
    iget-object v5, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    iget-object v6, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11296
    invoke-interface {v6}, Landroid/util/Pools$Pool;->acquire()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/net/NetworkStats;

    .line 11295
    const/4 v7, 0x0

    invoke-static {v0, v5, v7, v7, v6}, Landroid/net/NetworkStats;->subtract(Landroid/net/NetworkStats;Landroid/net/NetworkStats;Landroid/net/NetworkStats$NonMonotonicObserver;Ljava/lang/Object;Landroid/net/NetworkStats;)Landroid/net/NetworkStats;

    move-result-object v5

    move-object v3, v5

    .line 11297
    iget-object v5, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    iget-object v6, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    invoke-interface {v5, v6}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11298
    iput-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    .line 11300
    .end local v0    # "latestStats":Landroid/net/NetworkStats;
    :cond_0
    monitor-exit v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 11302
    monitor-enter p0

    .line 11303
    :try_start_1
    iget-boolean v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryInternal:Z

    if-nez v0, :cond_2

    .line 11304
    if-eqz v3, :cond_1

    .line 11305
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v0, v3}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11307
    :cond_1
    monitor-exit p0

    return-void

    .line 11310
    :cond_2
    const/4 v0, 0x5

    const/4 v4, 0x1

    if-eqz v2, :cond_4

    .line 11311
    iput-boolean v4, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasModemReporting:Z

    .line 11312
    iget-object v5, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v5

    .line 11313
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v6

    int-to-long v6, v6

    .line 11312
    invoke-virtual {v5, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11314
    iget-object v5, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getSleepTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v5

    .line 11315
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v6

    int-to-long v6, v6

    .line 11314
    invoke-virtual {v5, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11316
    iget-object v5, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v5

    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()I

    move-result v6

    int-to-long v6, v6

    invoke-virtual {v5, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11317
    const/4 v5, 0x0

    .local v5, "lvl":I
    :goto_0
    if-ge v5, v0, :cond_3

    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 11323
    .end local v5    # "lvl":I
    :cond_3
    iget-object v5, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v6, "modem.controller.voltage"

    invoke-virtual {v5, v6}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v5

    const-wide v7, 0x408f400000000000L    # 1000.0

    div-double/2addr v5, v7

    .line 11325
    .local v5, "opVolt":D
    const-wide/16 v7, 0x0

    cmpl-double v7, v5, v7

    if-eqz v7, :cond_4

    .line 11326
    nop

    .line 11327
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v7

    int-to-double v7, v7

    iget-object v9, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v10, "modem.controller.sleep"

    .line 11328
    invoke-virtual {v9, v10}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v9

    mul-double/2addr v7, v9

    .line 11329
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v9

    int-to-double v9, v9

    iget-object v11, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v12, "modem.controller.idle"

    .line 11330
    invoke-virtual {v11, v12}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v11

    mul-double/2addr v9, v11

    add-double/2addr v7, v9

    .line 11331
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()I

    move-result v9

    int-to-double v9, v9

    iget-object v11, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v12, "modem.controller.rx"

    .line 11332
    invoke-virtual {v11, v12}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v11

    mul-double/2addr v9, v11

    add-double/2addr v7, v9

    .line 11341
    .local v7, "energyUsed":D
    iget-object v9, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v9

    double-to-long v10, v7

    invoke-virtual {v9, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11344
    iget-object v9, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    .line 11345
    invoke-virtual {v9}, Lcom/android/internal/os/RailStats;->getCellularTotalEnergyUseduWs()J

    move-result-wide v9

    long-to-double v9, v9

    div-double/2addr v9, v5

    double-to-long v9, v9

    .line 11346
    .local v9, "monitoredRailChargeConsumedMaMs":J
    iget-object v11, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getMonitoredRailChargeConsumedMaMs()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v11

    invoke-virtual {v11, v9, v10}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11348
    iget-object v11, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v12, v11, Landroid/os/BatteryStats$HistoryItem;->modemRailChargeMah:D

    long-to-double v14, v9

    const-wide v16, 0x414b774000000000L    # 3600000.0

    div-double v14, v14, v16

    add-double/2addr v12, v14

    iput-wide v12, v11, Landroid/os/BatteryStats$HistoryItem;->modemRailChargeMah:D

    .line 11350
    iget-object v11, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v11

    iget-object v13, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v13}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v13

    invoke-virtual {v1, v11, v12, v13, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 11351
    iget-object v11, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v11}, Lcom/android/internal/os/RailStats;->resetCellularTotalEnergyUsed()V

    .line 11354
    .end local v5    # "opVolt":D
    .end local v7    # "energyUsed":D
    .end local v9    # "monitoredRailChargeConsumedMaMs":J
    :cond_4
    iget-object v5, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v5

    .line 11355
    .local v5, "elapsedRealtimeMs":J
    iget-object v7, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    const-wide/16 v8, 0x3e8

    mul-long/2addr v8, v5

    invoke-virtual {v7, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v7

    .line 11357
    .local v7, "radioTime":J
    iget-object v9, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v5, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->setMark(J)V

    .line 11359
    const-wide/16 v9, 0x0

    .line 11360
    .local v9, "totalRxPackets":J
    const-wide/16 v11, 0x0

    .line 11361
    .local v11, "totalTxPackets":J
    if-eqz v3, :cond_11

    .line 11362
    new-instance v13, Landroid/net/NetworkStats$Entry;

    invoke-direct {v13}, Landroid/net/NetworkStats$Entry;-><init>()V

    .line 11363
    .local v13, "entry":Landroid/net/NetworkStats$Entry;
    invoke-virtual {v3}, Landroid/net/NetworkStats;->size()I

    move-result v14

    .line 11364
    .local v14, "size":I
    const/4 v15, 0x0

    .local v15, "i":I
    :goto_1
    const-wide/16 v16, 0x0

    if-ge v15, v14, :cond_7

    .line 11365
    invoke-virtual {v3, v15, v13}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    move-result-object v18

    move-object/from16 v13, v18

    .line 11366
    move-wide/from16 v19, v5

    .end local v5    # "elapsedRealtimeMs":J
    .local v19, "elapsedRealtimeMs":J
    iget-wide v4, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    cmp-long v4, v4, v16

    if-nez v4, :cond_5

    iget-wide v4, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    cmp-long v4, v4, v16

    if-nez v4, :cond_5

    .line 11367
    move-wide/from16 v22, v7

    const/4 v4, 0x1

    goto/16 :goto_2

    .line 11376
    :cond_5
    iget-wide v4, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    add-long/2addr v9, v4

    .line 11377
    iget-wide v4, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    add-long/2addr v11, v4

    .line 11379
    iget v4, v13, Landroid/net/NetworkStats$Entry;->uid:I

    invoke-virtual {v1, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v4

    invoke-virtual {v1, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v21

    .line 11380
    .local v21, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    const/16 v22, 0x0

    iget-wide v4, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    iget-wide v0, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-wide/from16 v23, v4

    move-wide/from16 v25, v0

    invoke-virtual/range {v21 .. v26}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11382
    const/16 v24, 0x1

    iget-wide v0, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v4, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v23, v21

    move-wide/from16 v25, v0

    move-wide/from16 v27, v4

    invoke-virtual/range {v23 .. v28}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11384
    iget v0, v13, Landroid/net/NetworkStats$Entry;->set:I

    if-nez v0, :cond_6

    .line 11385
    const/16 v23, 0x6

    iget-wide v0, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    iget-wide v4, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-object/from16 v22, v21

    move-wide/from16 v24, v0

    move-wide/from16 v26, v4

    invoke-virtual/range {v22 .. v27}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11387
    const/16 v25, 0x7

    iget-wide v0, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v4, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v24, v21

    move-wide/from16 v26, v0

    move-wide/from16 v28, v4

    invoke-virtual/range {v24 .. v29}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 11391
    :cond_6
    move-object/from16 v1, p0

    :try_start_3
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    const/4 v4, 0x0

    aget-object v0, v0, v4

    move-wide/from16 v22, v7

    .end local v7    # "radioTime":J
    .local v22, "radioTime":J
    iget-wide v6, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    invoke-virtual {v0, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11393
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    const/4 v6, 0x1

    aget-object v0, v0, v6

    iget-wide v6, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    invoke-virtual {v0, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11395
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v0, v0, v4

    iget-wide v6, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    invoke-virtual {v0, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11397
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    const/4 v4, 0x1

    aget-object v0, v0, v4

    iget-wide v6, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    invoke-virtual {v0, v6, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11364
    .end local v21    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :goto_2
    add-int/lit8 v15, v15, 0x1

    move-wide/from16 v5, v19

    move-wide/from16 v7, v22

    const/4 v0, 0x5

    goto/16 :goto_1

    .line 11452
    .end local v9    # "totalRxPackets":J
    .end local v11    # "totalTxPackets":J
    .end local v13    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v14    # "size":I
    .end local v15    # "i":I
    .end local v19    # "elapsedRealtimeMs":J
    .end local v22    # "radioTime":J
    :catchall_0
    move-exception v0

    move-object/from16 v1, p0

    goto/16 :goto_a

    .line 11364
    .restart local v5    # "elapsedRealtimeMs":J
    .restart local v7    # "radioTime":J
    .restart local v9    # "totalRxPackets":J
    .restart local v11    # "totalTxPackets":J
    .restart local v13    # "entry":Landroid/net/NetworkStats$Entry;
    .restart local v14    # "size":I
    .restart local v15    # "i":I
    :cond_7
    move-wide/from16 v19, v5

    move-wide/from16 v22, v7

    .line 11402
    .end local v5    # "elapsedRealtimeMs":J
    .end local v7    # "radioTime":J
    .end local v15    # "i":I
    .restart local v19    # "elapsedRealtimeMs":J
    .restart local v22    # "radioTime":J
    add-long v6, v9, v11

    .line 11403
    .local v6, "totalPackets":J
    cmp-long v0, v6, v16

    if-lez v0, :cond_f

    .line 11404
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_3
    if-ge v0, v14, :cond_e

    .line 11405
    invoke-virtual {v3, v0, v13}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    move-result-object v4

    move-object v13, v4

    .line 11406
    move-wide/from16 v24, v6

    .end local v6    # "totalPackets":J
    .local v24, "totalPackets":J
    iget-wide v5, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    cmp-long v5, v5, v16

    if-nez v5, :cond_8

    iget-wide v5, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    cmp-long v5, v5, v16

    if-nez v5, :cond_8

    .line 11407
    move-wide/from16 v26, v9

    move-wide/from16 v6, v24

    const/4 v5, 0x5

    goto/16 :goto_7

    .line 11410
    :cond_8
    iget v5, v13, Landroid/net/NetworkStats$Entry;->uid:I

    invoke-virtual {v1, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v5

    invoke-virtual {v1, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v5

    .line 11413
    .local v5, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-wide v6, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-object v15, v5

    .end local v5    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .local v15, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-wide v4, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    add-long/2addr v6, v4

    .line 11414
    .local v6, "appPackets":J
    mul-long v4, v22, v6

    div-long v4, v4, v24

    .line 11415
    .local v4, "appRadioTime":J
    invoke-virtual {v15, v4, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteMobileRadioActiveTimeLocked(J)V

    .line 11419
    sub-long v22, v22, v4

    .line 11420
    sub-long v24, v24, v6

    .line 11422
    if-eqz v2, :cond_c

    .line 11423
    nop

    .line 11424
    invoke-virtual {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getOrCreateModemControllerActivityLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v18

    .line 11425
    .local v18, "activityCounter":Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;
    cmp-long v21, v9, v16

    if-lez v21, :cond_a

    move-wide/from16 v26, v9

    .end local v9    # "totalRxPackets":J
    .local v26, "totalRxPackets":J
    iget-wide v8, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    cmp-long v8, v8, v16

    if-lez v8, :cond_9

    .line 11426
    iget-wide v8, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()I

    move-result v10

    move-wide/from16 v28, v4

    .end local v4    # "appRadioTime":J
    .local v28, "appRadioTime":J
    int-to-long v4, v10

    mul-long/2addr v8, v4

    div-long v8, v8, v26

    move-wide v4, v8

    .line 11428
    .local v4, "rxMs":J
    invoke-virtual/range {v18 .. v18}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v8

    invoke-virtual {v8, v4, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_4

    .line 11425
    .end local v28    # "appRadioTime":J
    .local v4, "appRadioTime":J
    :cond_9
    move-wide/from16 v28, v4

    .end local v4    # "appRadioTime":J
    .restart local v28    # "appRadioTime":J
    goto :goto_4

    .end local v26    # "totalRxPackets":J
    .end local v28    # "appRadioTime":J
    .restart local v4    # "appRadioTime":J
    .restart local v9    # "totalRxPackets":J
    :cond_a
    move-wide/from16 v28, v4

    move-wide/from16 v26, v9

    .line 11431
    .end local v4    # "appRadioTime":J
    .end local v9    # "totalRxPackets":J
    .restart local v26    # "totalRxPackets":J
    .restart local v28    # "appRadioTime":J
    :goto_4
    cmp-long v4, v11, v16

    if-lez v4, :cond_b

    iget-wide v4, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    cmp-long v4, v4, v16

    if-lez v4, :cond_b

    .line 11432
    const/4 v4, 0x0

    .local v4, "lvl":I
    :goto_5
    const/4 v5, 0x5

    if-ge v4, v5, :cond_d

    add-int/lit8 v4, v4, 0x1

    goto :goto_5

    .line 11431
    .end local v4    # "lvl":I
    :cond_b
    const/4 v5, 0x5

    goto :goto_6

    .line 11422
    .end local v18    # "activityCounter":Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v26    # "totalRxPackets":J
    .end local v28    # "appRadioTime":J
    .local v4, "appRadioTime":J
    .restart local v9    # "totalRxPackets":J
    :cond_c
    move-wide/from16 v28, v4

    move-wide/from16 v26, v9

    const/4 v5, 0x5

    .line 11404
    .end local v4    # "appRadioTime":J
    .end local v6    # "appPackets":J
    .end local v9    # "totalRxPackets":J
    .end local v15    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .restart local v26    # "totalRxPackets":J
    :cond_d
    :goto_6
    move-wide/from16 v6, v24

    .end local v24    # "totalPackets":J
    .local v6, "totalPackets":J
    :goto_7
    add-int/lit8 v0, v0, 0x1

    move-wide/from16 v9, v26

    goto/16 :goto_3

    .end local v26    # "totalRxPackets":J
    .restart local v9    # "totalRxPackets":J
    :cond_e
    move-wide/from16 v24, v6

    move-wide/from16 v26, v9

    .end local v6    # "totalPackets":J
    .end local v9    # "totalRxPackets":J
    .restart local v24    # "totalPackets":J
    .restart local v26    # "totalRxPackets":J
    move-wide/from16 v4, v22

    goto :goto_8

    .line 11403
    .end local v0    # "i":I
    .end local v24    # "totalPackets":J
    .end local v26    # "totalRxPackets":J
    .restart local v6    # "totalPackets":J
    .restart local v9    # "totalRxPackets":J
    :cond_f
    move-wide/from16 v26, v9

    .end local v9    # "totalRxPackets":J
    .restart local v26    # "totalRxPackets":J
    move-wide/from16 v4, v22

    .line 11443
    .end local v22    # "radioTime":J
    .local v4, "radioTime":J
    :goto_8
    cmp-long v0, v4, v16

    if-lez v0, :cond_10

    .line 11445
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v4, v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11446
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    const-wide/16 v8, 0x1

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11449
    :cond_10
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v0, v3}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11450
    const/4 v0, 0x0

    move-object v3, v0

    .end local v3    # "delta":Landroid/net/NetworkStats;
    .local v0, "delta":Landroid/net/NetworkStats;
    goto :goto_9

    .line 11361
    .end local v0    # "delta":Landroid/net/NetworkStats;
    .end local v4    # "radioTime":J
    .end local v6    # "totalPackets":J
    .end local v13    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v14    # "size":I
    .end local v19    # "elapsedRealtimeMs":J
    .end local v26    # "totalRxPackets":J
    .restart local v3    # "delta":Landroid/net/NetworkStats;
    .local v5, "elapsedRealtimeMs":J
    .restart local v7    # "radioTime":J
    .restart local v9    # "totalRxPackets":J
    :cond_11
    move-wide/from16 v19, v5

    move-wide/from16 v22, v7

    .line 11452
    .end local v5    # "elapsedRealtimeMs":J
    .end local v7    # "radioTime":J
    .end local v9    # "totalRxPackets":J
    .end local v11    # "totalTxPackets":J
    :goto_9
    monitor-exit p0

    .line 11453
    return-void

    .line 11452
    :catchall_1
    move-exception v0

    :goto_a
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v0

    .line 11300
    :catchall_2
    move-exception v0

    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v0
.end method

.method public blacklist updateProcStateCpuTimes(ZZ)V
    .locals 10
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z

    .line 482
    monitor-enter p0

    .line 483
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mConstants:Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;

    iget-boolean v0, v0, Lcom/android/internal/os/OppoBatteryStatsImpl$Constants;->TRACK_CPU_TIMES_BY_PROC_STATE:Z

    if-nez v0, :cond_0

    .line 484
    monitor-exit p0

    return-void

    .line 486
    :cond_0
    invoke-direct {p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->initKernelSingleUidTimeReaderLocked()Z

    move-result v0

    if-nez v0, :cond_1

    .line 487
    monitor-exit p0

    return-void

    .line 491
    :cond_1
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mIsPerProcessStateCpuDataStale:Z

    if-eqz v0, :cond_2

    .line 492
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0}, Landroid/util/SparseIntArray;->clear()V

    .line 493
    monitor-exit p0

    return-void

    .line 496
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-nez v0, :cond_3

    .line 497
    monitor-exit p0

    return-void

    .line 499
    :cond_3
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0}, Landroid/util/SparseIntArray;->clone()Landroid/util/SparseIntArray;

    move-result-object v0

    .line 500
    .local v0, "uidStates":Landroid/util/SparseIntArray;
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v1}, Landroid/util/SparseIntArray;->clear()V

    .line 501
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 502
    invoke-virtual {v0}, Landroid/util/SparseIntArray;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_9

    .line 503
    invoke-virtual {v0, v1}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v2

    .line 504
    .local v2, "uid":I
    invoke-virtual {v0, v1}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v3

    .line 507
    .local v3, "procState":I
    monitor-enter p0

    .line 511
    :try_start_1
    invoke-virtual {p0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getAvailableUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v4

    .line 512
    .local v4, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    if-nez v4, :cond_4

    .line 513
    monitor-exit p0

    goto :goto_4

    .line 515
    :cond_4
    iget-object v5, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mChildUids:Landroid/util/IntArray;

    if-nez v5, :cond_5

    .line 516
    const/4 v5, 0x0

    .local v5, "isolatedUids":[I
    goto :goto_2

    .line 518
    .end local v5    # "isolatedUids":[I
    :cond_5
    iget-object v5, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mChildUids:Landroid/util/IntArray;

    invoke-virtual {v5}, Landroid/util/IntArray;->toArray()[I

    move-result-object v5

    .line 519
    .restart local v5    # "isolatedUids":[I
    array-length v6, v5

    add-int/lit8 v6, v6, -0x1

    .local v6, "j":I
    :goto_1
    if-ltz v6, :cond_6

    .line 520
    iget-object v7, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mChildUids:Landroid/util/IntArray;

    invoke-virtual {v7, v6}, Landroid/util/IntArray;->get(I)I

    move-result v7

    aput v7, v5, v6

    .line 519
    add-int/lit8 v6, v6, -0x1

    goto :goto_1

    .line 523
    .end local v6    # "j":I
    :cond_6
    :goto_2
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 524
    iget-object v6, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v6, v2}, Lcom/android/internal/os/KernelSingleUidTimeReader;->readDeltaMs(I)[J

    move-result-object v6

    .line 525
    .local v6, "cpuTimesMs":[J
    if-eqz v5, :cond_7

    .line 526
    array-length v7, v5

    add-int/lit8 v7, v7, -0x1

    .local v7, "j":I
    :goto_3
    if-ltz v7, :cond_7

    .line 527
    iget-object v8, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    aget v9, v5, v7

    .line 528
    invoke-virtual {v8, v9}, Lcom/android/internal/os/KernelSingleUidTimeReader;->readDeltaMs(I)[J

    move-result-object v8

    .line 527
    invoke-virtual {p0, v6, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addCpuTimes([J[J)[J

    move-result-object v6

    .line 526
    add-int/lit8 v7, v7, -0x1

    goto :goto_3

    .line 531
    .end local v7    # "j":I
    :cond_7
    if-eqz p1, :cond_8

    if-eqz v6, :cond_8

    .line 532
    monitor-enter p0

    .line 533
    :try_start_2
    invoke-static {v4, v3, v6, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$200(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;I[JZ)V

    .line 534
    invoke-static {v4, v3, v6, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$300(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;I[JZ)V

    .line 535
    monitor-exit p0

    goto :goto_4

    :catchall_0
    move-exception v7

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v7

    .line 502
    .end local v2    # "uid":I
    .end local v3    # "procState":I
    .end local v4    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v5    # "isolatedUids":[I
    .end local v6    # "cpuTimesMs":[J
    :cond_8
    :goto_4
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 523
    .restart local v2    # "uid":I
    .restart local v3    # "procState":I
    :catchall_1
    move-exception v4

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v4

    .line 538
    .end local v1    # "i":I
    .end local v2    # "uid":I
    .end local v3    # "procState":I
    :cond_9
    return-void

    .line 501
    .end local v0    # "uidStates":Landroid/util/SparseIntArray;
    :catchall_2
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v0
.end method

.method public blacklist updateRailStatsLocked()V
    .locals 2

    .line 11755
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRailEnergyDataCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v0}, Lcom/android/internal/os/RailStats;->isRailStatsAvailable()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 11758
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRailEnergyDataCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;

    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-interface {v0, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$RailEnergyDataCallback;->fillRailDataStats(Lcom/android/internal/os/RailStats;)V

    .line 11759
    return-void

    .line 11756
    :cond_1
    :goto_0
    return-void
.end method

.method public blacklist updateRpmStatsLocked()V
    .locals 18

    .line 11702
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;

    if-nez v1, :cond_0

    return-void

    .line 11703
    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    .line 11704
    .local v1, "now":J
    iget-wide v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    sub-long v3, v1, v3

    const-wide/16 v5, 0x3e8

    cmp-long v3, v3, v5

    if-ltz v3, :cond_1

    .line 11705
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;

    iget-object v4, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    invoke-interface {v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;->fillLowPowerStats(Lcom/android/internal/os/RpmStats;)V

    .line 11706
    iput-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 11710
    :cond_1
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    iget-object v3, v3, Lcom/android/internal/os/RpmStats;->mPlatformLowPowerStats:Ljava/util/Map;

    invoke-interface {v3}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    const-string v7, "."

    if-eqz v4, :cond_3

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/Map$Entry;

    .line 11713
    .local v4, "pstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;>;"
    invoke-interface {v4}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Ljava/lang/String;

    .line 11714
    .local v8, "pName":Ljava/lang/String;
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget-wide v9, v9, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mTimeMs:J

    mul-long/2addr v9, v5

    .line 11715
    .local v9, "pTimeUs":J
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget v11, v11, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mCount:I

    .line 11716
    .local v11, "pCount":I
    invoke-virtual {v0, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    move-result-object v12

    invoke-virtual {v12, v9, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11723
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget-object v12, v12, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mVoters:Ljava/util/Map;

    invoke-interface {v12}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v12

    invoke-interface {v12}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v12

    :goto_1
    invoke-interface {v12}, Ljava/util/Iterator;->hasNext()Z

    move-result v13

    if-eqz v13, :cond_2

    invoke-interface {v12}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Ljava/util/Map$Entry;

    .line 11724
    .local v13, "voter":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    new-instance v14, Ljava/lang/StringBuilder;

    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v14, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v14, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v13}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Ljava/lang/String;

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v14

    .line 11725
    .local v14, "vName":Ljava/lang/String;
    invoke-interface {v13}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/internal/os/RpmStats$PowerStateElement;

    move-wide/from16 v16, v1

    .end local v1    # "now":J
    .local v16, "now":J
    iget-wide v1, v15, Lcom/android/internal/os/RpmStats$PowerStateElement;->mTimeMs:J

    mul-long/2addr v1, v5

    .line 11726
    .local v1, "vTimeUs":J
    invoke-interface {v13}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget v15, v15, Lcom/android/internal/os/RpmStats$PowerStateElement;->mCount:I

    .line 11727
    .local v15, "vCount":I
    invoke-virtual {v0, v14}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    move-result-object v5

    invoke-virtual {v5, v1, v2, v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11731
    .end local v1    # "vTimeUs":J
    .end local v13    # "voter":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    .end local v14    # "vName":Ljava/lang/String;
    .end local v15    # "vCount":I
    move-wide/from16 v1, v16

    const-wide/16 v5, 0x3e8

    goto :goto_1

    .line 11723
    .end local v16    # "now":J
    .local v1, "now":J
    :cond_2
    move-wide/from16 v16, v1

    .line 11732
    .end local v1    # "now":J
    .end local v4    # "pstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;>;"
    .end local v8    # "pName":Ljava/lang/String;
    .end local v9    # "pTimeUs":J
    .end local v11    # "pCount":I
    .restart local v16    # "now":J
    const-wide/16 v5, 0x3e8

    goto/16 :goto_0

    .line 11735
    .end local v16    # "now":J
    .restart local v1    # "now":J
    :cond_3
    move-wide/from16 v16, v1

    .end local v1    # "now":J
    .restart local v16    # "now":J
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    iget-object v1, v1, Lcom/android/internal/os/RpmStats;->mSubsystemLowPowerStats:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_2
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_5

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 11737
    .local v2, "subsys":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateSubsystem;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 11739
    .local v3, "subsysName":Ljava/lang/String;
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/RpmStats$PowerStateSubsystem;

    iget-object v4, v4, Lcom/android/internal/os/RpmStats$PowerStateSubsystem;->mStates:Ljava/util/Map;

    invoke-interface {v4}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_3
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_4

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/util/Map$Entry;

    .line 11740
    .local v5, "sstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v5}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Ljava/lang/String;

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 11741
    .local v6, "name":Ljava/lang/String;
    invoke-interface {v5}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget-wide v8, v8, Lcom/android/internal/os/RpmStats$PowerStateElement;->mTimeMs:J

    const-wide/16 v10, 0x3e8

    mul-long/2addr v8, v10

    .line 11742
    .local v8, "timeUs":J
    invoke-interface {v5}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget v12, v12, Lcom/android/internal/os/RpmStats$PowerStateElement;->mCount:I

    .line 11743
    .local v12, "count":I
    invoke-virtual {v0, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    move-result-object v13

    invoke-virtual {v13, v8, v9, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11747
    .end local v5    # "sstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    .end local v6    # "name":Ljava/lang/String;
    .end local v8    # "timeUs":J
    .end local v12    # "count":I
    goto :goto_3

    .line 11739
    :cond_4
    const-wide/16 v10, 0x3e8

    .line 11748
    .end local v2    # "subsys":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateSubsystem;>;"
    .end local v3    # "subsysName":Ljava/lang/String;
    goto :goto_2

    .line 11749
    :cond_5
    return-void
.end method

.method public blacklist updateTimeBasesLocked(ZIJJ)V
    .locals 18
    .param p1, "unplugged"    # Z
    .param p2, "screenState"    # I
    .param p3, "uptime"    # J
    .param p5, "realtime"    # J

    .line 3915
    move-object/from16 v0, p0

    move/from16 v7, p1

    move-wide/from16 v8, p3

    move-wide/from16 v10, p5

    move/from16 v12, p2

    invoke-virtual {v0, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    const/4 v13, 0x1

    xor-int/2addr v1, v13

    move v14, v1

    .line 3916
    .local v14, "screenOff":Z
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    const/4 v15, 0x0

    if-eq v7, v1, :cond_0

    move v1, v13

    goto :goto_0

    :cond_0
    move v1, v15

    :goto_0
    move/from16 v16, v1

    .line 3917
    .local v16, "updateOnBatteryTimeBase":Z
    if-eqz v7, :cond_1

    if-eqz v14, :cond_1

    move v1, v13

    goto :goto_1

    :cond_1
    move v1, v15

    :goto_1
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 3918
    invoke-virtual {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v2

    if-eq v1, v2, :cond_2

    move v1, v13

    goto :goto_2

    :cond_2
    move v1, v15

    :goto_2
    move/from16 v17, v1

    .line 3920
    .local v17, "updateOnBatteryScreenOffTimeBase":Z
    if-nez v17, :cond_3

    if-eqz v16, :cond_8

    .line 3921
    :cond_3
    if-eqz v17, :cond_4

    .line 3922
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateKernelWakelocksLocked()V

    .line 3923
    invoke-direct/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateBatteryPropertiesLocked()V

    .line 3928
    :cond_4
    if-eqz v16, :cond_5

    .line 3929
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->updateRpmStatsLocked()V

    .line 3937
    :cond_5
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move/from16 v2, p1

    move-wide/from16 v3, p3

    move-wide/from16 v5, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->setRunning(ZJJ)Z

    .line 3938
    if-eqz v16, :cond_6

    .line 3939
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    sub-int/2addr v1, v13

    .local v1, "i":I
    :goto_3
    if-ltz v1, :cond_6

    .line 3940
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    invoke-virtual {v2, v8, v9, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->updateOnBatteryBgTimeBase(JJ)Z

    .line 3939
    add-int/lit8 v1, v1, -0x1

    goto :goto_3

    .line 3943
    .end local v1    # "i":I
    :cond_6
    if-eqz v17, :cond_8

    .line 3944
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    if-eqz v7, :cond_7

    if-eqz v14, :cond_7

    move v2, v13

    goto :goto_4

    :cond_7
    move v2, v15

    :goto_4
    move-wide/from16 v3, p3

    move-wide/from16 v5, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->setRunning(ZJJ)Z

    .line 3945
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    sub-int/2addr v1, v13

    .restart local v1    # "i":I
    :goto_5
    if-ltz v1, :cond_8

    .line 3946
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    invoke-virtual {v2, v8, v9, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->updateOnBatteryScreenOffBgTimeBase(JJ)Z

    .line 3945
    add-int/lit8 v1, v1, -0x1

    goto :goto_5

    .line 3950
    .end local v1    # "i":I
    :cond_8
    return-void
.end method

.method public blacklist updateWifiState(Landroid/os/connectivity/WifiActivityEnergyInfo;)V
    .locals 45
    .param p1, "info"    # Landroid/os/connectivity/WifiActivityEnergyInfo;

    .line 10992
    move-object/from16 v1, p0

    const/4 v2, 0x0

    .line 10993
    .local v2, "delta":Landroid/net/NetworkStats;
    iget-object v3, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v3

    .line 10994
    :try_start_0
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    invoke-direct {v1, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->readNetworkStatsLocked([Ljava/lang/String;)Landroid/net/NetworkStats;

    move-result-object v0

    .line 10995
    .local v0, "latestStats":Landroid/net/NetworkStats;
    if-eqz v0, :cond_0

    .line 10996
    iget-object v4, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    iget-object v5, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 10997
    invoke-interface {v5}, Landroid/util/Pools$Pool;->acquire()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/net/NetworkStats;

    .line 10996
    const/4 v6, 0x0

    invoke-static {v0, v4, v6, v6, v5}, Landroid/net/NetworkStats;->subtract(Landroid/net/NetworkStats;Landroid/net/NetworkStats;Landroid/net/NetworkStats$NonMonotonicObserver;Ljava/lang/Object;Landroid/net/NetworkStats;)Landroid/net/NetworkStats;

    move-result-object v4

    move-object v2, v4

    .line 10998
    iget-object v4, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    iget-object v5, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    invoke-interface {v4, v5}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 10999
    iput-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 11001
    .end local v0    # "latestStats":Landroid/net/NetworkStats;
    :cond_0
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 11003
    monitor-enter p0

    .line 11004
    :try_start_1
    iget-boolean v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryInternal:Z

    if-nez v0, :cond_2

    .line 11005
    if-eqz v2, :cond_1

    .line 11006
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v0, v2}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11008
    :cond_1
    monitor-exit p0

    return-void

    .line 11011
    :cond_2
    iget-object v0, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    .line 11012
    .local v3, "elapsedRealtimeMs":J
    new-instance v0, Landroid/util/SparseLongArray;

    invoke-direct {v0}, Landroid/util/SparseLongArray;-><init>()V

    .line 11013
    .local v0, "rxPackets":Landroid/util/SparseLongArray;
    new-instance v5, Landroid/util/SparseLongArray;

    invoke-direct {v5}, Landroid/util/SparseLongArray;-><init>()V

    .line 11014
    .local v5, "txPackets":Landroid/util/SparseLongArray;
    const-wide/16 v6, 0x0

    .line 11015
    .local v6, "totalTxPackets":J
    const-wide/16 v8, 0x0

    .line 11016
    .local v8, "totalRxPackets":J
    if-eqz v2, :cond_9

    .line 11017
    new-instance v12, Landroid/net/NetworkStats$Entry;

    invoke-direct {v12}, Landroid/net/NetworkStats$Entry;-><init>()V

    .line 11018
    .local v12, "entry":Landroid/net/NetworkStats$Entry;
    invoke-virtual {v2}, Landroid/net/NetworkStats;->size()I

    move-result v13

    .line 11019
    .local v13, "size":I
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_0
    if-ge v14, v13, :cond_8

    .line 11020
    invoke-virtual {v2, v14, v12}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    move-result-object v15

    move-object v12, v15

    .line 11028
    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->rxBytes:J

    const-wide/16 v15, 0x0

    cmp-long v10, v10, v15

    if-nez v10, :cond_3

    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->txBytes:J

    cmp-long v10, v10, v15

    if-nez v10, :cond_3

    .line 11030
    move-wide/from16 v23, v3

    goto/16 :goto_2

    .line 11033
    :cond_3
    iget v10, v12, Landroid/net/NetworkStats$Entry;->uid:I

    invoke-virtual {v1, v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->mapUid(I)I

    move-result v10

    invoke-virtual {v1, v10}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v17

    .line 11034
    .local v17, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->rxBytes:J

    const-wide/16 v15, 0x0

    cmp-long v10, v10, v15

    if-eqz v10, :cond_5

    .line 11035
    const/16 v18, 0x2

    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->rxBytes:J

    move-wide/from16 v23, v3

    .end local v3    # "elapsedRealtimeMs":J
    .local v23, "elapsedRealtimeMs":J
    iget-wide v3, v12, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-wide/from16 v19, v10

    move-wide/from16 v21, v3

    invoke-virtual/range {v17 .. v22}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11037
    iget v3, v12, Landroid/net/NetworkStats$Entry;->set:I

    if-nez v3, :cond_4

    .line 11038
    const/16 v26, 0x8

    iget-wide v3, v12, Landroid/net/NetworkStats$Entry;->rxBytes:J

    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-object/from16 v25, v17

    move-wide/from16 v27, v3

    move-wide/from16 v29, v10

    invoke-virtual/range {v25 .. v30}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11041
    :cond_4
    iget-object v3, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    const/4 v4, 0x2

    aget-object v3, v3, v4

    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->rxBytes:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11043
    iget-object v3, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v4

    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->rxPackets:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11046
    invoke-virtual/range {v17 .. v17}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getUid()I

    move-result v3

    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->rxPackets:J

    invoke-virtual {v0, v3, v10, v11}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 11050
    iget-wide v3, v12, Landroid/net/NetworkStats$Entry;->rxPackets:J

    add-long/2addr v8, v3

    goto :goto_1

    .line 11034
    .end local v23    # "elapsedRealtimeMs":J
    .restart local v3    # "elapsedRealtimeMs":J
    :cond_5
    move-wide/from16 v23, v3

    .line 11053
    .end local v3    # "elapsedRealtimeMs":J
    .restart local v23    # "elapsedRealtimeMs":J
    :goto_1
    iget-wide v3, v12, Landroid/net/NetworkStats$Entry;->txBytes:J

    const-wide/16 v10, 0x0

    cmp-long v3, v3, v10

    if-eqz v3, :cond_7

    .line 11054
    const/16 v26, 0x3

    iget-wide v3, v12, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v25, v17

    move-wide/from16 v27, v3

    move-wide/from16 v29, v10

    invoke-virtual/range {v25 .. v30}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11056
    iget v3, v12, Landroid/net/NetworkStats$Entry;->set:I

    if-nez v3, :cond_6

    .line 11057
    const/16 v26, 0x9

    iget-wide v3, v12, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v25, v17

    move-wide/from16 v27, v3

    move-wide/from16 v29, v10

    invoke-virtual/range {v25 .. v30}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11060
    :cond_6
    iget-object v3, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    const/4 v4, 0x3

    aget-object v3, v3, v4

    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->txBytes:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11062
    iget-object v3, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v4

    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->txPackets:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11065
    invoke-virtual/range {v17 .. v17}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getUid()I

    move-result v3

    iget-wide v10, v12, Landroid/net/NetworkStats$Entry;->txPackets:J

    invoke-virtual {v5, v3, v10, v11}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 11069
    iget-wide v3, v12, Landroid/net/NetworkStats$Entry;->txPackets:J

    add-long/2addr v6, v3

    .line 11019
    .end local v17    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_7
    :goto_2
    add-int/lit8 v14, v14, 0x1

    move-wide/from16 v3, v23

    goto/16 :goto_0

    .end local v23    # "elapsedRealtimeMs":J
    .restart local v3    # "elapsedRealtimeMs":J
    :cond_8
    move-wide/from16 v23, v3

    .line 11072
    .end local v3    # "elapsedRealtimeMs":J
    .end local v14    # "i":I
    .restart local v23    # "elapsedRealtimeMs":J
    iget-object v3, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v3, v2}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 11073
    const/4 v2, 0x0

    goto :goto_3

    .line 11016
    .end local v12    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v13    # "size":I
    .end local v23    # "elapsedRealtimeMs":J
    .restart local v3    # "elapsedRealtimeMs":J
    :cond_9
    move-wide/from16 v23, v3

    .line 11076
    .end local v3    # "elapsedRealtimeMs":J
    .restart local v23    # "elapsedRealtimeMs":J
    :goto_3
    if-eqz p1, :cond_13

    .line 11077
    const/4 v3, 0x1

    :try_start_2
    iput-boolean v3, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasWifiReporting:Z

    .line 11080
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerTxDurationMillis()J

    move-result-wide v3

    .line 11081
    .local v3, "txTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerRxDurationMillis()J

    move-result-wide v10

    .line 11082
    .local v10, "rxTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerScanDurationMillis()J

    move-result-wide v12

    .line 11083
    .local v12, "scanTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerIdleDurationMillis()J

    move-result-wide v17

    .line 11084
    .local v17, "idleTimeMs":J
    add-long v19, v3, v10

    add-long v19, v19, v17

    .line 11086
    .local v19, "totalTimeMs":J
    move-wide/from16 v21, v10

    .line 11087
    .local v21, "leftOverRxTimeMs":J
    move-wide/from16 v25, v3

    .line 11098
    .local v25, "leftOverTxTimeMs":J
    const-wide/16 v27, 0x0

    .line 11099
    .local v27, "totalWifiLockTimeMs":J
    const-wide/16 v29, 0x0

    .line 11103
    .local v29, "totalScanTimeMs":J
    iget-object v14, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v14}, Landroid/util/SparseArray;->size()I

    move-result v14
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 11104
    .local v14, "uidStatsSize":I
    const/16 v31, 0x0

    move/from16 v15, v31

    .local v15, "i":I
    :goto_4
    const-wide/16 v33, 0x3e8

    if-ge v15, v14, :cond_a

    .line 11105
    move-object/from16 v35, v2

    .end local v2    # "delta":Landroid/net/NetworkStats;
    .local v35, "delta":Landroid/net/NetworkStats;
    :try_start_3
    iget-object v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v15}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 11108
    .local v2, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    move-wide/from16 v36, v12

    .end local v12    # "scanTimeMs":J
    .local v36, "scanTimeMs":J
    iget-object v12, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    move-wide/from16 v38, v8

    .end local v8    # "totalRxPackets":J
    .local v38, "totalRxPackets":J
    mul-long v8, v23, v33

    invoke-virtual {v12, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v8

    div-long v8, v8, v33

    add-long v29, v29, v8

    .line 11112
    iget-object v8, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    mul-long v12, v23, v33

    invoke-virtual {v8, v12, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v8

    div-long v8, v8, v33

    add-long v27, v27, v8

    .line 11104
    .end local v2    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-int/lit8 v15, v15, 0x1

    move-object/from16 v2, v35

    move-wide/from16 v12, v36

    move-wide/from16 v8, v38

    goto :goto_4

    .end local v35    # "delta":Landroid/net/NetworkStats;
    .end local v36    # "scanTimeMs":J
    .end local v38    # "totalRxPackets":J
    .local v2, "delta":Landroid/net/NetworkStats;
    .restart local v8    # "totalRxPackets":J
    .restart local v12    # "scanTimeMs":J
    :cond_a
    move-object/from16 v35, v2

    move-wide/from16 v38, v8

    move-wide/from16 v36, v12

    .line 11128
    .end local v2    # "delta":Landroid/net/NetworkStats;
    .end local v8    # "totalRxPackets":J
    .end local v12    # "scanTimeMs":J
    .end local v15    # "i":I
    .restart local v35    # "delta":Landroid/net/NetworkStats;
    .restart local v36    # "scanTimeMs":J
    .restart local v38    # "totalRxPackets":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_5
    if-ge v2, v14, :cond_f

    .line 11129
    iget-object v9, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v9, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 11131
    .local v9, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-object v12, v9, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    move-object/from16 v40, v9

    .end local v9    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .local v40, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    mul-long v8, v23, v33

    invoke-virtual {v12, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v8

    div-long v8, v8, v33

    .line 11133
    .local v8, "scanTimeSinceMarkMs":J
    const-wide/16 v15, 0x0

    cmp-long v12, v8, v15

    if-lez v12, :cond_d

    .line 11135
    move-object/from16 v12, v40

    .end local v40    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .local v12, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-object v13, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    move/from16 v32, v14

    move-wide/from16 v14, v23

    .end local v23    # "elapsedRealtimeMs":J
    .local v14, "elapsedRealtimeMs":J
    .local v32, "uidStatsSize":I
    invoke-virtual {v13, v14, v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->setMark(J)V

    .line 11137
    move-wide/from16 v23, v8

    .line 11138
    .local v23, "scanRxTimeSinceMarkMs":J
    move-wide/from16 v41, v8

    .line 11147
    .local v41, "scanTxTimeSinceMarkMs":J
    cmp-long v13, v29, v10

    if-lez v13, :cond_b

    .line 11148
    mul-long v43, v10, v23

    div-long v43, v43, v29

    move-wide/from16 v23, v43

    move-wide/from16 v43, v8

    move-wide/from16 v8, v23

    goto :goto_6

    .line 11147
    :cond_b
    move-wide/from16 v43, v8

    move-wide/from16 v8, v23

    .line 11151
    .end local v23    # "scanRxTimeSinceMarkMs":J
    .local v8, "scanRxTimeSinceMarkMs":J
    .local v43, "scanTimeSinceMarkMs":J
    :goto_6
    cmp-long v13, v29, v3

    if-lez v13, :cond_c

    .line 11152
    mul-long v23, v3, v41

    div-long v23, v23, v29

    move-wide/from16 v41, v23

    move-wide/from16 v23, v3

    move-wide/from16 v3, v41

    goto :goto_7

    .line 11151
    :cond_c
    move-wide/from16 v23, v3

    move-wide/from16 v3, v41

    .line 11162
    .end local v41    # "scanTxTimeSinceMarkMs":J
    .local v3, "scanTxTimeSinceMarkMs":J
    .local v23, "txTimeMs":J
    :goto_7
    nop

    .line 11163
    invoke-virtual {v12}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v13

    .line 11164
    .local v13, "activityCounter":Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;
    move-wide/from16 v41, v10

    .end local v10    # "rxTimeMs":J
    .local v41, "rxTimeMs":J
    invoke-virtual {v13}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v10

    invoke-virtual {v10, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11165
    invoke-virtual {v13}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v10

    const/4 v11, 0x0

    aget-object v10, v10, v11

    invoke-virtual {v10, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11167
    sub-long v21, v21, v8

    .line 11168
    sub-long v25, v25, v3

    goto :goto_8

    .line 11133
    .end local v12    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v13    # "activityCounter":Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v32    # "uidStatsSize":I
    .end local v41    # "rxTimeMs":J
    .end local v43    # "scanTimeSinceMarkMs":J
    .local v3, "txTimeMs":J
    .local v8, "scanTimeSinceMarkMs":J
    .restart local v10    # "rxTimeMs":J
    .local v14, "uidStatsSize":I
    .local v23, "elapsedRealtimeMs":J
    .restart local v40    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    :cond_d
    move-wide/from16 v43, v8

    move-wide/from16 v41, v10

    move/from16 v32, v14

    move-wide/from16 v14, v23

    move-object/from16 v12, v40

    move-wide/from16 v23, v3

    .line 11173
    .end local v3    # "txTimeMs":J
    .end local v8    # "scanTimeSinceMarkMs":J
    .end local v10    # "rxTimeMs":J
    .end local v40    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .restart local v12    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .local v14, "elapsedRealtimeMs":J
    .local v23, "txTimeMs":J
    .restart local v32    # "uidStatsSize":I
    .restart local v41    # "rxTimeMs":J
    .restart local v43    # "scanTimeSinceMarkMs":J
    :goto_8
    iget-object v3, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    mul-long v8, v14, v33

    .line 11174
    invoke-virtual {v3, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v3

    div-long v3, v3, v33

    .line 11176
    .local v3, "wifiLockTimeSinceMarkMs":J
    const-wide/16 v8, 0x0

    cmp-long v10, v3, v8

    if-lez v10, :cond_e

    .line 11178
    iget-object v10, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v10, v14, v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->setMark(J)V

    .line 11180
    mul-long v10, v3, v17

    div-long v10, v10, v27

    .line 11186
    .local v10, "myIdleTimeMs":J
    invoke-virtual {v12}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v13

    invoke-virtual {v13}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v13

    .line 11187
    invoke-virtual {v13, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11128
    .end local v3    # "wifiLockTimeSinceMarkMs":J
    .end local v10    # "myIdleTimeMs":J
    .end local v12    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v43    # "scanTimeSinceMarkMs":J
    :cond_e
    add-int/lit8 v2, v2, 0x1

    move-wide/from16 v3, v23

    move-wide/from16 v10, v41

    move-wide/from16 v23, v14

    move/from16 v14, v32

    goto/16 :goto_5

    .end local v32    # "uidStatsSize":I
    .end local v41    # "rxTimeMs":J
    .local v3, "txTimeMs":J
    .local v10, "rxTimeMs":J
    .local v14, "uidStatsSize":I
    .local v23, "elapsedRealtimeMs":J
    :cond_f
    move-wide/from16 v41, v10

    move/from16 v32, v14

    move-wide/from16 v14, v23

    move-wide/from16 v23, v3

    .line 11198
    .end local v2    # "i":I
    .end local v3    # "txTimeMs":J
    .end local v10    # "rxTimeMs":J
    .local v14, "elapsedRealtimeMs":J
    .local v23, "txTimeMs":J
    .restart local v32    # "uidStatsSize":I
    .restart local v41    # "rxTimeMs":J
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_9
    invoke-virtual {v5}, Landroid/util/SparseLongArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_10

    .line 11199
    invoke-virtual {v5, v2}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v3

    invoke-virtual {v1, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v3

    .line 11200
    .local v3, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v5, v2}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v8

    mul-long v8, v8, v25

    div-long/2addr v8, v6

    .line 11205
    .local v8, "myTxTimeMs":J
    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    const/4 v10, 0x0

    aget-object v4, v4, v10

    .line 11206
    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11198
    .end local v3    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v8    # "myTxTimeMs":J
    add-int/lit8 v2, v2, 0x1

    goto :goto_9

    .line 11211
    .end local v2    # "i":I
    :cond_10
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_a
    invoke-virtual {v0}, Landroid/util/SparseLongArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_11

    .line 11212
    invoke-virtual {v0, v2}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v3

    invoke-virtual {v1, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    move-result-object v3

    .line 11213
    .restart local v3    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    invoke-virtual {v0, v2}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v8

    mul-long v8, v8, v21

    div-long v8, v8, v38

    .line 11218
    .local v8, "myRxTimeMs":J
    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    .line 11219
    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11211
    .end local v3    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v8    # "myRxTimeMs":J
    add-int/lit8 v2, v2, 0x1

    goto :goto_a

    .line 11226
    .end local v2    # "i":I
    :cond_11
    iget-object v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerRxDurationMillis()J

    move-result-wide v3

    invoke-virtual {v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11227
    iget-object v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    const/4 v3, 0x0

    aget-object v2, v2, v3

    .line 11228
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerTxDurationMillis()J

    move-result-wide v3

    .line 11227
    invoke-virtual {v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11229
    iget-object v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getScanTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    .line 11230
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerScanDurationMillis()J

    move-result-wide v3

    .line 11229
    invoke-virtual {v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11231
    iget-object v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v2}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    .line 11232
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerIdleDurationMillis()J

    move-result-wide v3

    .line 11231
    invoke-virtual {v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11235
    iget-object v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v3, "wifi.controller.voltage"

    invoke-virtual {v2, v3}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v2

    const-wide v8, 0x408f400000000000L    # 1000.0

    div-double/2addr v2, v8

    .line 11237
    .local v2, "opVolt":D
    const-wide/16 v8, 0x0

    cmpl-double v4, v2, v8

    if-eqz v4, :cond_12

    .line 11239
    iget-object v4, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    .line 11240
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerEnergyUsedMicroJoules()J

    move-result-wide v8

    long-to-double v8, v8

    div-double/2addr v8, v2

    double-to-long v8, v8

    .line 11239
    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11244
    :cond_12
    iget-object v4, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    .line 11245
    invoke-virtual {v4}, Lcom/android/internal/os/RailStats;->getWifiTotalEnergyUseduWs()J

    move-result-wide v8

    long-to-double v8, v8

    div-double/2addr v8, v2

    double-to-long v8, v8

    .line 11246
    .local v8, "monitoredRailChargeConsumedMaMs":J
    iget-object v4, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->getMonitoredRailChargeConsumedMaMs()Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11248
    iget-object v4, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v10, v4, Landroid/os/BatteryStats$HistoryItem;->wifiRailChargeMah:D

    long-to-double v12, v8

    const-wide v33, 0x414b774000000000L    # 3600000.0

    div-double v12, v12, v33

    add-double/2addr v10, v12

    iput-wide v10, v4, Landroid/os/BatteryStats$HistoryItem;->wifiRailChargeMah:D

    .line 11250
    iget-object v4, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v10

    iget-object v4, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v12

    invoke-virtual {v1, v10, v11, v12, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 11251
    iget-object v4, v1, Lcom/android/internal/os/OppoBatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v4}, Lcom/android/internal/os/RailStats;->resetWifiTotalEnergyUsed()V

    goto :goto_b

    .line 11253
    .end local v0    # "rxPackets":Landroid/util/SparseLongArray;
    .end local v5    # "txPackets":Landroid/util/SparseLongArray;
    .end local v6    # "totalTxPackets":J
    .end local v8    # "monitoredRailChargeConsumedMaMs":J
    .end local v14    # "elapsedRealtimeMs":J
    .end local v17    # "idleTimeMs":J
    .end local v19    # "totalTimeMs":J
    .end local v21    # "leftOverRxTimeMs":J
    .end local v23    # "txTimeMs":J
    .end local v25    # "leftOverTxTimeMs":J
    .end local v27    # "totalWifiLockTimeMs":J
    .end local v29    # "totalScanTimeMs":J
    .end local v32    # "uidStatsSize":I
    .end local v35    # "delta":Landroid/net/NetworkStats;
    .end local v36    # "scanTimeMs":J
    .end local v38    # "totalRxPackets":J
    .end local v41    # "rxTimeMs":J
    .local v2, "delta":Landroid/net/NetworkStats;
    :catchall_0
    move-exception v0

    move-object/from16 v35, v2

    .end local v2    # "delta":Landroid/net/NetworkStats;
    .restart local v35    # "delta":Landroid/net/NetworkStats;
    goto :goto_c

    .line 11076
    .end local v35    # "delta":Landroid/net/NetworkStats;
    .restart local v0    # "rxPackets":Landroid/util/SparseLongArray;
    .restart local v2    # "delta":Landroid/net/NetworkStats;
    .restart local v5    # "txPackets":Landroid/util/SparseLongArray;
    .restart local v6    # "totalTxPackets":J
    .local v8, "totalRxPackets":J
    .local v23, "elapsedRealtimeMs":J
    :cond_13
    move-object/from16 v35, v2

    move-wide/from16 v38, v8

    move-wide/from16 v14, v23

    .line 11253
    .end local v0    # "rxPackets":Landroid/util/SparseLongArray;
    .end local v2    # "delta":Landroid/net/NetworkStats;
    .end local v5    # "txPackets":Landroid/util/SparseLongArray;
    .end local v6    # "totalTxPackets":J
    .end local v8    # "totalRxPackets":J
    .end local v23    # "elapsedRealtimeMs":J
    .restart local v35    # "delta":Landroid/net/NetworkStats;
    :goto_b
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11254
    return-void

    .line 11253
    :catchall_1
    move-exception v0

    move-object/from16 v2, v35

    goto :goto_c

    .end local v35    # "delta":Landroid/net/NetworkStats;
    .restart local v2    # "delta":Landroid/net/NetworkStats;
    :catchall_2
    move-exception v0

    :goto_c
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v0

    .line 11001
    :catchall_3
    move-exception v0

    :try_start_5
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    throw v0
.end method

.method public blacklist writeAsyncLocked()V
    .locals 1

    .line 13575
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeStatsLocked(Z)V

    .line 13576
    invoke-virtual {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeHistoryLocked(Z)V

    .line 13577
    return-void
.end method

.method blacklist writeHistoryBuffer(Landroid/os/Parcel;ZZ)V
    .locals 4
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclData"    # Z
    .param p3, "andOldHistory"    # Z

    .line 13827
    const/16 v0, 0xbb

    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 13828
    iget-wide v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBaseTime:J

    iget-wide v2, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    add-long/2addr v0, v2

    invoke-virtual {p1, v0, v1}, Landroid/os/Parcel;->writeLong(J)V

    .line 13829
    const/4 v0, 0x0

    if-nez p2, :cond_0

    .line 13830
    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 13831
    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 13832
    return-void

    .line 13835
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    move-result v1

    invoke-virtual {p1, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 13838
    iget-object v1, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    move-result v2

    invoke-virtual {p1, v1, v0, v2}, Landroid/os/Parcel;->appendFrom(Landroid/os/Parcel;II)V

    .line 13840
    if-eqz p3, :cond_1

    .line 13841
    invoke-virtual {p0, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeOldHistory(Landroid/os/Parcel;)V

    .line 13843
    :cond_1
    return-void
.end method

.method public blacklist writeHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;Landroid/os/BatteryStats$HistoryItem;)V
    .locals 21
    .param p1, "dest"    # Landroid/os/Parcel;
    .param p2, "cur"    # Landroid/os/BatteryStats$HistoryItem;
    .param p3, "last"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3262
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    if-eqz v3, :cond_21

    iget-byte v5, v2, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    if-eqz v5, :cond_0

    goto/16 :goto_d

    .line 3268
    :cond_0
    iget-wide v5, v2, Landroid/os/BatteryStats$HistoryItem;->time:J

    iget-wide v7, v3, Landroid/os/BatteryStats$HistoryItem;->time:J

    sub-long/2addr v5, v7

    .line 3269
    .local v5, "deltaTime":J
    invoke-direct {v0, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v7

    .line 3270
    .local v7, "lastBatteryLevelInt":I
    invoke-direct {v0, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v8

    .line 3273
    .local v8, "lastStateInt":I
    const-wide/16 v9, 0x0

    cmp-long v9, v5, v9

    if-ltz v9, :cond_3

    const-wide/32 v9, 0x7fffffff

    cmp-long v9, v5, v9

    if-lez v9, :cond_1

    goto :goto_0

    .line 3275
    :cond_1
    const-wide/32 v9, 0x7fffd

    cmp-long v9, v5, v9

    if-ltz v9, :cond_2

    .line 3276
    const v9, 0x7fffe

    .local v9, "deltaTimeToken":I
    goto :goto_1

    .line 3278
    .end local v9    # "deltaTimeToken":I
    :cond_2
    long-to-int v9, v5

    .restart local v9    # "deltaTimeToken":I
    goto :goto_1

    .line 3274
    .end local v9    # "deltaTimeToken":I
    :cond_3
    :goto_0
    const v9, 0x7ffff

    .line 3280
    .restart local v9    # "deltaTimeToken":I
    :goto_1
    iget v10, v2, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v11, -0x2000000

    and-int/2addr v10, v11

    or-int/2addr v10, v9

    .line 3281
    .local v10, "firstToken":I
    iget-byte v11, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepLevel:B

    iget-byte v12, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-le v11, v12, :cond_4

    .line 3282
    const/4 v11, 0x1

    goto :goto_2

    :cond_4
    const/4 v11, 0x0

    .line 3283
    .local v11, "includeStepDetails":I
    :goto_2
    if-nez v11, :cond_6

    iget-object v12, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    if-nez v12, :cond_5

    goto :goto_3

    :cond_5
    const/4 v12, 0x0

    goto :goto_4

    :cond_6
    :goto_3
    const/4 v12, 0x1

    .line 3285
    .local v12, "computeStepDetails":Z
    :goto_4
    invoke-direct {v0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v14

    or-int/2addr v14, v11

    .line 3286
    .local v14, "batteryLevelInt":I
    if-eq v14, v7, :cond_7

    const/4 v15, 0x1

    goto :goto_5

    :cond_7
    const/4 v15, 0x0

    .line 3287
    .local v15, "batteryLevelIntChanged":Z
    :goto_5
    if-eqz v15, :cond_8

    .line 3288
    const/high16 v16, 0x80000

    or-int v10, v10, v16

    .line 3290
    :cond_8
    invoke-direct {v0, v2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v13

    .line 3291
    .local v13, "stateInt":I
    if-eq v13, v8, :cond_9

    const/16 v17, 0x1

    goto :goto_6

    :cond_9
    const/16 v17, 0x0

    .line 3292
    .local v17, "stateIntChanged":Z
    :goto_6
    if-eqz v17, :cond_a

    .line 3293
    const/high16 v18, 0x100000

    or-int v10, v10, v18

    .line 3295
    :cond_a
    iget v4, v2, Landroid/os/BatteryStats$HistoryItem;->states2:I

    move/from16 v19, v7

    .end local v7    # "lastBatteryLevelInt":I
    .local v19, "lastBatteryLevelInt":I
    iget v7, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    if-eq v4, v7, :cond_b

    const/4 v4, 0x1

    goto :goto_7

    :cond_b
    const/4 v4, 0x0

    .line 3296
    .local v4, "state2IntChanged":Z
    :goto_7
    if-eqz v4, :cond_c

    .line 3297
    const/high16 v7, 0x200000

    or-int/2addr v10, v7

    .line 3299
    :cond_c
    iget-object v7, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-nez v7, :cond_d

    iget-object v7, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v7, :cond_e

    .line 3300
    :cond_d
    const/high16 v7, 0x400000

    or-int/2addr v10, v7

    .line 3302
    :cond_e
    iget v7, v2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v7, :cond_f

    .line 3303
    const/high16 v7, 0x800000

    or-int/2addr v10, v7

    .line 3306
    :cond_f
    iget v7, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    move/from16 v20, v8

    .end local v8    # "lastStateInt":I
    .local v20, "lastStateInt":I
    iget v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    if-eq v7, v8, :cond_10

    const/16 v16, 0x1

    goto :goto_8

    :cond_10
    const/16 v16, 0x0

    :goto_8
    move/from16 v7, v16

    .line 3307
    .local v7, "batteryChargeChanged":Z
    if-eqz v7, :cond_11

    .line 3308
    const/high16 v8, 0x1000000

    or-int/2addr v10, v8

    .line 3310
    :cond_11
    invoke-virtual {v1, v10}, Landroid/os/Parcel;->writeInt(I)V

    .line 3314
    const v8, 0x7fffe

    if-lt v9, v8, :cond_13

    .line 3315
    if-ne v9, v8, :cond_12

    .line 3317
    long-to-int v8, v5

    invoke-virtual {v1, v8}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_9

    .line 3320
    :cond_12
    invoke-virtual {v1, v5, v6}, Landroid/os/Parcel;->writeLong(J)V

    .line 3323
    :cond_13
    :goto_9
    if-eqz v15, :cond_14

    .line 3324
    invoke-virtual {v1, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 3331
    :cond_14
    if-eqz v17, :cond_15

    .line 3332
    invoke-virtual {v1, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 3340
    :cond_15
    if-eqz v4, :cond_16

    .line 3341
    iget v8, v2, Landroid/os/BatteryStats$HistoryItem;->states2:I

    invoke-virtual {v1, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 3345
    :cond_16
    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-nez v8, :cond_17

    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v8, :cond_1a

    .line 3348
    :cond_17
    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v8, :cond_18

    .line 3349
    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v0, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    move-result v8

    .local v8, "wakeLockIndex":I
    goto :goto_a

    .line 3353
    .end local v8    # "wakeLockIndex":I
    :cond_18
    const v8, 0xffff

    .line 3355
    .restart local v8    # "wakeLockIndex":I
    :goto_a
    iget-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v3, :cond_19

    .line 3356
    iget-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v0, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    move-result v3

    .local v3, "wakeReasonIndex":I
    goto :goto_b

    .line 3360
    .end local v3    # "wakeReasonIndex":I
    :cond_19
    const v3, 0xffff

    .line 3362
    .restart local v3    # "wakeReasonIndex":I
    :goto_b
    shl-int/lit8 v16, v3, 0x10

    move/from16 v18, v3

    .end local v3    # "wakeReasonIndex":I
    .local v18, "wakeReasonIndex":I
    or-int v3, v16, v8

    invoke-virtual {v1, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 3364
    .end local v8    # "wakeLockIndex":I
    .end local v18    # "wakeReasonIndex":I
    :cond_1a
    iget v3, v2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v3, :cond_1b

    .line 3365
    iget-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v0, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    move-result v3

    .line 3366
    .local v3, "index":I
    iget v8, v2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    const v16, 0xffff

    and-int v8, v8, v16

    shl-int/lit8 v16, v3, 0x10

    or-int v8, v8, v16

    .line 3367
    .local v8, "codeAndIndex":I
    invoke-virtual {v1, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 3372
    .end local v3    # "index":I
    .end local v8    # "codeAndIndex":I
    :cond_1b
    if-eqz v12, :cond_1e

    .line 3373
    iget-object v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;

    if-eqz v8, :cond_1c

    .line 3374
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3375
    invoke-interface {v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;->getPlatformLowPowerStats()Ljava/lang/String;

    move-result-object v8

    iput-object v8, v3, Landroid/os/BatteryStats$HistoryStepDetails;->statPlatformIdleState:Ljava/lang/String;

    .line 3379
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iget-object v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;

    .line 3380
    invoke-interface {v8}, Lcom/android/internal/os/OppoBatteryStatsImpl$PlatformIdleStateCallback;->getSubsystemLowPowerStats()Ljava/lang/String;

    move-result-object v8

    iput-object v8, v3, Landroid/os/BatteryStats$HistoryStepDetails;->statSubsystemPowerState:Ljava/lang/String;

    .line 3385
    :cond_1c
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iget-object v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v0, v3, v8}, Lcom/android/internal/os/OppoBatteryStatsImpl;->computeHistoryStepDetails(Landroid/os/BatteryStats$HistoryStepDetails;Landroid/os/BatteryStats$HistoryStepDetails;)V

    .line 3386
    if-eqz v11, :cond_1d

    .line 3387
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-virtual {v3, v1}, Landroid/os/BatteryStats$HistoryStepDetails;->writeToParcel(Landroid/os/Parcel;)V

    .line 3389
    :cond_1d
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iput-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3390
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iput-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    const/4 v3, 0x0

    goto :goto_c

    .line 3392
    :cond_1e
    const/4 v3, 0x0

    iput-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3394
    :goto_c
    iget-byte v8, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepLevel:B

    iget-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-ge v8, v3, :cond_1f

    .line 3395
    const/4 v3, 0x0

    iput-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3397
    :cond_1f
    iget-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput-byte v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 3399
    if-eqz v7, :cond_20

    .line 3401
    iget v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    invoke-virtual {v1, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 3403
    :cond_20
    move v8, v4

    .end local v4    # "state2IntChanged":Z
    .local v8, "state2IntChanged":Z
    iget-wide v3, v2, Landroid/os/BatteryStats$HistoryItem;->modemRailChargeMah:D

    invoke-virtual {v1, v3, v4}, Landroid/os/Parcel;->writeDouble(D)V

    .line 3404
    iget-wide v3, v2, Landroid/os/BatteryStats$HistoryItem;->wifiRailChargeMah:D

    invoke-virtual {v1, v3, v4}, Landroid/os/Parcel;->writeDouble(D)V

    .line 3405
    return-void

    .line 3263
    .end local v5    # "deltaTime":J
    .end local v7    # "batteryChargeChanged":Z
    .end local v8    # "state2IntChanged":Z
    .end local v9    # "deltaTimeToken":I
    .end local v10    # "firstToken":I
    .end local v11    # "includeStepDetails":I
    .end local v12    # "computeStepDetails":Z
    .end local v13    # "stateInt":I
    .end local v14    # "batteryLevelInt":I
    .end local v15    # "batteryLevelIntChanged":Z
    .end local v17    # "stateIntChanged":Z
    .end local v19    # "lastBatteryLevelInt":I
    .end local v20    # "lastStateInt":I
    :cond_21
    :goto_d
    const v3, 0x7fffd

    invoke-virtual {v1, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 3264
    const/4 v3, 0x0

    invoke-virtual {v2, v1, v3}, Landroid/os/BatteryStats$HistoryItem;->writeToParcel(Landroid/os/Parcel;I)V

    .line 3265
    return-void
.end method

.method blacklist writeHistoryLocked(Z)V
    .locals 4
    .param p1, "sync"    # Z

    .line 13607
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/OppoBatteryStatsHistory;->getActiveFile()Landroid/util/AtomicFile;

    move-result-object v0

    if-nez v0, :cond_0

    .line 13608
    const-string v0, "OppoBatteryStatsImpl"

    const-string/jumbo v1, "writeHistoryLocked: no history file associated with this instance"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13610
    return-void

    .line 13613
    :cond_0
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mShuttingDown:Z

    if-eqz v0, :cond_1

    .line 13614
    return-void

    .line 13617
    :cond_1
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    .line 13618
    .local v0, "p":Landroid/os/Parcel;
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 13619
    .local v1, "start":J
    const/4 v3, 0x1

    invoke-virtual {p0, v0, v3, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeHistoryBuffer(Landroid/os/Parcel;ZZ)V

    .line 13624
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsHistory;->getActiveFile()Landroid/util/AtomicFile;

    move-result-object v3

    invoke-virtual {p0, v0, v3, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeParcelToFileLocked(Landroid/os/Parcel;Landroid/util/AtomicFile;Z)V

    .line 13625
    return-void
.end method

.method blacklist writeOldHistory(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "out"    # Landroid/os/Parcel;

    .line 13847
    return-void
.end method

.method blacklist writeParcelToFileLocked(Landroid/os/Parcel;Landroid/util/AtomicFile;Z)V
    .locals 2
    .param p1, "p"    # Landroid/os/Parcel;
    .param p2, "file"    # Landroid/util/AtomicFile;
    .param p3, "sync"    # Z

    .line 13628
    if-eqz p3, :cond_0

    .line 13629
    invoke-direct {p0, p1, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->commitPendingDataToDisk(Landroid/os/Parcel;Landroid/util/AtomicFile;)V

    goto :goto_0

    .line 13631
    :cond_0
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/internal/os/OppoBatteryStatsImpl$5;

    invoke-direct {v1, p0, p1, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl$5;-><init>(Lcom/android/internal/os/OppoBatteryStatsImpl;Landroid/os/Parcel;Landroid/util/AtomicFile;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 13637
    :goto_0
    return-void
.end method

.method blacklist writeStatsLocked(Z)V
    .locals 5
    .param p1, "sync"    # Z

    .line 13585
    iget-object v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    if-nez v0, :cond_0

    .line 13586
    const-string v0, "OppoBatteryStatsImpl"

    const-string/jumbo v1, "writeStatsLocked: no file associated with this instance"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13588
    return-void

    .line 13591
    :cond_0
    iget-boolean v0, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mShuttingDown:Z

    if-eqz v0, :cond_1

    .line 13592
    return-void

    .line 13595
    :cond_1
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    .line 13596
    .local v0, "p":Landroid/os/Parcel;
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 13597
    .local v1, "start":J
    const/4 v3, 0x0

    invoke-virtual {p0, v0, v3}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeSummaryToParcel(Landroid/os/Parcel;Z)V

    .line 13602
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    iput-wide v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWriteTime:J

    .line 13603
    iget-object v3, p0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    invoke-virtual {p0, v0, v3, p1}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeParcelToFileLocked(Landroid/os/Parcel;Landroid/util/AtomicFile;Z)V

    .line 13604
    return-void
.end method

.method public blacklist writeSummaryToParcel(Landroid/os/Parcel;Z)V
    .locals 26
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclHistory"    # Z

    .line 14368
    move-object/from16 v0, p0

    move-object/from16 v7, p1

    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 14372
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getStartClockTime()J

    .line 14374
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long v8, v1, v3

    .line 14375
    .local v8, "NOW_SYS":J
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    mul-long v10, v1, v3

    .line 14377
    .local v10, "NOWREAL_SYS":J
    const/16 v1, 0xbb

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14379
    invoke-virtual/range {p1 .. p2}, Landroid/os/Parcel;->writeBoolean(Z)V

    .line 14380
    const/4 v12, 0x1

    if-eqz p2, :cond_0

    .line 14381
    invoke-virtual {v0, v7, v12, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeHistoryBuffer(Landroid/os/Parcel;ZZ)V

    .line 14382
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsHistory;->writeToParcel(Landroid/os/Parcel;)V

    .line 14385
    :cond_0
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14386
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14387
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$HistoryTag;

    .line 14388
    .local v3, "tag":Landroid/os/BatteryStats$HistoryTag;
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14389
    iget-object v4, v3, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14390
    iget v4, v3, Landroid/os/BatteryStats$HistoryTag;->uid:I

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14391
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    .end local v3    # "tag":Landroid/os/BatteryStats$HistoryTag;
    goto :goto_0

    .line 14393
    :cond_1
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartCount:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14394
    const/4 v13, 0x0

    invoke-virtual {v0, v8, v9, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl;->computeUptime(JI)J

    move-result-wide v1

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14395
    invoke-virtual {v0, v10, v11, v13}, Lcom/android/internal/os/OppoBatteryStatsImpl;->computeRealtime(JI)J

    move-result-wide v1

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14396
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartClockTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14397
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14398
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14399
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object/from16 v2, p1

    move-wide v3, v8

    move-wide v5, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14400
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14401
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14402
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargePlugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14403
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14404
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurrentBatteryLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14405
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14406
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14407
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14408
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14409
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14410
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getDischargeAmountScreenOnSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14411
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getDischargeAmountScreenOffSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14412
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getDischargeAmountScreenDozeSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14413
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14414
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14415
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14416
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14417
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14418
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14419
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14420
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14421
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14422
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-eqz v1, :cond_3

    .line 14423
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 14424
    .local v1, "NPKG":I
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14425
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v1, :cond_2

    .line 14426
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$PackageChange;

    .line 14427
    .local v3, "pc":Landroid/os/BatteryStats$PackageChange;
    iget-object v4, v3, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14428
    iget-boolean v4, v3, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14429
    iget-wide v4, v3, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    invoke-virtual {v7, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    .line 14425
    .end local v3    # "pc":Landroid/os/BatteryStats$PackageChange;
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 14431
    .end local v1    # "NPKG":I
    .end local v2    # "i":I
    :cond_2
    goto :goto_2

    .line 14432
    :cond_3
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14434
    :goto_2
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDailyStartTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14435
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMinDailyDeadline:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14436
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNextMaxDailyDeadline:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14438
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14439
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14440
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_3
    const/4 v14, 0x5

    if-ge v1, v14, :cond_4

    .line 14441
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14440
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 14443
    .end local v1    # "i":I
    :cond_4
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14444
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14445
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestLightIdleTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14446
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestFullIdleTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14447
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14448
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14449
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14450
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14451
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14452
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_4
    if-ge v1, v14, :cond_5

    .line 14453
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14452
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 14455
    .end local v1    # "i":I
    :cond_5
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14456
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_5
    sget v2, Lcom/android/internal/os/OppoBatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v1, v2, :cond_6

    .line 14457
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14456
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 14459
    .end local v1    # "i":I
    :cond_6
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_6
    const/16 v15, 0xa

    if-ge v1, v15, :cond_7

    .line 14460
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14461
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14459
    add-int/lit8 v1, v1, 0x1

    goto :goto_6

    .line 14463
    .end local v1    # "i":I
    :cond_7
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14464
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14465
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14466
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14467
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14468
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14469
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14470
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14471
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_7
    const/16 v2, 0x8

    if-ge v1, v2, :cond_8

    .line 14472
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14471
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 14474
    .end local v1    # "i":I
    :cond_8
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_8
    const/16 v2, 0xd

    if-ge v1, v2, :cond_9

    .line 14475
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14474
    add-int/lit8 v1, v1, 0x1

    goto :goto_8

    .line 14477
    .end local v1    # "i":I
    :cond_9
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_9
    if-ge v1, v14, :cond_a

    .line 14478
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14477
    add-int/lit8 v1, v1, 0x1

    goto :goto_9

    .line 14480
    .end local v1    # "i":I
    :cond_a
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14481
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    .line 14482
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_a
    const/4 v2, 0x2

    if-ge v1, v2, :cond_b

    .line 14483
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14482
    add-int/lit8 v1, v1, 0x1

    goto :goto_a

    .line 14485
    .end local v1    # "i":I
    :cond_b
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    .line 14486
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    .line 14487
    iget-boolean v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasWifiReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14488
    iget-boolean v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasBluetoothReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14489
    iget-boolean v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasModemReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14491
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumConnectivityChange:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14492
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14493
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14494
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14496
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14497
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_b
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14498
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;

    .line 14499
    .local v3, "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    if-eqz v3, :cond_c

    .line 14500
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14501
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14502
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_c

    .line 14504
    :cond_c
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14506
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    :goto_c
    goto :goto_b

    .line 14507
    :cond_d
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14508
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_d
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_f

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14509
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;

    .line 14510
    .restart local v3    # "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    if-eqz v3, :cond_e

    .line 14511
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14512
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14513
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_e

    .line 14515
    :cond_e
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14517
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    :goto_e
    goto :goto_d

    .line 14519
    :cond_f
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14520
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_f
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_11

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14521
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;

    .line 14522
    .local v3, "kwlt":Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    if-eqz v3, :cond_10

    .line 14523
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14524
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14525
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_10

    .line 14527
    :cond_10
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14529
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "kwlt":Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    :goto_10
    goto :goto_f

    .line 14531
    :cond_11
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14532
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_11
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_13

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14533
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 14534
    .local v3, "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_12

    .line 14535
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14536
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14537
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_12

    .line 14539
    :cond_12
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14541
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :goto_12
    goto :goto_11

    .line 14543
    :cond_13
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14544
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_13
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2}, Landroid/util/LongSparseArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_15

    .line 14545
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2, v1}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;

    .line 14546
    .local v2, "kmt":Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    if-eqz v2, :cond_14

    .line 14547
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14548
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v3, v1}, Landroid/util/LongSparseArray;->keyAt(I)J

    move-result-wide v3

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 14549
    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_14

    .line 14551
    :cond_14
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14544
    .end local v2    # "kmt":Lcom/android/internal/os/OppoBatteryStatsImpl$Timer;
    :goto_14
    add-int/lit8 v1, v1, 0x1

    goto :goto_13

    .line 14555
    .end local v1    # "i":I
    :cond_15
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v5

    .line 14556
    .local v5, "NU":I
    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14557
    const/4 v1, 0x0

    move v6, v1

    .local v6, "iu":I
    :goto_15
    if-ge v6, v5, :cond_49

    .line 14558
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v6}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14559
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    move-object v3, v1

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 14561
    .local v3, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    iget-object v1, v3, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mOnBatteryBackgroundTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object/from16 v2, p1

    move-object v15, v3

    .end local v3    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .local v15, "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    move-wide v3, v8

    move/from16 v16, v5

    move/from16 v17, v6

    .end local v5    # "NU":I
    .end local v6    # "iu":I
    .local v16, "NU":I
    .local v17, "iu":I
    move-wide v5, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14562
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mOnBatteryScreenOffBackgroundTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14564
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_16

    .line 14565
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14566
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_16

    .line 14568
    :cond_16
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14570
    :goto_16
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_17

    .line 14571
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14572
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_17

    .line 14574
    :cond_17
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14576
    :goto_17
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_18

    .line 14577
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14578
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_18

    .line 14580
    :cond_18
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14582
    :goto_18
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_19
    if-ge v1, v14, :cond_1a

    .line 14583
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    if-eqz v2, :cond_19

    .line 14584
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14585
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1a

    .line 14587
    :cond_19
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14582
    :goto_1a
    add-int/lit8 v1, v1, 0x1

    goto :goto_19

    .line 14590
    .end local v1    # "i":I
    :cond_1a
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1b

    .line 14591
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14592
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1b

    .line 14594
    :cond_1b
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14596
    :goto_1b
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1c

    .line 14597
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14598
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1c

    .line 14600
    :cond_1c
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14602
    :goto_1c
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mVideoTurnedOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1d

    .line 14603
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14604
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mVideoTurnedOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1d

    .line 14606
    :cond_1d
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14608
    :goto_1d
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mFlashlightTurnedOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1e

    .line 14609
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14610
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mFlashlightTurnedOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1e

    .line 14612
    :cond_1e
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14614
    :goto_1e
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCameraTurnedOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1f

    .line 14615
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14616
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCameraTurnedOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1f

    .line 14618
    :cond_1f
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14622
    :goto_1f
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_20

    .line 14623
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14624
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_20

    .line 14626
    :cond_20
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14628
    :goto_20
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mForegroundServiceTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_21

    .line 14629
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14630
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mForegroundServiceTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_21

    .line 14632
    :cond_21
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14634
    :goto_21
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mAggregatedPartialWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_22

    .line 14635
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14636
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mAggregatedPartialWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_22

    .line 14638
    :cond_22
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14640
    :goto_22
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_23

    .line 14641
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14642
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_23

    .line 14644
    :cond_23
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14646
    :goto_23
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothUnoptimizedScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_24

    .line 14647
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14648
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothUnoptimizedScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_24

    .line 14650
    :cond_24
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14652
    :goto_24
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothScanResultCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    if-eqz v1, :cond_25

    .line 14653
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14654
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothScanResultCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_25

    .line 14656
    :cond_25
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14658
    :goto_25
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothScanResultBgCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    if-eqz v1, :cond_26

    .line 14659
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14660
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mBluetoothScanResultBgCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_26

    .line 14662
    :cond_26
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14664
    :goto_26
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_27
    const/4 v2, 0x7

    if-ge v1, v2, :cond_28

    .line 14665
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    if-eqz v2, :cond_27

    .line 14666
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14667
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_28

    .line 14669
    :cond_27
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14664
    :goto_28
    add-int/lit8 v1, v1, 0x1

    goto :goto_27

    .line 14674
    .end local v1    # "i":I
    :cond_28
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mVibratorOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$BatchTimer;

    if-eqz v1, :cond_29

    .line 14675
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14676
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mVibratorOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$BatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$BatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_29

    .line 14678
    :cond_29
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14681
    :goto_29
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    if-nez v1, :cond_2a

    .line 14682
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_2b

    .line 14684
    :cond_2a
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14685
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_2a
    sget v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->NUM_USER_ACTIVITY_TYPES:I

    if-ge v1, v2, :cond_2b

    .line 14686
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14685
    add-int/lit8 v1, v1, 0x1

    goto :goto_2a

    .line 14690
    .end local v1    # "i":I
    :cond_2b
    :goto_2b
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    if-nez v1, :cond_2c

    .line 14691
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    const/16 v2, 0xa

    goto :goto_2d

    .line 14693
    :cond_2c
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14694
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_2c
    const/16 v2, 0xa

    if-ge v1, v2, :cond_2d

    .line 14695
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14696
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14694
    add-int/lit8 v1, v1, 0x1

    goto :goto_2c

    .line 14698
    .end local v1    # "i":I
    :cond_2d
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mMobileRadioActiveTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14699
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mMobileRadioActiveCount:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14702
    :goto_2d
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14703
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14705
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    if-eqz v1, :cond_31

    .line 14706
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14707
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14708
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    array-length v3, v1

    move v4, v13

    :goto_2e
    if-ge v4, v3, :cond_32

    aget-object v5, v1, v4

    .line 14709
    .local v5, "cpuSpeeds":[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;
    if-eqz v5, :cond_2f

    .line 14710
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14711
    array-length v6, v5

    invoke-virtual {v7, v6}, Landroid/os/Parcel;->writeInt(I)V

    .line 14712
    array-length v6, v5

    move v2, v13

    :goto_2f
    if-ge v2, v6, :cond_30

    aget-object v14, v5, v2

    .line 14713
    .local v14, "c":Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;
    if-eqz v14, :cond_2e

    .line 14714
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14715
    invoke-virtual {v14, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_30

    .line 14717
    :cond_2e
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14712
    .end local v14    # "c":Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;
    :goto_30
    add-int/lit8 v2, v2, 0x1

    const/4 v14, 0x5

    goto :goto_2f

    .line 14721
    :cond_2f
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14708
    .end local v5    # "cpuSpeeds":[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;
    :cond_30
    add-int/lit8 v4, v4, 0x1

    const/16 v2, 0xa

    const/4 v14, 0x5

    goto :goto_2e

    .line 14725
    :cond_31
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14729
    :cond_32
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v7, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14730
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v7, v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14732
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14733
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->access$2600(Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;Landroid/os/Parcel;)V

    .line 14736
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v1, :cond_33

    .line 14737
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14738
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    array-length v2, v1

    move v3, v13

    :goto_31
    if-ge v3, v2, :cond_34

    aget-object v4, v1, v3

    .line 14739
    .local v4, "counters":Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;
    invoke-static {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14738
    .end local v4    # "counters":Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;
    add-int/lit8 v3, v3, 0x1

    goto :goto_31

    .line 14742
    :cond_33
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14744
    :cond_34
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v1, :cond_35

    .line 14745
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14746
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;

    array-length v2, v1

    move v3, v13

    :goto_32
    if-ge v3, v2, :cond_36

    aget-object v4, v1, v3

    .line 14747
    .restart local v4    # "counters":Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;
    invoke-static {v7, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14746
    .end local v4    # "counters":Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounterArray;
    add-int/lit8 v3, v3, 0x1

    goto :goto_32

    .line 14750
    :cond_35
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14753
    :cond_36
    invoke-static {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2400(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    if-eqz v1, :cond_37

    .line 14754
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14755
    invoke-static {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2400(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_33

    .line 14757
    :cond_37
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14760
    :goto_33
    invoke-static {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2500(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    if-eqz v1, :cond_38

    .line 14761
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14762
    invoke-static {v15}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->access$2500(Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;)Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_34

    .line 14764
    :cond_38
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14767
    :goto_34
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mWakelockStats:Lcom/android/internal/os/OppoBatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    .line 14768
    .local v1, "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;>;"
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v2

    .line 14769
    .local v2, "NW":I
    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14770
    const/4 v3, 0x0

    .local v3, "iw":I
    :goto_35
    if-ge v3, v2, :cond_3d

    .line 14771
    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14772
    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;

    .line 14773
    .local v4, "wl":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;
    iget-object v5, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;->mTimerFull:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v5, :cond_39

    .line 14774
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14775
    iget-object v5, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;->mTimerFull:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_36

    .line 14777
    :cond_39
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14779
    :goto_36
    iget-object v5, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;->mTimerPartial:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    if-eqz v5, :cond_3a

    .line 14780
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14781
    iget-object v5, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;->mTimerPartial:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    invoke-virtual {v5, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_37

    .line 14783
    :cond_3a
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14785
    :goto_37
    iget-object v5, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;->mTimerWindow:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v5, :cond_3b

    .line 14786
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14787
    iget-object v5, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;->mTimerWindow:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_38

    .line 14789
    :cond_3b
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14791
    :goto_38
    iget-object v5, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;->mTimerDraw:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    if-eqz v5, :cond_3c

    .line 14792
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14793
    iget-object v5, v4, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;->mTimerDraw:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_39

    .line 14795
    :cond_3c
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14770
    .end local v4    # "wl":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;
    :goto_39
    add-int/lit8 v3, v3, 0x1

    goto :goto_35

    .line 14799
    .end local v3    # "iw":I
    :cond_3d
    iget-object v3, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mSyncStats:Lcom/android/internal/os/OppoBatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v3}, Lcom/android/internal/os/OppoBatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v3

    .line 14800
    .local v3, "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;>;"
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v4

    .line 14801
    .local v4, "NS":I
    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14802
    const/4 v5, 0x0

    .local v5, "is":I
    :goto_3a
    if-ge v5, v4, :cond_3e

    .line 14803
    invoke-virtual {v3, v5}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    invoke-virtual {v7, v6}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14804
    invoke-virtual {v3, v5}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    invoke-virtual {v6, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14802
    add-int/lit8 v5, v5, 0x1

    goto :goto_3a

    .line 14807
    .end local v5    # "is":I
    :cond_3e
    iget-object v5, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobStats:Lcom/android/internal/os/OppoBatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v5}, Lcom/android/internal/os/OppoBatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v5

    .line 14808
    .local v5, "jobStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;>;"
    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    move-result v6

    .line 14809
    .local v6, "NJ":I
    invoke-virtual {v7, v6}, Landroid/os/Parcel;->writeInt(I)V

    .line 14810
    const/4 v14, 0x0

    .local v14, "ij":I
    :goto_3b
    if-ge v14, v6, :cond_3f

    .line 14811
    invoke-virtual {v5, v14}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v18

    move-object/from16 v13, v18

    check-cast v13, Ljava/lang/String;

    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14812
    invoke-virtual {v5, v14}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    invoke-virtual {v13, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14810
    add-int/lit8 v14, v14, 0x1

    const/4 v13, 0x0

    goto :goto_3b

    .line 14815
    .end local v14    # "ij":I
    :cond_3f
    invoke-virtual {v15, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->writeJobCompletionsToParcelLocked(Landroid/os/Parcel;)V

    .line 14817
    iget-object v13, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobsDeferredEventCount:Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    invoke-virtual {v13, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14818
    iget-object v13, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobsDeferredCount:Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    invoke-virtual {v13, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14819
    iget-object v13, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobsFreshnessTimeMs:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v13, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14820
    const/4 v13, 0x0

    .local v13, "i":I
    :goto_3c
    sget-object v14, Lcom/android/internal/os/OppoBatteryStatsImpl;->JOB_FRESHNESS_BUCKETS:[J

    array-length v14, v14

    if-ge v13, v14, :cond_41

    .line 14821
    iget-object v14, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    aget-object v14, v14, v13

    if-eqz v14, :cond_40

    .line 14822
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14823
    iget-object v14, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    aget-object v14, v14, v13

    invoke-virtual {v14, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_3d

    .line 14825
    :cond_40
    const/4 v14, 0x0

    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 14820
    :goto_3d
    add-int/lit8 v13, v13, 0x1

    goto :goto_3c

    .line 14829
    .end local v13    # "i":I
    :cond_41
    iget-object v13, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v13

    .line 14830
    .local v13, "NSE":I
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14831
    const/4 v14, 0x0

    .local v14, "ise":I
    :goto_3e
    if-ge v14, v13, :cond_43

    .line 14832
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v14}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v12

    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14833
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Sensor;

    .line 14834
    .local v12, "se":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Sensor;
    move-object/from16 v19, v1

    .end local v1    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;>;"
    .local v19, "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;>;"
    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Sensor;->mTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_42

    .line 14835
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14836
    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Sensor;->mTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    const/4 v1, 0x0

    goto :goto_3f

    .line 14838
    :cond_42
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14831
    .end local v12    # "se":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Sensor;
    :goto_3f
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v1, v19

    const/4 v12, 0x1

    goto :goto_3e

    .end local v19    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;>;"
    .restart local v1    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;>;"
    :cond_43
    move-object/from16 v19, v1

    const/4 v1, 0x0

    .line 14842
    .end local v1    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;>;"
    .end local v14    # "ise":I
    .restart local v19    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;>;"
    iget-object v12, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v12}, Landroid/util/ArrayMap;->size()I

    move-result v12

    .line 14843
    .local v12, "NP":I
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14844
    const/4 v14, 0x0

    .local v14, "ip":I
    :goto_40
    if-ge v14, v12, :cond_44

    .line 14845
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v1, v14}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14846
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v1, v14}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;

    .line 14847
    .local v1, "ps":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;
    move/from16 v20, v2

    move-object/from16 v21, v3

    .end local v2    # "NW":I
    .end local v3    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;>;"
    .local v20, "NW":I
    .local v21, "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;>;"
    iget-wide v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mUserTime:J

    invoke-virtual {v7, v2, v3}, Landroid/os/Parcel;->writeLong(J)V

    .line 14848
    iget-wide v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mSystemTime:J

    invoke-virtual {v7, v2, v3}, Landroid/os/Parcel;->writeLong(J)V

    .line 14849
    iget-wide v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mForegroundTime:J

    invoke-virtual {v7, v2, v3}, Landroid/os/Parcel;->writeLong(J)V

    .line 14850
    iget v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mStarts:I

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14851
    iget v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mNumCrashes:I

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14852
    iget v2, v1, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->mNumAnrs:I

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14853
    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;->writeExcessivePowerToParcelLocked(Landroid/os/Parcel;)V

    .line 14844
    .end local v1    # "ps":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Proc;
    add-int/lit8 v14, v14, 0x1

    move/from16 v2, v20

    move-object/from16 v3, v21

    const/4 v1, 0x0

    goto :goto_40

    .end local v20    # "NW":I
    .end local v21    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;>;"
    .restart local v2    # "NW":I
    .restart local v3    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;>;"
    :cond_44
    move/from16 v20, v2

    move-object/from16 v21, v3

    .line 14856
    .end local v2    # "NW":I
    .end local v3    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;>;"
    .end local v14    # "ip":I
    .restart local v20    # "NW":I
    .restart local v21    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;>;"
    iget-object v1, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    .line 14857
    .end local v12    # "NP":I
    .local v1, "NP":I
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14858
    if-lez v1, :cond_48

    .line 14860
    iget-object v2, v15, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    invoke-virtual {v2}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_41
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_47

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    .line 14861
    .local v3, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;>;"
    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Ljava/lang/String;

    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14862
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;

    .line 14863
    .local v12, "ps":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    iget-object v14, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v14}, Landroid/util/ArrayMap;->size()I

    move-result v14

    .line 14864
    .local v14, "NWA":I
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 14865
    const/16 v22, 0x0

    move/from16 v23, v1

    move/from16 v1, v22

    .local v1, "iwa":I
    .local v23, "NP":I
    :goto_42
    if-ge v1, v14, :cond_45

    .line 14866
    move-object/from16 v22, v2

    iget-object v2, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14867
    iget-object v2, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;

    invoke-virtual {v2, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14865
    add-int/lit8 v1, v1, 0x1

    move-object/from16 v2, v22

    goto :goto_42

    :cond_45
    move-object/from16 v22, v2

    .line 14869
    .end local v1    # "iwa":I
    iget-object v1, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v4

    .line 14870
    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14871
    const/4 v1, 0x0

    .local v1, "is":I
    :goto_43
    if-ge v1, v4, :cond_46

    .line 14872
    iget-object v2, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14873
    iget-object v2, v12, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;

    .line 14874
    .local v2, "ss":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;
    move-object/from16 v24, v3

    .end local v3    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;>;"
    .local v24, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;>;"
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    .line 14875
    move/from16 v25, v4

    .end local v4    # "NS":I
    .local v25, "NS":I
    invoke-virtual {v3, v8, v9}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide v3

    .line 14874
    invoke-virtual {v2, v3, v4}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;->getStartTimeToNowLocked(J)J

    move-result-wide v3

    .line 14876
    .local v3, "time":J
    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 14877
    iget v0, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;->mStarts:I

    invoke-virtual {v7, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 14878
    iget v0, v2, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;->mLaunches:I

    invoke-virtual {v7, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 14871
    .end local v2    # "ss":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg$Serv;
    .end local v3    # "time":J
    add-int/lit8 v1, v1, 0x1

    move-object/from16 v0, p0

    move-object/from16 v3, v24

    move/from16 v4, v25

    goto :goto_43

    .end local v24    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;>;"
    .end local v25    # "NS":I
    .local v3, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;>;"
    .restart local v4    # "NS":I
    :cond_46
    move-object/from16 v24, v3

    move/from16 v25, v4

    .line 14880
    .end local v1    # "is":I
    .end local v3    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;>;"
    .end local v4    # "NS":I
    .end local v12    # "ps":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Pkg;
    .end local v14    # "NWA":I
    .restart local v25    # "NS":I
    move-object/from16 v0, p0

    move-object/from16 v2, v22

    move/from16 v1, v23

    goto/16 :goto_41

    .line 14860
    .end local v23    # "NP":I
    .end local v25    # "NS":I
    .local v1, "NP":I
    .restart local v4    # "NS":I
    :cond_47
    move/from16 v23, v1

    .end local v1    # "NP":I
    .restart local v23    # "NP":I
    goto :goto_44

    .line 14858
    .end local v23    # "NP":I
    .restart local v1    # "NP":I
    :cond_48
    move/from16 v23, v1

    .line 14557
    .end local v1    # "NP":I
    .end local v4    # "NS":I
    .end local v5    # "jobStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;>;"
    .end local v6    # "NJ":I
    .end local v13    # "NSE":I
    .end local v15    # "u":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    .end local v19    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$Uid$Wakelock;>;"
    .end local v20    # "NW":I
    .end local v21    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$DualTimer;>;"
    :goto_44
    add-int/lit8 v6, v17, 0x1

    const/4 v12, 0x1

    const/4 v13, 0x0

    const/4 v14, 0x5

    const/16 v15, 0xa

    move-object/from16 v0, p0

    move/from16 v5, v16

    .end local v17    # "iu":I
    .local v6, "iu":I
    goto/16 :goto_15

    .line 14883
    .end local v6    # "iu":I
    .end local v16    # "NU":I
    .local v5, "NU":I
    :cond_49
    return-void
.end method

.method public blacklist writeSyncLocked()V
    .locals 1

    .line 13580
    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeStatsLocked(Z)V

    .line 13581
    invoke-virtual {p0, v0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeHistoryLocked(Z)V

    .line 13582
    return-void
.end method

.method public whitelist test-api writeToParcel(Landroid/os/Parcel;I)V
    .locals 1
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "flags"    # I

    .line 15102
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeToParcelLocked(Landroid/os/Parcel;ZI)V

    .line 15103
    return-void
.end method

.method blacklist writeToParcelLocked(Landroid/os/Parcel;ZI)V
    .locals 19
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclUids"    # Z
    .param p3, "flags"    # I

    .line 15112
    move-object/from16 v0, p0

    move-object/from16 v7, p1

    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 15116
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/OppoBatteryStatsImpl;->getStartClockTime()J

    .line 15118
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long v8, v1, v3

    .line 15119
    .local v8, "uSecUptime":J
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mClocks:Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/OppoBatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    mul-long v10, v1, v3

    .line 15120
    .local v10, "uSecRealtime":J
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->getRealtime(J)J

    move-result-wide v12

    .line 15121
    .local v12, "batteryRealtime":J
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->getRealtime(J)J

    move-result-wide v14

    .line 15123
    .local v14, "batteryScreenOffRealtime":J
    const v1, -0x458a8b8b

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15125
    const/4 v5, 0x1

    const/4 v6, 0x0

    invoke-virtual {v0, v7, v5, v6}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeHistoryBuffer(Landroid/os/Parcel;ZZ)V

    .line 15126
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/OppoBatteryStatsHistory;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsHistory;->writeToParcel(Landroid/os/Parcel;)V

    .line 15128
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartCount:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15129
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartClockTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15130
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15131
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15132
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUptime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15133
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUptimeStart:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15134
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRealtime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15135
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRealtimeStart:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15136
    iget-boolean v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBattery:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15137
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mEstimatedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15138
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15139
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15140
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    move-object/from16 v2, p1

    move-wide v3, v8

    move-wide/from16 v16, v12

    move v13, v5

    move v12, v6

    .end local v12    # "batteryRealtime":J
    .local v16, "batteryRealtime":J
    move-wide v5, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->writeToParcel(Landroid/os/Parcel;JJ)V

    .line 15141
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$TimeBase;->writeToParcel(Landroid/os/Parcel;JJ)V

    .line 15143
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15144
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15145
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    const/4 v2, 0x5

    if-ge v1, v2, :cond_0

    .line 15146
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15145
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 15148
    .end local v1    # "i":I
    :cond_0
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15149
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15150
    iget-wide v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestLightIdleTime:J

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 15151
    iget-wide v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLongestFullIdleTime:J

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 15152
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15153
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15154
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15155
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15156
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15157
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_1
    if-ge v1, v2, :cond_1

    .line 15158
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15157
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 15160
    .end local v1    # "i":I
    :cond_1
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15161
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_2
    sget v3, Lcom/android/internal/os/OppoBatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v1, v3, :cond_2

    .line 15162
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15161
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 15164
    .end local v1    # "i":I
    :cond_2
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_3
    const/16 v3, 0xa

    if-ge v1, v3, :cond_3

    .line 15165
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15166
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15164
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 15168
    .end local v1    # "i":I
    :cond_3
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15169
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15170
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15171
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15172
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15173
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15174
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15175
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15176
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_4
    const/16 v3, 0x8

    if-ge v1, v3, :cond_4

    .line 15177
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15176
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 15179
    .end local v1    # "i":I
    :cond_4
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_5
    const/16 v3, 0xd

    if-ge v1, v3, :cond_5

    .line 15180
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15179
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 15182
    .end local v1    # "i":I
    :cond_5
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_6
    if-ge v1, v2, :cond_6

    .line 15183
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15182
    add-int/lit8 v1, v1, 0x1

    goto :goto_6

    .line 15185
    .end local v1    # "i":I
    :cond_6
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15186
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    .line 15187
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_7
    const/4 v2, 0x2

    if-ge v1, v2, :cond_7

    .line 15188
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15187
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 15190
    .end local v1    # "i":I
    :cond_7
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    .line 15191
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7, v12}, Lcom/android/internal/os/OppoBatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    .line 15192
    iget-boolean v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasWifiReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15193
    iget-boolean v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasBluetoothReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15194
    iget-boolean v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHasModemReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15196
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mNumConnectivityChange:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15197
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15198
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15199
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15200
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeUnplugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15201
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargePlugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15202
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCurrentLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15203
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mCurrentBatteryLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15204
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15205
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15206
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOn:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15207
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15208
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOff:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15209
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15210
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDoze:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15211
    iget v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15212
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 15213
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 15214
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15215
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15216
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15217
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15218
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/OppoBatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15219
    iget-wide v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mLastWriteTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15221
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15222
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_8
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_9

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15223
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 15224
    .local v3, "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_8

    .line 15225
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 15226
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15227
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_9

    .line 15229
    :cond_8
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15231
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :goto_9
    goto :goto_8

    .line 15232
    :cond_9
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15233
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_a
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_b

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15234
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 15235
    .restart local v3    # "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_a

    .line 15236
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 15237
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15238
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_b

    .line 15240
    :cond_a
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15242
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :goto_b
    goto :goto_a

    .line 15244
    :cond_b
    if-eqz p2, :cond_10

    .line 15245
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15246
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_c
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15247
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 15248
    .local v3, "kwlt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_c

    .line 15249
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 15250
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15251
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_d

    .line 15253
    :cond_c
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15255
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "kwlt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :goto_d
    goto :goto_c

    .line 15256
    :cond_d
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15257
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_e
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_f

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15258
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 15259
    .local v3, "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_e

    .line 15260
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 15261
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15262
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_f

    .line 15264
    :cond_e
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15266
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "timer":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :goto_f
    goto :goto_e

    :cond_f
    goto :goto_10

    .line 15268
    :cond_10
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15269
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15272
    :goto_10
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15273
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_11
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2}, Landroid/util/LongSparseArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_12

    .line 15274
    iget-object v2, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2, v1}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;

    .line 15275
    .local v2, "kmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    if-eqz v2, :cond_11

    .line 15276
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 15277
    iget-object v3, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v3, v1}, Landroid/util/LongSparseArray;->keyAt(I)J

    move-result-wide v3

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 15278
    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_12

    .line 15280
    :cond_11
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15273
    .end local v2    # "kmt":Lcom/android/internal/os/OppoBatteryStatsImpl$SamplingTimer;
    :goto_12
    add-int/lit8 v1, v1, 0x1

    goto :goto_11

    .line 15284
    .end local v1    # "i":I
    :cond_12
    if-eqz p2, :cond_14

    .line 15285
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v12

    .line 15286
    .local v12, "size":I
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15287
    const/4 v1, 0x0

    move v13, v1

    .local v13, "i":I
    :goto_13
    if-ge v13, v12, :cond_13

    .line 15288
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v13}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15289
    iget-object v1, v0, Lcom/android/internal/os/OppoBatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v13}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v18, v1

    check-cast v18, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;

    .line 15291
    .local v18, "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    move-object/from16 v1, v18

    move-object/from16 v2, p1

    move-wide v3, v8

    move-wide v5, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;->writeToParcelLocked(Landroid/os/Parcel;JJ)V

    .line 15287
    .end local v18    # "uid":Lcom/android/internal/os/OppoBatteryStatsImpl$Uid;
    add-int/lit8 v13, v13, 0x1

    goto :goto_13

    .line 15293
    .end local v12    # "size":I
    .end local v13    # "i":I
    :cond_13
    goto :goto_14

    .line 15294
    :cond_14
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15296
    :goto_14
    return-void
.end method

.method public blacklist writeToParcelWithoutUids(Landroid/os/Parcel;I)V
    .locals 1
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "flags"    # I

    .line 15106
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0, p2}, Lcom/android/internal/os/OppoBatteryStatsImpl;->writeToParcelLocked(Landroid/os/Parcel;ZI)V

    .line 15107
    return-void
.end method
