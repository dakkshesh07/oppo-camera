.class public Lcom/android/internal/os/BatteryStatsImpl;
.super Lcom/android/internal/os/OplusBaseBatteryStatsImpl;
.source "BatteryStatsImpl.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/internal/os/BatteryStatsImpl$Constants;,
        Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;,
        Lcom/android/internal/os/BatteryStatsImpl$Uid;,
        Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;,
        Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;,
        Lcom/android/internal/os/BatteryStatsImpl$DualTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$DurationTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$Timer;,
        Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;,
        Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;,
        Lcom/android/internal/os/BatteryStatsImpl$Counter;,
        Lcom/android/internal/os/BatteryStatsImpl$TimeBase;,
        Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;,
        Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;,
        Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;,
        Lcom/android/internal/os/BatteryStatsImpl$Clocks;,
        Lcom/android/internal/os/BatteryStatsImpl$MyHandler;,
        Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;,
        Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;,
        Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;,
        Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;,
        Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;
    }
.end annotation


# static fields
.field static final greylist-max-o BATTERY_DELTA_LEVEL_FLAG:I = 0x1

.field public static final greylist-max-o BATTERY_PLUGGED_NONE:I = 0x0

.field public static final greylist CREATOR:Landroid/os/Parcelable$Creator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/Parcelable$Creator<",
            "Lcom/android/internal/os/BatteryStatsImpl;",
            ">;"
        }
    .end annotation
.end field

.field private static final greylist-max-o DEBUG:Z = false

.field public static final greylist-max-o DEBUG_ENERGY:Z = false

.field private static final greylist-max-o DEBUG_ENERGY_CPU:Z = false

.field private static final greylist-max-o DEBUG_HISTORY:Z = false

.field private static final greylist-max-o DEBUG_MEMORY:Z = false

.field static final greylist-max-o DELAY_UPDATE_WAKELOCKS:J = 0x1388L

.field static final greylist-max-o DELTA_BATTERY_CHARGE_FLAG:I = 0x1000000

.field static final greylist-max-o DELTA_BATTERY_LEVEL_FLAG:I = 0x80000

.field static final greylist-max-o DELTA_EVENT_FLAG:I = 0x800000

.field static final greylist-max-o DELTA_STATE2_FLAG:I = 0x200000

.field static final greylist-max-o DELTA_STATE_FLAG:I = 0x100000

.field static final greylist-max-o DELTA_STATE_MASK:I = -0x2000000

.field static final greylist-max-o DELTA_TIME_ABS:I = 0x7fffd

.field static final greylist-max-o DELTA_TIME_INT:I = 0x7fffe

.field static final greylist-max-o DELTA_TIME_LONG:I = 0x7ffff

.field static final greylist-max-o DELTA_TIME_MASK:I = 0x7ffff

.field static final greylist-max-o DELTA_WAKELOCK_FLAG:I = 0x400000

.field private static final greylist-max-o MAGIC:I = -0x458a8b8b

.field static final greylist-max-o MAX_DAILY_ITEMS:I = 0xa

.field static final greylist-max-o MAX_LEVEL_STEPS:I = 0xc8

.field private static final greylist-max-o MAX_WAKELOCKS_PER_UID:I

.field private static final blacklist MILLISECONDS_IN_HOUR:D = 3600000.0

.field private static final blacklist MILLISECONDS_IN_YEAR:J = 0x757b12c00L

.field static final greylist-max-o MSG_REPORT_CHARGING:I = 0x3

.field static final greylist-max-o MSG_REPORT_CPU_UPDATE_NEEDED:I = 0x1

.field static final greylist-max-o MSG_REPORT_POWER_CHANGE:I = 0x2

.field static final greylist-max-o MSG_REPORT_RESET_STATS:I = 0x4

.field private static final greylist-max-o NUM_BT_TX_LEVELS:I = 0x1

.field private static final greylist-max-o NUM_WIFI_TX_LEVELS:I = 0x1

.field private static final greylist-max-o RPM_STATS_UPDATE_FREQ_MS:J = 0x3e8L

.field static final greylist-max-o STATE_BATTERY_HEALTH_MASK:I = 0x7

.field static final greylist-max-o STATE_BATTERY_HEALTH_SHIFT:I = 0x1a

.field static final greylist-max-o STATE_BATTERY_MASK:I = -0x1000000

.field static final greylist-max-o STATE_BATTERY_PLUG_MASK:I = 0x3

.field static final greylist-max-o STATE_BATTERY_PLUG_SHIFT:I = 0x18

.field static final greylist-max-o STATE_BATTERY_STATUS_MASK:I = 0x7

.field static final greylist-max-o STATE_BATTERY_STATUS_SHIFT:I = 0x1d

.field private static final greylist-max-o TAG:Ljava/lang/String; = "BatteryStatsImpl"

.field private static final greylist-max-o USB_DATA_CONNECTED:I = 0x2

.field private static final greylist-max-o USB_DATA_DISCONNECTED:I = 0x1

.field private static final greylist-max-o USB_DATA_UNKNOWN:I = 0x0

.field private static final greylist-max-o USE_OLD_HISTORY:Z = false

.field static final greylist-max-o VERSION:I = 0xba

.field public static final greylist-max-o WAKE_LOCK_WEIGHT:I = 0x32


# instance fields
.field final greylist-max-o mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

.field greylist-max-o mActiveHistoryStates:I

.field greylist-max-o mActiveHistoryStates2:I

.field greylist-max-o mAudioOnNesting:I

.field greylist-max-o mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final greylist-max-o mAudioTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final blacklist mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

.field private blacklist mBatteryTimeToFullSeconds:J

.field greylist-max-o mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

.field greylist-max-o mBluetoothScanNesting:I

.field final greylist-max-o mBluetoothScanOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected greylist-max-o mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private greylist-max-o mCallback:Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

.field greylist-max-o mCameraOnNesting:I

.field greylist-max-o mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final greylist-max-o mCameraTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mChangedStates:I

.field greylist-max-o mChangedStates2:I

.field final greylist-max-o mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field greylist-max-o mCharging:Z

.field public final blacklist mCheckinFile:Landroid/util/AtomicFile;

.field protected greylist-max-o mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

.field final greylist-max-o mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

.field private greylist-max-o mCpuFreqs:[J

.field private greylist-max-o mCpuTimeReadsTrackingStartTime:J

.field protected blacklist mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

.field protected blacklist mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

.field protected blacklist mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

.field protected blacklist mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

.field final greylist-max-o mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field greylist-max-o mCurStepCpuSystemTime:J

.field greylist-max-o mCurStepCpuUserTime:J

.field greylist-max-o mCurStepMode:I

.field greylist-max-o mCurStepStatIOWaitTime:J

.field greylist-max-o mCurStepStatIdleTime:J

.field greylist-max-o mCurStepStatIrqTime:J

.field greylist-max-o mCurStepStatSoftIrqTime:J

.field greylist-max-o mCurStepStatSystemTime:J

.field greylist-max-o mCurStepStatUserTime:J

.field greylist-max-o mCurrentBatteryLevel:I

.field final greylist-max-o mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field final greylist-max-o mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field public final blacklist mDailyFile:Landroid/util/AtomicFile;

.field final greylist-max-o mDailyItems:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Landroid/os/BatteryStats$DailyItem;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mDailyPackageChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Landroid/os/BatteryStats$PackageChange;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mDailyStartTime:J

.field private final blacklist mDeferSetCharging:Ljava/lang/Runnable;

.field greylist-max-o mDeviceIdleMode:I

.field greylist-max-o mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mDeviceIdling:Z

.field greylist-max-o mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mDeviceLightIdling:Z

.field greylist-max-o mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mDischargeAmountScreenDoze:I

.field greylist-max-o mDischargeAmountScreenDozeSinceCharge:I

.field greylist-max-o mDischargeAmountScreenOff:I

.field greylist-max-o mDischargeAmountScreenOffSinceCharge:I

.field greylist-max-o mDischargeAmountScreenOn:I

.field greylist-max-o mDischargeAmountScreenOnSinceCharge:I

.field private greylist-max-o mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field greylist-max-o mDischargeCurrentLevel:I

.field private greylist-max-o mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field private greylist-max-o mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field greylist-max-o mDischargePlugLevel:I

.field private greylist-max-o mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field greylist-max-o mDischargeScreenDozeUnplugLevel:I

.field private greylist-max-o mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field greylist-max-o mDischargeScreenOffUnplugLevel:I

.field greylist-max-o mDischargeScreenOnUnplugLevel:I

.field greylist-max-o mDischargeStartLevel:I

.field final greylist-max-o mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field greylist-max-o mDischargeUnplugLevel:I

.field greylist-max-o mDistributeWakelockCpu:Z

.field final greylist-max-o mDrawTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mEndPlatformVersion:Ljava/lang/String;

.field private greylist-max-o mEstimatedBatteryCapacity:I

.field private greylist-max-o mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

.field greylist-max-o mFlashlightOnNesting:I

.field greylist-max-o mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final greylist-max-o mFlashlightTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final greylist mFullTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final greylist-max-o mFullWifiLockTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mGlobalWifiRunning:Z

.field greylist-max-o mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mGpsNesting:I

.field greylist-max-o mGpsSignalQualityBin:I

.field protected final greylist-max-o mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field public greylist-max-o mHandler:Landroid/os/Handler;

.field greylist-max-o mHasBluetoothReporting:Z

.field greylist-max-o mHasModemReporting:Z

.field greylist-max-o mHasWifiReporting:Z

.field protected greylist-max-o mHaveBatteryLevel:Z

.field greylist-max-o mHighDischargeAmountSinceCharge:I

.field greylist-max-o mHistory:Landroid/os/BatteryStats$HistoryItem;

.field final greylist-max-o mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

.field greylist-max-o mHistoryBaseTime:J

.field final greylist-max-o mHistoryBuffer:Landroid/os/Parcel;

.field greylist-max-o mHistoryBufferLastPos:I

.field greylist-max-o mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

.field final greylist-max-o mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

.field greylist-max-o mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

.field private greylist-max-o mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

.field greylist-max-o mHistoryLastEnd:Landroid/os/BatteryStats$HistoryItem;

.field final greylist-max-o mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

.field final greylist-max-o mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

.field final greylist-max-o mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

.field final greylist-max-o mHistoryTagPool:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Landroid/os/BatteryStats$HistoryTag;",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mInitStepMode:I

.field private greylist-max-o mInitialAcquireWakeName:Ljava/lang/String;

.field private greylist-max-o mInitialAcquireWakeUid:I

.field greylist-max-o mInteractive:Z

.field greylist-max-o mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private blacklist mIsPerProcessStateCpuDataStale:Z

.field final greylist-max-o mIsolatedUids:Landroid/util/SparseIntArray;

.field private greylist-max-o mIteratingHistory:Z

.field protected greylist-max-o mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

.field private final greylist-max-o mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

.field private final greylist-max-o mKernelMemoryStats:Landroid/util/LongSparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/LongSparseArray<",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected greylist-max-o mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

.field private final greylist-max-o mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

.field private final greylist-max-o mKernelWakelockStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field private final greylist-max-o mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

.field greylist-max-o mLastChargeStepLevel:I

.field greylist-max-o mLastChargingStateLevel:I

.field greylist-max-o mLastDischargeStepLevel:I

.field greylist-max-o mLastHistoryElapsedRealtime:J

.field greylist-max-o mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field greylist-max-o mLastHistoryStepLevel:B

.field greylist-max-o mLastIdleTimeStart:J

.field private greylist-max-o mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

.field private greylist-max-o mLastModemNetworkStats:Landroid/net/NetworkStats;

.field protected greylist-max-o mLastPartialTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field private greylist-max-o mLastRpmStatsUpdateTimeMs:J

.field greylist-max-o mLastStepCpuSystemTime:J

.field greylist-max-o mLastStepCpuUserTime:J

.field greylist-max-o mLastStepStatIOWaitTime:J

.field greylist-max-o mLastStepStatIdleTime:J

.field greylist-max-o mLastStepStatIrqTime:J

.field greylist-max-o mLastStepStatSoftIrqTime:J

.field greylist-max-o mLastStepStatSystemTime:J

.field greylist-max-o mLastStepStatUserTime:J

.field greylist-max-o mLastWakeupReason:Ljava/lang/String;

.field greylist-max-o mLastWakeupUptimeMs:J

.field private greylist-max-o mLastWifiNetworkStats:Landroid/net/NetworkStats;

.field greylist-max-o mLastWriteTime:J

.field greylist-max-o mLongestFullIdleTime:J

.field greylist-max-o mLongestLightIdleTime:J

.field greylist-max-o mLowDischargeAmountSinceCharge:I

.field greylist-max-o mMaxChargeStepLevel:I

.field private greylist-max-o mMaxLearnedBatteryCapacity:I

.field greylist-max-o mMinDischargeStepLevel:I

.field private greylist-max-o mMinLearnedBatteryCapacity:I

.field greylist-max-o mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field greylist-max-o mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mMobileRadioActiveStartTime:J

.field greylist-max-o mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field greylist-max-o mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field greylist-max-o mMobileRadioPowerState:I

.field greylist-max-o mModStepMode:I

.field greylist-max-o mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

.field private greylist-max-o mModemIfaces:[Ljava/lang/String;

.field private final greylist-max-o mModemNetworkLock:Ljava/lang/Object;

.field final greylist-max-o mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field final greylist-max-o mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field private final greylist-max-o mNetworkStatsPool:Landroid/util/Pools$Pool;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/Pools$Pool<",
            "Landroid/net/NetworkStats;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mNextHistoryTagIdx:I

.field greylist-max-o mNextMaxDailyDeadline:J

.field greylist-max-o mNextMinDailyDeadline:J

.field greylist-max-o mNoAutoReset:Z

.field private greylist-max-o mNumAllUidCpuTimeReads:I

.field private greylist-max-o mNumBatchedSingleUidCpuTimeReads:J

.field private greylist-max-o mNumConnectivityChange:I

.field greylist-max-o mNumHistoryItems:I

.field greylist-max-o mNumHistoryTagChars:I

.field private greylist-max-o mNumSingleUidCpuTimeReads:J

.field private greylist-max-o mNumUidsRemoved:I

.field greylist-max-o mOnBattery:Z

.field protected greylist-max-o mOnBatteryInternal:Z

.field protected final greylist-max-o mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

.field protected final greylist-max-o mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

.field private blacklist mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

.field protected greylist mPartialTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected greylist-max-o mPendingRemovedUids:Ljava/util/Queue;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Queue<",
            "Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;",
            ">;"
        }
    .end annotation
.end field

.field protected final greylist-max-o mPendingUids:Landroid/util/SparseIntArray;

.field public greylist-max-o mPerProcStateCpuTimesAvailable:Z

.field greylist-max-o mPhoneDataConnectionType:I

.field final greylist-max-o mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mPhoneOn:Z

.field greylist-max-o mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private greylist-max-o mPhoneServiceState:I

.field private greylist-max-o mPhoneServiceStateRaw:I

.field greylist-max-o mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mPhoneSignalStrengthBin:I

.field greylist-max-o mPhoneSignalStrengthBinRaw:I

.field final greylist-max-o mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private greylist-max-o mPhoneSimStateRaw:I

.field private final greylist-max-o mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

.field protected greylist-max-o mPowerProfile:Lcom/android/internal/os/PowerProfile;

.field greylist-max-o mPowerSaveModeEnabled:Z

.field greylist-max-o mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mPretendScreenOff:Z

.field public final blacklist mRailEnergyDataCallback:Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;

.field greylist-max-o mReadHistoryChars:I

.field final greylist-max-o mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field greylist-max-o mReadHistoryStrings:[Ljava/lang/String;

.field greylist-max-o mReadHistoryUids:[I

.field private greylist-max-o mReadOverflow:Z

.field greylist-max-o mRealtime:J

.field greylist-max-o mRealtimeStart:J

.field public greylist-max-o mRecordAllHistory:Z

.field protected greylist-max-o mRecordingHistory:Z

.field private final greylist-max-o mRpmStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mScreenBrightnessBin:I

.field final greylist-max-o mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field protected greylist-max-o mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private final greylist-max-o mScreenOffRpmStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected greylist-max-o mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field protected greylist-max-o mScreenState:I

.field greylist-max-o mSensorNesting:I

.field final greylist-max-o mSensorTimers:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;>;"
        }
    .end annotation
.end field

.field greylist-max-o mShuttingDown:Z

.field greylist-max-o mStartClockTime:J

.field greylist-max-o mStartCount:I

.field greylist-max-o mStartPlatformVersion:Ljava/lang/String;

.field private final blacklist mStatsFile:Landroid/util/AtomicFile;

.field greylist-max-o mTempTotalCpuSystemTimeUs:J

.field greylist-max-o mTempTotalCpuUserTimeUs:J

.field final greylist-max-o mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field private final blacklist mTmpRailStats:Lcom/android/internal/os/RailStats;

.field private final greylist-max-o mTmpRpmStats:Lcom/android/internal/os/RpmStats;

.field private final greylist-max-o mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

.field greylist-max-o mTrackRunningHistoryElapsedRealtime:J

.field greylist-max-o mTrackRunningHistoryUptime:J

.field final greylist-max-o mUidStats:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/internal/os/BatteryStatsImpl$Uid;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mUptime:J

.field greylist-max-o mUptimeStart:J

.field greylist-max-o mUsbDataState:I

.field protected greylist-max-o mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

.field greylist-max-o mVideoOnNesting:I

.field greylist-max-o mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final greylist-max-o mVideoTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mWakeLockAllocationsUs:[[J

.field greylist-max-o mWakeLockImportant:Z

.field greylist-max-o mWakeLockNesting:I

.field private final greylist-max-o mWakeupReasonStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

.field final greylist-max-o mWifiBatchedScanTimers:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;>;"
        }
    .end annotation
.end field

.field greylist-max-o mWifiFullLockNesting:I

.field private greylist-max-o mWifiIfaces:[Ljava/lang/String;

.field greylist-max-o mWifiMulticastNesting:I

.field final greylist-max-o mWifiMulticastTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private final greylist-max-o mWifiNetworkLock:Ljava/lang/Object;

.field greylist-max-o mWifiOn:Z

.field greylist-max-o mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mWifiRadioPowerState:I

.field final greylist-max-o mWifiRunningTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mWifiScanNesting:I

.field final greylist-max-o mWifiScanTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field greylist-max-o mWifiSignalStrengthBin:I

.field final greylist-max-o mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mWifiState:I

.field final greylist-max-o mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field greylist-max-o mWifiSupplState:I

.field final greylist-max-o mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final greylist mWindowTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final greylist-max-o mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;


# direct methods
.method static constructor blacklist <clinit>()V
    .locals 1

    .line 176
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 177
    const/16 v0, 0x28

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    goto :goto_0

    .line 179
    :cond_0
    const/16 v0, 0xc8

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    .line 15346
    :goto_0
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$5;

    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$5;-><init>()V

    sput-object v0, Lcom/android/internal/os/BatteryStatsImpl;->CREATOR:Landroid/os/Parcelable$Creator;

    return-void
.end method

.method public constructor greylist-max-o <init>()V
    .locals 1

    .line 1119
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;

    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;-><init>()V

    invoke-direct {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    .line 1120
    return-void
.end method

.method public constructor greylist <init>(Landroid/os/Parcel;)V
    .locals 1
    .param p1, "p"    # Landroid/os/Parcel;

    .line 10190
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;

    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;-><init>()V

    invoke-direct {p0, v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Landroid/os/Parcel;)V

    .line 10191
    return-void
.end method

.method public constructor greylist-max-o <init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V
    .locals 13
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 1125
    invoke-direct {p0}, Lcom/android/internal/os/OplusBaseBatteryStatsImpl;-><init>()V

    .line 216
    new-instance v0, Lcom/android/internal/os/KernelWakelockReader;

    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    .line 217
    new-instance v0, Lcom/android/internal/os/KernelWakelockStats;

    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    .line 219
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    const/4 v1, 0x1

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    .line 224
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    .line 227
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    .line 230
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    .line 236
    new-instance v0, Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-direct {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    .line 238
    new-instance v0, Landroid/util/LongSparseArray;

    invoke-direct {v0}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    .line 243
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 260
    new-instance v0, Landroid/util/SparseIntArray;

    invoke-direct {v0}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    .line 268
    nop

    .line 269
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    .line 276
    new-instance v0, Lcom/android/internal/os/RpmStats;

    invoke-direct {v0}, Lcom/android/internal/os/RpmStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    .line 280
    const-wide/16 v2, -0x3e8

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 283
    new-instance v0, Lcom/android/internal/os/RailStats;

    invoke-direct {v0}, Lcom/android/internal/os/RailStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    .line 294
    new-instance v0, Ljava/util/LinkedList;

    invoke-direct {v0}, Ljava/util/LinkedList;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 383
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$1;

    invoke-direct {v0, p0}, Lcom/android/internal/os/BatteryStatsImpl$1;-><init>(Lcom/android/internal/os/BatteryStatsImpl;)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    .line 659
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 660
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 668
    new-instance v2, Landroid/util/SparseIntArray;

    invoke-direct {v2}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    .line 673
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .line 679
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    .line 682
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    .line 684
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    .line 686
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    .line 687
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    .line 688
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    .line 689
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    .line 690
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    .line 691
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    .line 692
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    .line 693
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    .line 694
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    .line 695
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    .line 696
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    .line 701
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    .line 704
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    .line 709
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 713
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 721
    new-instance v2, Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    .line 724
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 725
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 728
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v3

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    .line 729
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 730
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 731
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 732
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 733
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    .line 737
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 738
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 739
    const/4 v3, -0x1

    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 740
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    .line 741
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    .line 742
    const-wide/16 v4, 0x0

    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 743
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 744
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 748
    new-instance v6, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 756
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 757
    iput-byte v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 758
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 759
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 760
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 808
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 815
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    .line 816
    const/4 v6, 0x5

    new-array v7, v6, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 857
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    .line 859
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 860
    const/4 v7, 0x2

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 864
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 865
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 866
    nop

    .line 867
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v7

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 871
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 872
    sget v7, Lcom/android/internal/os/BatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 875
    const/16 v7, 0xa

    new-array v8, v7, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 877
    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 907
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 913
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 919
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 927
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    .line 928
    const/16 v7, 0x8

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 930
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    .line 931
    const/16 v7, 0xd

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 933
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 934
    new-array v6, v6, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 943
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 951
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 964
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    .line 995
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 996
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    .line 997
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 1001
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v6, 0xc8

    invoke-direct {v1, v6}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1002
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v7, 0x190

    invoke-direct {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1007
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v1, v6}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1008
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1012
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    .line 1013
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 1014
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 1016
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    .line 1018
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    .line 1020
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    .line 1021
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 1022
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 1026
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 1028
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 1029
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 1031
    const-wide/16 v6, -0x1

    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryTimeToFullSeconds:J

    .line 1045
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    .line 1047
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    .line 1063
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    .line 1070
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 1071
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 1072
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    .line 3778
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates:I

    .line 3779
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates2:I

    .line 4284
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 6112
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6142
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    .line 6182
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    .line 11004
    new-instance v1, Landroid/util/Pools$SynchronizedPool;

    const/4 v6, 0x6

    invoke-direct {v1, v6}, Landroid/util/Pools$SynchronizedPool;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11006
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    .line 11008
    sget-object v1, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 11011
    new-instance v1, Landroid/net/NetworkStats;

    invoke-direct {v1, v4, v5, v3}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 11014
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    .line 11016
    sget-object v1, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 11019
    new-instance v1, Landroid/net/NetworkStats;

    invoke-direct {v1, v4, v5, v3}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    .line 11327
    new-instance v1, Landroid/telephony/ModemActivityInfo;

    new-array v11, v2, [I

    const-wide/16 v7, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v12, 0x0

    move-object v6, v1

    invoke-direct/range {v6 .. v12}, Landroid/telephony/ModemActivityInfo;-><init>(JII[II)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11605
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-direct {v1, p0, v0}, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Lcom/android/internal/os/BatteryStatsImpl$1;)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    .line 13596
    new-instance v1, Ljava/util/concurrent/locks/ReentrantLock;

    invoke-direct {v1}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    .line 1127
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    .line 1128
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    .line 1129
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCheckinFile:Landroid/util/AtomicFile;

    .line 1130
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    .line 1131
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    .line 1132
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    .line 1133
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    .line 1134
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRailEnergyDataCallback:Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;

    .line 1135
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 1136
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$Constants;

    invoke-direct {v1, p0, v0}, Lcom/android/internal/os/BatteryStatsImpl$Constants;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Handler;)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    .line 1137
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    .line 1138
    return-void
.end method

.method public constructor greylist-max-o <init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Landroid/os/Parcel;)V
    .locals 13
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;
    .param p2, "p"    # Landroid/os/Parcel;

    .line 10196
    invoke-direct {p0}, Lcom/android/internal/os/OplusBaseBatteryStatsImpl;-><init>()V

    .line 216
    new-instance v0, Lcom/android/internal/os/KernelWakelockReader;

    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    .line 217
    new-instance v0, Lcom/android/internal/os/KernelWakelockStats;

    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    .line 219
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    const/4 v1, 0x1

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    .line 224
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    .line 227
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    .line 230
    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-direct {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;-><init>(Z)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    .line 236
    new-instance v0, Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-direct {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    .line 238
    new-instance v0, Landroid/util/LongSparseArray;

    invoke-direct {v0}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    .line 243
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 260
    new-instance v0, Landroid/util/SparseIntArray;

    invoke-direct {v0}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    .line 268
    nop

    .line 269
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    .line 276
    new-instance v0, Lcom/android/internal/os/RpmStats;

    invoke-direct {v0}, Lcom/android/internal/os/RpmStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    .line 280
    const-wide/16 v2, -0x3e8

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 283
    new-instance v0, Lcom/android/internal/os/RailStats;

    invoke-direct {v0}, Lcom/android/internal/os/RailStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    .line 294
    new-instance v0, Ljava/util/LinkedList;

    invoke-direct {v0}, Ljava/util/LinkedList;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 383
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$1;

    invoke-direct {v0, p0}, Lcom/android/internal/os/BatteryStatsImpl$1;-><init>(Lcom/android/internal/os/BatteryStatsImpl;)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    .line 659
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 660
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 668
    new-instance v2, Landroid/util/SparseIntArray;

    invoke-direct {v2}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    .line 673
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .line 679
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    .line 682
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    .line 684
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    .line 686
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    .line 687
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    .line 688
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    .line 689
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    .line 690
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    .line 691
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    .line 692
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    .line 693
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    .line 694
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    .line 695
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    .line 696
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    .line 701
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    .line 704
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    .line 709
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 713
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 721
    new-instance v2, Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    .line 724
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 725
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 728
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v3

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    .line 729
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 730
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 731
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 732
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 733
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    .line 737
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 738
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 739
    const/4 v3, -0x1

    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 740
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    .line 741
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    .line 742
    const-wide/16 v4, 0x0

    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 743
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 744
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 748
    new-instance v6, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 756
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 757
    iput-byte v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 758
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 759
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 760
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 808
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 815
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    .line 816
    const/4 v6, 0x5

    new-array v7, v6, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 857
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    .line 859
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 860
    const/4 v7, 0x2

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 864
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 865
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 866
    nop

    .line 867
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v7

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 871
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 872
    sget v7, Lcom/android/internal/os/BatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 875
    const/16 v7, 0xa

    new-array v8, v7, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 877
    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 907
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 913
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 919
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 927
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    .line 928
    const/16 v7, 0x8

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 930
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    .line 931
    const/16 v7, 0xd

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 933
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 934
    new-array v6, v6, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 943
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 951
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 964
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    .line 995
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 996
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    .line 997
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 1001
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v6, 0xc8

    invoke-direct {v1, v6}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1002
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v7, 0x190

    invoke-direct {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1007
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v1, v6}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1008
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1012
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    .line 1013
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 1014
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 1016
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    .line 1018
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    .line 1020
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    .line 1021
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 1022
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 1026
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 1028
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 1029
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 1031
    const-wide/16 v6, -0x1

    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryTimeToFullSeconds:J

    .line 1045
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    .line 1047
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    .line 1063
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    .line 1070
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 1071
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 1072
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    .line 3778
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates:I

    .line 3779
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates2:I

    .line 4284
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 6112
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6142
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    .line 6182
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    .line 11004
    new-instance v1, Landroid/util/Pools$SynchronizedPool;

    const/4 v6, 0x6

    invoke-direct {v1, v6}, Landroid/util/Pools$SynchronizedPool;-><init>(I)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11006
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    .line 11008
    sget-object v1, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 11011
    new-instance v1, Landroid/net/NetworkStats;

    invoke-direct {v1, v4, v5, v3}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 11014
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    .line 11016
    sget-object v1, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 11019
    new-instance v1, Landroid/net/NetworkStats;

    invoke-direct {v1, v4, v5, v3}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    .line 11327
    new-instance v1, Landroid/telephony/ModemActivityInfo;

    new-array v11, v2, [I

    const-wide/16 v7, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v12, 0x0

    move-object v6, v1

    invoke-direct/range {v6 .. v12}, Landroid/telephony/ModemActivityInfo;-><init>(JII[II)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11605
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-direct {v1, p0, v0}, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Lcom/android/internal/os/BatteryStatsImpl$1;)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    .line 13596
    new-instance v1, Ljava/util/concurrent/locks/ReentrantLock;

    invoke-direct {v1}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    .line 10198
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    .line 10199
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    .line 10200
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCheckinFile:Landroid/util/AtomicFile;

    .line 10201
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    .line 10202
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    .line 10203
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 10204
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$Constants;

    invoke-direct {v1, p0, v0}, Lcom/android/internal/os/BatteryStatsImpl$Constants;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Handler;)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    .line 10205
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    .line 10206
    new-instance v1, Lcom/android/internal/os/BatteryStatsHistory;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-direct {v1, p0, v2}, Lcom/android/internal/os/BatteryStatsHistory;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Parcel;)V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    .line 10207
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->readFromParcel(Landroid/os/Parcel;)V

    .line 10208
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    .line 10209
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRailEnergyDataCallback:Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;

    .line 10210
    return-void
.end method

.method private constructor blacklist <init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;)V
    .locals 28
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;
    .param p2, "systemDir"    # Ljava/io/File;
    .param p3, "handler"    # Landroid/os/Handler;
    .param p4, "cb"    # Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;
    .param p5, "railStatsCb"    # Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;
    .param p6, "userInfoProvider"    # Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 10072
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move-object/from16 v2, p3

    invoke-direct {v0, v1, v2}, Lcom/android/internal/os/OplusBaseBatteryStatsImpl;-><init>(Ljava/io/File;Landroid/os/Handler;)V

    .line 216
    new-instance v3, Lcom/android/internal/os/KernelWakelockReader;

    invoke-direct {v3}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    .line 217
    new-instance v3, Lcom/android/internal/os/KernelWakelockStats;

    invoke-direct {v3}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    .line 219
    new-instance v3, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    const/4 v4, 0x1

    invoke-direct {v3, v4}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;-><init>(Z)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    .line 224
    new-instance v3, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-direct {v3, v4}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;-><init>(Z)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    .line 227
    new-instance v3, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-direct {v3, v4}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;-><init>(Z)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    .line 230
    new-instance v3, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-direct {v3, v4}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;-><init>(Z)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    .line 236
    new-instance v3, Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-direct {v3}, Lcom/android/internal/os/KernelMemoryBandwidthStats;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    .line 238
    new-instance v3, Landroid/util/LongSparseArray;

    invoke-direct {v3}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    .line 243
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 260
    new-instance v3, Landroid/util/SparseIntArray;

    invoke-direct {v3}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    .line 268
    nop

    .line 269
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v5

    iput-wide v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    .line 276
    new-instance v3, Lcom/android/internal/os/RpmStats;

    invoke-direct {v3}, Lcom/android/internal/os/RpmStats;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    .line 280
    const-wide/16 v5, -0x3e8

    iput-wide v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 283
    new-instance v3, Lcom/android/internal/os/RailStats;

    invoke-direct {v3}, Lcom/android/internal/os/RailStats;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    .line 294
    new-instance v3, Ljava/util/LinkedList;

    invoke-direct {v3}, Ljava/util/LinkedList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 383
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$1;

    invoke-direct {v3, v0}, Lcom/android/internal/os/BatteryStatsImpl$1;-><init>(Lcom/android/internal/os/BatteryStatsImpl;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    .line 659
    const/4 v3, 0x0

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 660
    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 668
    new-instance v5, Landroid/util/SparseIntArray;

    invoke-direct {v5}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    .line 673
    new-instance v5, Landroid/util/SparseArray;

    invoke-direct {v5}, Landroid/util/SparseArray;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .line 679
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    .line 682
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    .line 684
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    .line 686
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    .line 687
    new-instance v5, Landroid/util/SparseArray;

    invoke-direct {v5}, Landroid/util/SparseArray;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    .line 688
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    .line 689
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    .line 690
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    .line 691
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    .line 692
    new-instance v5, Landroid/util/SparseArray;

    invoke-direct {v5}, Landroid/util/SparseArray;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    .line 693
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    .line 694
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    .line 695
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    .line 696
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    .line 701
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    .line 704
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    .line 709
    new-instance v5, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v5, v4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 713
    new-instance v5, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v5, v4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 721
    new-instance v5, Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-direct {v5}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    .line 724
    const/4 v5, 0x0

    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 725
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 728
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v6

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    .line 729
    new-instance v6, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 730
    new-instance v6, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 731
    new-instance v6, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 732
    new-instance v6, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 733
    new-instance v6, Ljava/util/HashMap;

    invoke-direct {v6}, Ljava/util/HashMap;-><init>()V

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    .line 737
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 738
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 739
    const/4 v6, -0x1

    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 740
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    .line 741
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    .line 742
    const-wide/16 v7, 0x0

    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 743
    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 744
    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 748
    new-instance v9, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v9}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 756
    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 757
    iput-byte v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 758
    new-instance v9, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v9}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 759
    new-instance v9, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v9}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 760
    new-instance v9, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v9}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 808
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 815
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    .line 816
    const/4 v9, 0x5

    new-array v10, v9, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 857
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    .line 859
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 860
    const/4 v10, 0x2

    new-array v11, v10, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 864
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 865
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 866
    nop

    .line 867
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v11

    new-array v11, v11, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 871
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 872
    sget v11, Lcom/android/internal/os/BatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    new-array v11, v11, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 875
    const/16 v11, 0xa

    new-array v12, v11, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 877
    new-array v12, v11, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 907
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 913
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 919
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 927
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    .line 928
    const/16 v12, 0x8

    new-array v13, v12, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 930
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    .line 931
    const/16 v13, 0xd

    new-array v14, v13, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 933
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 934
    new-array v14, v9, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 943
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 951
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 964
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    .line 995
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 996
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    .line 997
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 1001
    new-instance v14, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v15, 0xc8

    invoke-direct {v14, v15}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1002
    new-instance v14, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v10, 0x190

    invoke-direct {v14, v10}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1007
    new-instance v14, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v14, v15}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1008
    new-instance v14, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v14, v10}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 1012
    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    .line 1013
    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 1014
    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 1016
    new-instance v10, Ljava/util/ArrayList;

    invoke-direct {v10}, Ljava/util/ArrayList;-><init>()V

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    .line 1018
    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    .line 1020
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    .line 1021
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 1022
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 1026
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 1028
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 1029
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 1031
    const-wide/16 v14, -0x1

    iput-wide v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryTimeToFullSeconds:J

    .line 1045
    new-instance v10, Ljava/util/HashMap;

    invoke-direct {v10}, Ljava/util/HashMap;-><init>()V

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    .line 1047
    new-instance v10, Ljava/util/HashMap;

    invoke-direct {v10}, Ljava/util/HashMap;-><init>()V

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    .line 1063
    new-instance v10, Ljava/util/HashMap;

    invoke-direct {v10}, Ljava/util/HashMap;-><init>()V

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    .line 1070
    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 1071
    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 1072
    new-instance v10, Ljava/util/HashMap;

    invoke-direct {v10}, Ljava/util/HashMap;-><init>()V

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    .line 3778
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates:I

    .line 3779
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates2:I

    .line 4284
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 6112
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6142
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    .line 6182
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    .line 11004
    new-instance v10, Landroid/util/Pools$SynchronizedPool;

    const/4 v14, 0x6

    invoke-direct {v10, v14}, Landroid/util/Pools$SynchronizedPool;-><init>(I)V

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11006
    new-instance v10, Ljava/lang/Object;

    invoke-direct {v10}, Ljava/lang/Object;-><init>()V

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    .line 11008
    sget-object v10, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 11011
    new-instance v10, Landroid/net/NetworkStats;

    invoke-direct {v10, v7, v8, v6}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 11014
    new-instance v10, Ljava/lang/Object;

    invoke-direct {v10}, Ljava/lang/Object;-><init>()V

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    .line 11016
    sget-object v10, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 11019
    new-instance v10, Landroid/net/NetworkStats;

    invoke-direct {v10, v7, v8, v6}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    .line 11327
    new-instance v7, Landroid/telephony/ModemActivityInfo;

    new-array v8, v5, [I

    const-wide/16 v18, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v23, 0x0

    move-object/from16 v17, v7

    move-object/from16 v22, v8

    invoke-direct/range {v17 .. v23}, Landroid/telephony/ModemActivityInfo;-><init>(JII[II)V

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11605
    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-direct {v7, v0, v3}, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Lcom/android/internal/os/BatteryStatsImpl$1;)V

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    .line 13596
    new-instance v7, Ljava/util/concurrent/locks/ReentrantLock;

    invoke-direct {v7}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    .line 10075
    invoke-direct/range {p0 .. p1}, Lcom/android/internal/os/BatteryStatsImpl;->init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    .line 10078
    if-nez v1, :cond_0

    .line 10079
    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    .line 10080
    new-instance v3, Lcom/android/internal/os/BatteryStatsHistory;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-direct {v3, v0, v7}, Lcom/android/internal/os/BatteryStatsHistory;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Parcel;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    goto :goto_0

    .line 10082
    :cond_0
    new-instance v3, Landroid/util/AtomicFile;

    new-instance v7, Ljava/io/File;

    const-string v8, "batterystats.bin"

    invoke-direct {v7, v1, v8}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v3, v7}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    .line 10083
    new-instance v3, Lcom/android/internal/os/BatteryStatsHistory;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-direct {v3, v0, v1, v7}, Lcom/android/internal/os/BatteryStatsHistory;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Ljava/io/File;Landroid/os/Parcel;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    .line 10085
    :goto_0
    new-instance v3, Landroid/util/AtomicFile;

    new-instance v7, Ljava/io/File;

    const-string v8, "batterystats-checkin.bin"

    invoke-direct {v7, v1, v8}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v3, v7}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCheckinFile:Landroid/util/AtomicFile;

    .line 10086
    new-instance v3, Landroid/util/AtomicFile;

    new-instance v7, Ljava/io/File;

    const-string v8, "batterystats-daily.xml"

    invoke-direct {v7, v1, v8}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v3, v7}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    .line 10087
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    invoke-virtual/range {p3 .. p3}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v7

    invoke-direct {v3, v0, v7}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Looper;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    .line 10088
    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$Constants;

    invoke-direct {v7, v0, v3}, Lcom/android/internal/os/BatteryStatsImpl$Constants;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Handler;)V

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    .line 10089
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    add-int/2addr v3, v4

    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    .line 10090
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    const/16 v20, -0x1

    const/16 v21, 0x0

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v7

    move-object/from16 v22, v8

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10091
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v24, 0x0

    const/16 v25, -0x1

    const/16 v26, 0x0

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v3

    move-object/from16 v23, v7

    move-object/from16 v27, v8

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10092
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_1
    if-ge v3, v9, :cond_1

    .line 10093
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v8, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    rsub-int/lit8 v20, v3, -0x64

    const/16 v21, 0x0

    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v8

    move-object/from16 v18, v10

    move-object/from16 v22, v14

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v8, v7, v3

    .line 10092
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 10096
    .end local v3    # "i":I
    :cond_1
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    const/16 v20, -0xa

    const/16 v21, 0x0

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v7

    move-object/from16 v22, v8

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10097
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v24, 0x0

    const/16 v25, -0x2

    const/16 v26, 0x0

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v3

    move-object/from16 v23, v7

    move-object/from16 v27, v8

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10099
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v20, -0xb

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v7

    move-object/from16 v22, v8

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10101
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v25, -0xe

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v3

    move-object/from16 v23, v7

    move-object/from16 v27, v8

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10102
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v20, -0xf

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v7

    move-object/from16 v22, v8

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10103
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v25, -0xc

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v3

    move-object/from16 v23, v7

    move-object/from16 v27, v8

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10104
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v20, -0x3

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v7

    move-object/from16 v22, v8

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10105
    const/4 v3, 0x0

    .restart local v3    # "i":I
    :goto_2
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v7

    if-ge v3, v7, :cond_2

    .line 10106
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v8, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    rsub-int v14, v3, -0xc8

    const/16 v21, 0x0

    iget-object v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v8

    move-object/from16 v18, v10

    move/from16 v20, v14

    move-object/from16 v22, v15

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v8, v7, v3

    .line 10105
    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    .line 10109
    .end local v3    # "i":I
    :cond_2
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    const/16 v20, -0xc7

    const/16 v21, 0x0

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v7

    move-object/from16 v22, v8

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10111
    const/4 v3, 0x0

    .restart local v3    # "i":I
    :goto_3
    sget v7, Lcom/android/internal/os/BatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v3, v7, :cond_3

    .line 10112
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v8, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    rsub-int v14, v3, -0x12c

    const/16 v21, 0x0

    iget-object v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v8

    move-object/from16 v18, v10

    move/from16 v20, v14

    move-object/from16 v22, v15

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v8, v7, v3

    .line 10111
    add-int/lit8 v3, v3, 0x1

    goto :goto_3

    .line 10115
    .end local v3    # "i":I
    :cond_3
    const/4 v3, 0x0

    .restart local v3    # "i":I
    :goto_4
    if-ge v3, v11, :cond_4

    .line 10116
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-instance v8, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v8, v10}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v8, v7, v3

    .line 10117
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-instance v8, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v8, v10}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v8, v7, v3

    .line 10115
    add-int/lit8 v3, v3, 0x1

    goto :goto_4

    .line 10119
    .end local v3    # "i":I
    :cond_4
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;I)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 10120
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;I)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 10122
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4, v9}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;I)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 10124
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    const/16 v20, -0x190

    const/16 v21, 0x0

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v4

    move-object/from16 v22, v7

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10125
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v24, 0x0

    const/16 v25, -0x191

    const/16 v26, 0x0

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v3

    move-object/from16 v23, v4

    move-object/from16 v27, v7

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10127
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10128
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10129
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10130
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v20, 0x17

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v4

    move-object/from16 v22, v7

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10132
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v25, -0x4

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v3

    move-object/from16 v23, v4

    move-object/from16 v27, v7

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10133
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v20, -0x5

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v4

    move-object/from16 v22, v7

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10134
    const/4 v3, 0x0

    .restart local v3    # "i":I
    :goto_5
    if-ge v3, v12, :cond_5

    .line 10135
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    rsub-int v10, v3, -0x258

    const/16 v21, 0x0

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v7

    move-object/from16 v18, v8

    move/from16 v20, v10

    move-object/from16 v22, v11

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v7, v4, v3

    .line 10134
    add-int/lit8 v3, v3, 0x1

    goto :goto_5

    .line 10138
    .end local v3    # "i":I
    :cond_5
    const/4 v3, 0x0

    .restart local v3    # "i":I
    :goto_6
    if-ge v3, v13, :cond_6

    .line 10139
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    rsub-int v10, v3, -0x2bc

    const/16 v21, 0x0

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v7

    move-object/from16 v18, v8

    move/from16 v20, v10

    move-object/from16 v22, v11

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v7, v4, v3

    .line 10138
    add-int/lit8 v3, v3, 0x1

    goto :goto_6

    .line 10142
    .end local v3    # "i":I
    :cond_6
    const/4 v3, 0x0

    .restart local v3    # "i":I
    :goto_7
    if-ge v3, v9, :cond_7

    .line 10143
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v12, 0x0

    rsub-int v13, v3, -0x320

    const/4 v14, 0x0

    iget-object v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v10, v7

    invoke-direct/range {v10 .. v15}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v7, v4, v3

    .line 10142
    add-int/lit8 v3, v3, 0x1

    goto :goto_7

    .line 10146
    .end local v3    # "i":I
    :cond_7
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v12, 0x0

    const/16 v13, -0x384

    const/4 v14, 0x0

    iget-object v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v10, v3

    invoke-direct/range {v10 .. v15}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10147
    const/4 v3, 0x0

    .restart local v3    # "i":I
    :goto_8
    const/4 v4, 0x2

    if-ge v3, v4, :cond_8

    .line 10148
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v14, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v10, 0x0

    rsub-int v11, v3, -0x3e8

    const/4 v12, 0x0

    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v8, v14

    invoke-direct/range {v8 .. v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v14, v7, v3

    .line 10147
    add-int/lit8 v3, v3, 0x1

    goto :goto_8

    .line 10151
    .end local v3    # "i":I
    :cond_8
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v9, 0x0

    const/4 v10, -0x7

    const/4 v11, 0x0

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v7, v3

    invoke-direct/range {v7 .. v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10152
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v15, 0x0

    const/16 v16, -0x8

    const/16 v17, 0x0

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v13, v3

    move-object/from16 v18, v4

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10153
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v10, -0x9

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v7, v3

    invoke-direct/range {v7 .. v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10154
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v16, -0xd

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v13, v3

    move-object/from16 v18, v4

    invoke-direct/range {v13 .. v18}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10155
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v10, -0xe

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v7, v3

    invoke-direct/range {v7 .. v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10156
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10157
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10158
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10159
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10160
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10161
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    .line 10162
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    const-wide/16 v7, 0x3e8

    mul-long/2addr v3, v7

    .line 10163
    .local v3, "uptime":J
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v9}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    mul-long/2addr v9, v7

    .line 10164
    .local v9, "realtime":J
    invoke-virtual {v0, v3, v4, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->initTimes(JJ)V

    .line 10165
    sget-object v7, Landroid/os/Build;->ID:Ljava/lang/String;

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    .line 10166
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStartLevel:I

    .line 10167
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    .line 10168
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    .line 10169
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 10170
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 10171
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->initDischarge()V

    .line 10172
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    .line 10173
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateDailyDeadlineLocked()V

    .line 10174
    move-object/from16 v6, p4

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    .line 10175
    move-object/from16 v7, p5

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRailEnergyDataCallback:Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;

    .line 10176
    move-object/from16 v8, p6

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 10179
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    .line 10180
    const/16 v11, 0x15

    invoke-static {v11, v5}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    .line 10184
    new-instance v5, Lcom/android/internal/os/OppoDevicePowerStats;

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mContext:Landroid/content/Context;

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-direct {v5, v11, v12}, Lcom/android/internal/os/OppoDevicePowerStats;-><init>(Landroid/content/Context;Landroid/os/Handler;)V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    .line 10186
    return-void
.end method

.method public constructor blacklist <init>(Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;)V
    .locals 7
    .param p1, "systemDir"    # Ljava/io/File;
    .param p2, "handler"    # Landroid/os/Handler;
    .param p3, "cb"    # Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;
    .param p4, "railStatsCb"    # Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;
    .param p5, "userInfoProvider"    # Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 10064
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;

    invoke-direct {v1}, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;-><init>()V

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;)V

    .line 10065
    return-void
.end method

.method static synthetic blacklist access$008(Lcom/android/internal/os/BatteryStatsImpl;)I
    .locals 2
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;

    .line 151
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumUidsRemoved:I

    add-int/lit8 v1, v0, 0x1

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumUidsRemoved:I

    return v0
.end method

.method static synthetic blacklist access$100(Lcom/android/internal/os/BatteryStatsImpl;)Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;

    .line 151
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCallback:Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

    return-object v0
.end method

.method static synthetic blacklist access$1000(Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;Z)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .param p1, "x1"    # Z

    .line 151
    invoke-static {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->resetIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;Z)Z

    move-result v0

    return v0
.end method

.method static synthetic blacklist access$1100([[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 1
    .param p0, "x0"    # [[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;
    .param p1, "x1"    # Z

    .line 151
    invoke-static {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->resetIfNotNull([[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;Z)Z

    move-result v0

    return v0
.end method

.method static synthetic blacklist access$1200(Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 151
    invoke-static {p0}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;)V

    return-void
.end method

.method static synthetic blacklist access$1300([[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V
    .locals 0
    .param p0, "x0"    # [[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;

    .line 151
    invoke-static {p0}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    return-void
.end method

.method static synthetic blacklist access$1600(Lcom/android/internal/os/BatteryStatsImpl;)Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;

    .line 151
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    return-object v0
.end method

.method static synthetic blacklist access$1702(Lcom/android/internal/os/BatteryStatsImpl;J)J
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;
    .param p1, "x1"    # J

    .line 151
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    return-wide p1
.end method

.method static synthetic blacklist access$1708(Lcom/android/internal/os/BatteryStatsImpl;)J
    .locals 4
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;

    .line 151
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    const-wide/16 v2, 0x1

    add-long/2addr v2, v0

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    return-wide v0
.end method

.method static synthetic blacklist access$1802(Lcom/android/internal/os/BatteryStatsImpl;J)J
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;
    .param p1, "x1"    # J

    .line 151
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    return-wide p1
.end method

.method static synthetic blacklist access$1808(Lcom/android/internal/os/BatteryStatsImpl;)J
    .locals 4
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;

    .line 151
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    const-wide/16 v2, 0x1

    add-long/2addr v2, v0

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    return-wide v0
.end method

.method static synthetic blacklist access$2002(Lcom/android/internal/os/BatteryStatsImpl;Z)Z
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;
    .param p1, "x1"    # Z

    .line 151
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsPerProcessStateCpuDataStale:Z

    return p1
.end method

.method static synthetic blacklist access$2102(Lcom/android/internal/os/BatteryStatsImpl;J)J
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;
    .param p1, "x1"    # J

    .line 151
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    return-wide p1
.end method

.method static synthetic blacklist access$2200(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Parcel;Landroid/util/AtomicFile;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;
    .param p1, "x1"    # Landroid/os/Parcel;
    .param p2, "x2"    # Landroid/util/AtomicFile;

    .line 151
    invoke-direct {p0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl;->commitPendingDataToDisk(Landroid/os/Parcel;Landroid/util/AtomicFile;)V

    return-void
.end method

.method static synthetic blacklist access$400()I
    .locals 1

    .line 151
    sget v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    return v0
.end method

.method static synthetic blacklist access$500(Lcom/android/internal/os/BatteryStatsImpl;Z)V
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;
    .param p1, "x1"    # Z

    .line 151
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->noteUsbConnectionStateLocked(Z)V

    return-void
.end method

.method static synthetic blacklist access$600(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;

    .line 151
    invoke-static {p0}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    return-void
.end method

.method static synthetic blacklist access$700([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V
    .locals 0
    .param p0, "x0"    # [Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;

    .line 151
    invoke-static {p0}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    return-void
.end method

.method static synthetic blacklist access$800(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;
    .param p1, "x1"    # Z

    .line 151
    invoke-static {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->resetIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;Z)Z

    move-result v0

    return v0
.end method

.method static synthetic blacklist access$900([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 1
    .param p0, "x0"    # [Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;
    .param p1, "x1"    # Z

    .line 151
    invoke-static {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->resetIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;Z)Z

    move-result v0

    return v0
.end method

.method private greylist-max-o addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "cmd"    # B
    .param p4, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3759
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    if-nez v0, :cond_0

    .line 3762
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataPosition()I

    move-result v0

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 3763
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0, v1}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    .line 3764
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    add-long/2addr v1, p1

    invoke-virtual {v0, v1, v2, p3, p4}, Landroid/os/BatteryStats$HistoryItem;->setTo(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3765
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3766
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 3767
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;Landroid/os/BatteryStats$HistoryItem;)V

    .line 3768
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 3769
    const/4 v0, 0x0

    iput-object v0, p4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3770
    iput-object v0, p4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3771
    const/4 v1, 0x0

    iput v1, p4, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3772
    iput-object v0, p4, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3776
    return-void

    .line 3760
    :cond_0
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Can\'t do this while iterating history!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private declared-synchronized greylist-max-o addModemTxPowerToHistory(Landroid/telephony/ModemActivityInfo;)V
    .locals 9
    .param p1, "activityInfo"    # Landroid/telephony/ModemActivityInfo;

    monitor-enter p0

    .line 11560
    if-nez p1, :cond_0

    .line 11561
    monitor-exit p0

    return-void

    .line 11563
    :cond_0
    :try_start_0
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getTransmitPowerInfo()Ljava/util/List;

    move-result-object v0

    .line 11564
    .local v0, "txPowerInfo":Ljava/util/List;, "Ljava/util/List<Landroid/telephony/ModemActivityInfo$TransmitPower;>;"
    if-eqz v0, :cond_5

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v1

    const/4 v2, 0x5

    if-eq v1, v2, :cond_1

    goto :goto_1

    .line 11567
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 11568
    .local v1, "elapsedRealtime":J
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 11569
    .local v3, "uptime":J
    const/4 v5, 0x0

    .line 11570
    .local v5, "levelMaxTimeSpent":I
    const/4 v6, 0x1

    .local v6, "i":I
    :goto_0
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v7

    if-ge v6, v7, :cond_3

    .line 11571
    invoke-interface {v0, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/telephony/ModemActivityInfo$TransmitPower;

    invoke-virtual {v7}, Landroid/telephony/ModemActivityInfo$TransmitPower;->getTimeInMillis()I

    move-result v7

    invoke-interface {v0, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/telephony/ModemActivityInfo$TransmitPower;

    .line 11572
    invoke-virtual {v8}, Landroid/telephony/ModemActivityInfo$TransmitPower;->getTimeInMillis()I

    move-result v8

    if-le v7, v8, :cond_2

    .line 11573
    move v5, v6

    .line 11570
    :cond_2
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 11576
    .end local v6    # "i":I
    .end local p0    # "this":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_3
    const/4 v6, 0x4

    if-ne v5, v6, :cond_4

    .line 11577
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v8, 0x80000

    or-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 11578
    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11580
    :cond_4
    monitor-exit p0

    return-void

    .line 11565
    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    .end local v5    # "levelMaxTimeSpent":I
    :cond_5
    :goto_1
    monitor-exit p0

    return-void

    .line 11559
    .end local v0    # "txPowerInfo":Ljava/util/List;, "Ljava/util/List<Landroid/telephony/ModemActivityInfo$TransmitPower;>;"
    .end local p1    # "activityInfo":Landroid/telephony/ModemActivityInfo;
    :catchall_0
    move-exception p1

    monitor-exit p0

    throw p1
.end method

.method private greylist-max-o addPackageChange(Landroid/os/BatteryStats$PackageChange;)V
    .locals 1
    .param p1, "pc"    # Landroid/os/BatteryStats$PackageChange;

    .line 5181
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-nez v0, :cond_0

    .line 5182
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 5184
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5185
    return-void
.end method

.method private greylist-max-o buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I
    .locals 3
    .param p1, "h"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3403
    iget-byte v0, p1, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    shl-int/lit8 v0, v0, 0x19

    const/high16 v1, -0x2000000

    and-int/2addr v0, v1

    iget-short v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    shl-int/lit8 v1, v1, 0xf

    const v2, 0x1ff8000

    and-int/2addr v1, v2

    or-int/2addr v0, v1

    iget-char v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    shl-int/lit8 v1, v1, 0x1

    and-int/lit16 v1, v1, 0x7ffe

    or-int/2addr v0, v1

    return v0
.end method

.method private greylist-max-o buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I
    .locals 4
    .param p1, "h"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3415
    const/4 v0, 0x0

    .line 3416
    .local v0, "plugType":I
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    and-int/lit8 v1, v1, 0x1

    if-eqz v1, :cond_0

    .line 3417
    const/4 v0, 0x1

    goto :goto_0

    .line 3418
    :cond_0
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    and-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_1

    .line 3419
    const/4 v0, 0x2

    goto :goto_0

    .line 3420
    :cond_1
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    and-int/lit8 v1, v1, 0x4

    if-eqz v1, :cond_2

    .line 3421
    const/4 v0, 0x3

    .line 3423
    :cond_2
    :goto_0
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    and-int/lit8 v1, v1, 0x7

    shl-int/lit8 v1, v1, 0x1d

    iget-byte v2, p1, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    and-int/lit8 v2, v2, 0x7

    shl-int/lit8 v2, v2, 0x1a

    or-int/2addr v1, v2

    and-int/lit8 v2, v0, 0x3

    shl-int/lit8 v2, v2, 0x18

    or-int/2addr v1, v2

    iget v2, p1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, 0xffffff

    and-int/2addr v2, v3

    or-int/2addr v1, v2

    return v1
.end method

.method private blacklist commitPendingDataToDisk(Landroid/os/Parcel;Landroid/util/AtomicFile;)V
    .locals 6
    .param p1, "p"    # Landroid/os/Parcel;
    .param p2, "file"    # Landroid/util/AtomicFile;

    .line 13664
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {v0}, Ljava/util/concurrent/locks/ReentrantLock;->lock()V

    .line 13665
    const/4 v0, 0x0

    .line 13667
    .local v0, "fos":Ljava/io/FileOutputStream;
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 13668
    .local v1, "startTime":J
    invoke-virtual {p2}, Landroid/util/AtomicFile;->startWrite()Ljava/io/FileOutputStream;

    move-result-object v3

    move-object v0, v3

    .line 13669
    invoke-virtual {p1}, Landroid/os/Parcel;->marshall()[B

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/io/FileOutputStream;->write([B)V

    .line 13670
    invoke-virtual {v0}, Ljava/io/FileOutputStream;->flush()V

    .line 13671
    invoke-virtual {p2, v0}, Landroid/util/AtomicFile;->finishWrite(Ljava/io/FileOutputStream;)V

    .line 13677
    const-string v3, "batterystats"

    .line 13678
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    sub-long/2addr v4, v1

    .line 13677
    invoke-static {v3, v4, v5}, Lcom/android/internal/logging/EventLogTags;->writeCommitSysConfigFile(Ljava/lang/String;J)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .end local v1    # "startTime":J
    goto :goto_0

    .line 13683
    :catchall_0
    move-exception v1

    goto :goto_1

    .line 13679
    :catch_0
    move-exception v1

    .line 13680
    .local v1, "e":Ljava/io/IOException;
    :try_start_1
    const-string v2, "BatteryStatsImpl"

    const-string v3, "Error writing battery statistics"

    invoke-static {v2, v3, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13681
    invoke-virtual {p2, v0}, Landroid/util/AtomicFile;->failWrite(Ljava/io/FileOutputStream;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13683
    .end local v1    # "e":Ljava/io/IOException;
    :goto_0
    invoke-virtual {p1}, Landroid/os/Parcel;->recycle()V

    .line 13684
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {v1}, Ljava/util/concurrent/locks/ReentrantLock;->unlock()V

    .line 13685
    nop

    .line 13688
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->writeThermalRecFile()V

    .line 13690
    return-void

    .line 13683
    :goto_1
    invoke-virtual {p1}, Landroid/os/Parcel;->recycle()V

    .line 13684
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {v2}, Ljava/util/concurrent/locks/ReentrantLock;->unlock()V

    .line 13685
    throw v1
.end method

.method private greylist-max-o computeHistoryStepDetails(Landroid/os/BatteryStats$HistoryStepDetails;Landroid/os/BatteryStats$HistoryStepDetails;)V
    .locals 9
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryStepDetails;
    .param p2, "last"    # Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3431
    if-eqz p2, :cond_0

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    goto :goto_0

    :cond_0
    move-object v0, p1

    .line 3435
    .local v0, "tmp":Landroid/os/BatteryStats$HistoryStepDetails;
    :goto_0
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->requestImmediateCpuUpdate()V

    .line 3437
    if-nez p2, :cond_2

    .line 3440
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 3441
    .local v1, "NU":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v1, :cond_1

    .line 3442
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 3443
    .local v3, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepUserTime:J

    iput-wide v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepUserTime:J

    .line 3444
    iget-wide v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepSystemTime:J

    iput-wide v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepSystemTime:J

    .line 3441
    .end local v3    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 3446
    .end local v2    # "i":I
    :cond_1
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 3447
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    .line 3448
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    .line 3449
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    .line 3450
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    .line 3451
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    .line 3452
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    .line 3453
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    .line 3454
    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryStepDetails;->clear()V

    .line 3455
    return-void

    .line 3467
    .end local v1    # "NU":I
    :cond_2
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->userTime:I

    .line 3468
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->systemTime:I

    .line 3469
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statUserTime:I

    .line 3470
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statSystemTime:I

    .line 3471
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIOWaitTime:I

    .line 3472
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIrqTime:I

    .line 3473
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statSoftIrqTime:I

    .line 3474
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    sub-long/2addr v1, v3

    long-to-int v1, v1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIdlTime:I

    .line 3475
    const/4 v1, -0x1

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    .line 3476
    const/4 v1, 0x0

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    .line 3477
    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    .line 3478
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 3479
    .restart local v1    # "NU":I
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_2
    if-ge v2, v1, :cond_6

    .line 3480
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 3481
    .restart local v3    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepUserTime:J

    iget-wide v6, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepUserTime:J

    sub-long/2addr v4, v6

    long-to-int v4, v4

    .line 3482
    .local v4, "totalUTime":I
    iget-wide v5, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepSystemTime:J

    iget-wide v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepSystemTime:J

    sub-long/2addr v5, v7

    long-to-int v5, v5

    .line 3483
    .local v5, "totalSTime":I
    add-int v6, v4, v5

    .line 3484
    .local v6, "totalTime":I
    iget-wide v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepUserTime:J

    iput-wide v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepUserTime:J

    .line 3485
    iget-wide v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepSystemTime:J

    iput-wide v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepSystemTime:J

    .line 3486
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    add-int/2addr v7, v8

    if-gt v6, v7, :cond_3

    .line 3487
    goto :goto_3

    .line 3489
    :cond_3
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    add-int/2addr v7, v8

    if-gt v6, v7, :cond_4

    .line 3490
    iget v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    .line 3491
    iput v4, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    .line 3492
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    goto :goto_3

    .line 3494
    :cond_4
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    .line 3495
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    .line 3496
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    .line 3497
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    add-int/2addr v7, v8

    if-gt v6, v7, :cond_5

    .line 3498
    iget v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    .line 3499
    iput v4, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    .line 3500
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    goto :goto_3

    .line 3502
    :cond_5
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    .line 3503
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    .line 3504
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    .line 3505
    iget v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    .line 3506
    iput v4, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    .line 3507
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    .line 3479
    .end local v3    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v4    # "totalUTime":I
    .end local v5    # "totalSTime":I
    .end local v6    # "totalTime":I
    :goto_3
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 3511
    .end local v2    # "i":I
    :cond_6
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 3512
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    .line 3513
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    .line 3514
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    .line 3515
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    .line 3516
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    .line 3517
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    .line 3518
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    .line 3519
    return-void
.end method

.method private greylist-max-o computeTimePerLevel([JI)J
    .locals 7
    .param p1, "steps"    # [J
    .param p2, "numSteps"    # I

    .line 12875
    if-gtz p2, :cond_0

    .line 12876
    const-wide/16 v0, -0x1

    return-wide v0

    .line 12878
    :cond_0
    const-wide/16 v0, 0x0

    .line 12879
    .local v0, "total":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, p2, :cond_1

    .line 12880
    aget-wide v3, p1, v2

    const-wide v5, 0xffffffffffL

    and-long/2addr v3, v5

    add-long/2addr v0, v3

    .line 12879
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 12882
    .end local v2    # "i":I
    :cond_1
    int-to-long v2, p2

    div-long v2, v0, v2

    return-wide v2
.end method

.method private static blacklist detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;)V
    .locals 0
    .param p0, "counter"    # Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 6819
    if-eqz p0, :cond_0

    .line 6820
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->detach()V

    .line 6822
    :cond_0
    return-void
.end method

.method private static blacklist detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;",
            ">(TT;)V"
        }
    .end annotation

    .line 6797
    .local p0, "t":Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;, "TT;"
    if-eqz p0, :cond_0

    .line 6798
    invoke-interface {p0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;->detach()V

    .line 6800
    :cond_0
    return-void
.end method

.method private static blacklist detachIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;",
            ">([TT;)V"
        }
    .end annotation

    .line 6803
    .local p0, "t":[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;, "[TT;"
    if-eqz p0, :cond_0

    .line 6804
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    array-length v1, p0

    if-ge v0, v1, :cond_0

    .line 6805
    aget-object v1, p0, v0

    invoke-static {v1}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 6804
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 6808
    .end local v0    # "i":I
    :cond_0
    return-void
.end method

.method private static blacklist detachIfNotNull([[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;",
            ">([[TT;)V"
        }
    .end annotation

    .line 6811
    .local p0, "t":[[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;, "[[TT;"
    if-eqz p0, :cond_0

    .line 6812
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    array-length v1, p0

    if-ge v0, v1, :cond_0

    .line 6813
    aget-object v1, p0, v0

    invoke-static {v1}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 6812
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 6816
    .end local v0    # "i":I
    :cond_0
    return-void
.end method

.method private static greylist-max-o excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
    .locals 4
    .param p0, "array"    # [Ljava/lang/String;
    .param p1, "str"    # Ljava/lang/String;

    .line 6333
    invoke-static {p0, p1}, Lcom/android/internal/util/ArrayUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I

    move-result v0

    .line 6334
    .local v0, "index":I
    if-ltz v0, :cond_2

    .line 6335
    array-length v1, p0

    add-int/lit8 v1, v1, -0x1

    new-array v1, v1, [Ljava/lang/String;

    .line 6336
    .local v1, "newArray":[Ljava/lang/String;
    if-lez v0, :cond_0

    .line 6337
    const/4 v2, 0x0

    invoke-static {p0, v2, v1, v2, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6339
    :cond_0
    array-length v2, p0

    add-int/lit8 v2, v2, -0x1

    if-ge v0, v2, :cond_1

    .line 6340
    add-int/lit8 v2, v0, 0x1

    array-length v3, p0

    sub-int/2addr v3, v0

    add-int/lit8 v3, v3, -0x1

    invoke-static {p0, v2, v1, v0, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6342
    :cond_1
    return-object v1

    .line 6344
    .end local v1    # "newArray":[Ljava/lang/String;
    :cond_2
    return-object p0
.end method

.method private greylist-max-o fixPhoneServiceState(II)I
    .locals 2
    .param p1, "state"    # I
    .param p2, "signalBin"    # I

    .line 5283
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 5286
    if-ne p1, v1, :cond_0

    if-lez p2, :cond_0

    .line 5288
    const/4 p1, 0x0

    .line 5292
    :cond_0
    return p1
.end method

.method private greylist-max-o getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I
    .locals 1
    .param p1, "uid"    # I
    .param p2, "workChain"    # Landroid/os/WorkSource$WorkChain;

    .line 5842
    if-eqz p2, :cond_0

    .line 5843
    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v0

    return v0

    .line 5846
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v0

    return v0
.end method

.method private greylist-max-o getDeltaModemActivityInfo(Landroid/telephony/ModemActivityInfo;)Landroid/telephony/ModemActivityInfo;
    .locals 9
    .param p1, "activityInfo"    # Landroid/telephony/ModemActivityInfo;

    .line 11331
    if-nez p1, :cond_0

    .line 11332
    const/4 v0, 0x0

    return-object v0

    .line 11334
    :cond_0
    const/4 v0, 0x5

    new-array v8, v0, [I

    .line 11335
    .local v8, "txTimeMs":[I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    .line 11336
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getTransmitPowerInfo()Ljava/util/List;

    move-result-object v2

    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/telephony/ModemActivityInfo$TransmitPower;

    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo$TransmitPower;->getTimeInMillis()I

    move-result v2

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11337
    invoke-virtual {v3}, Landroid/telephony/ModemActivityInfo;->getTransmitPowerInfo()Ljava/util/List;

    move-result-object v3

    invoke-interface {v3, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/telephony/ModemActivityInfo$TransmitPower;

    invoke-virtual {v3}, Landroid/telephony/ModemActivityInfo$TransmitPower;->getTimeInMillis()I

    move-result v3

    sub-int/2addr v2, v3

    aput v2, v8, v1

    .line 11335
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 11339
    .end local v1    # "i":I
    :cond_1
    new-instance v0, Landroid/telephony/ModemActivityInfo;

    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getTimestamp()J

    move-result-wide v2

    .line 11340
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v1

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    invoke-virtual {v4}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v4

    sub-int v4, v1, v4

    .line 11341
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v1

    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    invoke-virtual {v5}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v5

    sub-int v5, v1, v5

    .line 11343
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()I

    move-result v1

    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    invoke-virtual {v6}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()I

    move-result v6

    sub-int v7, v1, v6

    move-object v1, v0

    move-object v6, v8

    invoke-direct/range {v1 .. v7}, Landroid/telephony/ModemActivityInfo;-><init>(JII[II)V

    .line 11344
    .local v0, "deltaInfo":Landroid/telephony/ModemActivityInfo;
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11345
    return-object v0
.end method

.method private greylist-max-o getPowerManagerWakeLockLevel(I)I
    .locals 4
    .param p1, "battertStatsWakelockType"    # I

    .line 4403
    const/4 v0, 0x1

    if-eqz p1, :cond_3

    if-eq p1, v0, :cond_2

    const/4 v0, 0x2

    const/4 v1, -0x1

    const-string v2, "BatteryStatsImpl"

    if-eq p1, v0, :cond_1

    const/16 v0, 0x12

    if-eq p1, v0, :cond_0

    .line 4421
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Illegal wakelock type in batterystats: "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 4422
    return v1

    .line 4413
    :cond_0
    const/16 v0, 0x80

    return v0

    .line 4417
    :cond_1
    const-string v0, "Illegal window wakelock type observed in batterystats."

    invoke-static {v2, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 4418
    return v1

    .line 4410
    :cond_2
    const/16 v0, 0x1a

    return v0

    .line 4406
    :cond_3
    return v0
.end method

.method private static greylist-max-o includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
    .locals 3
    .param p0, "array"    # [Ljava/lang/String;
    .param p1, "str"    # Ljava/lang/String;

    .line 6323
    invoke-static {p0, p1}, Lcom/android/internal/util/ArrayUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I

    move-result v0

    if-ltz v0, :cond_0

    .line 6324
    return-object p0

    .line 6326
    :cond_0
    array-length v0, p0

    add-int/lit8 v0, v0, 0x1

    new-array v0, v0, [Ljava/lang/String;

    .line 6327
    .local v0, "newArray":[Ljava/lang/String;
    array-length v1, p0

    const/4 v2, 0x0

    invoke-static {p0, v2, v0, v2, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6328
    array-length v1, p0

    aput-object p1, v0, v1

    .line 6329
    return-object v0
.end method

.method private greylist-max-o init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V
    .locals 0
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 1141
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 1142
    return-void
.end method

.method private greylist-max-o initActiveHistoryEventsLocked(JJ)V
    .locals 15
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    .line 10936
    move-object v8, p0

    const/4 v0, 0x0

    move v9, v0

    .local v9, "i":I
    :goto_0
    const/16 v0, 0x16

    if-ge v9, v0, :cond_4

    .line 10937
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_0

    const/4 v0, 0x1

    if-ne v9, v0, :cond_0

    .line 10939
    goto :goto_3

    .line 10941
    :cond_0
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v9}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v10

    .line 10942
    .local v10, "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-nez v10, :cond_1

    .line 10943
    goto :goto_3

    .line 10945
    :cond_1
    invoke-virtual {v10}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v11

    :goto_1
    invoke-interface {v11}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-interface {v11}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    move-object v12, v0

    check-cast v12, Ljava/util/Map$Entry;

    .line 10946
    .local v12, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface {v12}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    move-object v13, v0

    check-cast v13, Landroid/util/SparseIntArray;

    .line 10947
    .local v13, "uids":Landroid/util/SparseIntArray;
    const/4 v0, 0x0

    move v14, v0

    .local v14, "j":I
    :goto_2
    invoke-virtual {v13}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-ge v14, v0, :cond_2

    .line 10948
    invoke-interface {v12}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v0

    move-object v6, v0

    check-cast v6, Ljava/lang/String;

    .line 10949
    invoke-virtual {v13, v14}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v7

    .line 10948
    move-object v0, p0

    move-wide/from16 v1, p1

    move-wide/from16 v3, p3

    move v5, v9

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 10947
    add-int/lit8 v14, v14, 0x1

    goto :goto_2

    .line 10951
    .end local v12    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v13    # "uids":Landroid/util/SparseIntArray;
    .end local v14    # "j":I
    :cond_2
    goto :goto_1

    .line 10936
    .end local v10    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    :cond_3
    :goto_3
    add-int/lit8 v9, v9, 0x1

    goto :goto_0

    .line 10953
    .end local v9    # "i":I
    :cond_4
    return-void
.end method

.method private greylist-max-o initKernelSingleUidTimeReaderLocked()Z
    .locals 3

    .line 603
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    const/4 v1, 0x0

    if-nez v0, :cond_3

    .line 604
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-nez v0, :cond_0

    .line 605
    return v1

    .line 607
    :cond_0
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    if-nez v2, :cond_1

    .line 608
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v2, v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readFreqs(Lcom/android/internal/os/PowerProfile;)[J

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    .line 610
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    if-eqz v0, :cond_2

    .line 611
    new-instance v0, Lcom/android/internal/os/KernelSingleUidTimeReader;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    array-length v2, v2

    invoke-direct {v0, v2}, Lcom/android/internal/os/KernelSingleUidTimeReader;-><init>(I)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    goto :goto_0

    .line 613
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->allUidTimesAvailable()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 614
    return v1

    .line 617
    :cond_3
    :goto_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->allUidTimesAvailable()Z

    move-result v0

    const/4 v2, 0x1

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    .line 618
    invoke-virtual {v0}, Lcom/android/internal/os/KernelSingleUidTimeReader;->singleUidCpuTimesAvailable()Z

    move-result v0

    if-eqz v0, :cond_4

    move v1, v2

    goto :goto_1

    :cond_4
    nop

    :goto_1
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 619
    return v2
.end method

.method public static greylist-max-o isOnBattery(II)Z
    .locals 1
    .param p0, "plugType"    # I
    .param p1, "status"    # I

    .line 12810
    const/4 v0, 0x1

    if-nez p0, :cond_0

    if-eq p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method private greylist-max-o noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;I)V
    .locals 19
    .param p1, "historyItem"    # I
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "workSource"    # Landroid/os/WorkSource;
    .param p4, "uid"    # I

    .line 4158
    move-object/from16 v8, p0

    move/from16 v9, p1

    move-object/from16 v10, p2

    move-object/from16 v11, p3

    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_0

    .line 4159
    return-void

    .line 4162
    :cond_0
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v12

    .line 4163
    .local v12, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v14

    .line 4165
    .local v14, "uptime":J
    const/4 v7, 0x0

    if-eqz v11, :cond_6

    .line 4166
    const/4 v0, 0x0

    move v6, v0

    move/from16 v0, p4

    .end local p4    # "uid":I
    .local v0, "uid":I
    .local v6, "i":I
    :goto_0
    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->size()I

    move-result v1

    if-ge v6, v1, :cond_2

    .line 4167
    invoke-virtual {v11, v6}, Landroid/os/WorkSource;->getUid(I)I

    move-result v1

    invoke-virtual {v8, v1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 4168
    .end local v0    # "uid":I
    .local v5, "uid":I
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v9, v10, v5, v7}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 4169
    move-object/from16 v0, p0

    move-wide v1, v12

    move-wide v3, v14

    move/from16 v16, v5

    .end local v5    # "uid":I
    .local v16, "uid":I
    move/from16 v5, p1

    move/from16 v17, v6

    .end local v6    # "i":I
    .local v17, "i":I
    move-object/from16 v6, p2

    move v11, v7

    move/from16 v7, v16

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_1

    .line 4168
    .end local v16    # "uid":I
    .end local v17    # "i":I
    .restart local v5    # "uid":I
    .restart local v6    # "i":I
    :cond_1
    move/from16 v16, v5

    move/from16 v17, v6

    move v11, v7

    .line 4166
    .end local v5    # "uid":I
    .end local v6    # "i":I
    .restart local v16    # "uid":I
    .restart local v17    # "i":I
    :goto_1
    add-int/lit8 v6, v17, 0x1

    move v7, v11

    move/from16 v0, v16

    move-object/from16 v11, p3

    .end local v17    # "i":I
    .restart local v6    # "i":I
    goto :goto_0

    .end local v16    # "uid":I
    .restart local v0    # "uid":I
    :cond_2
    move/from16 v17, v6

    move v11, v7

    .line 4173
    .end local v6    # "i":I
    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v7

    .line 4174
    .local v7, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v7, :cond_5

    .line 4175
    const/4 v1, 0x0

    move v6, v1

    .restart local v6    # "i":I
    :goto_2
    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v1

    if-ge v6, v1, :cond_4

    .line 4176
    invoke-interface {v7, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v1}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    invoke-virtual {v8, v1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 4177
    .end local v0    # "uid":I
    .restart local v5    # "uid":I
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v9, v10, v5, v11}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 4178
    move-object/from16 v0, p0

    move-wide v1, v12

    move-wide v3, v14

    move/from16 v16, v5

    .end local v5    # "uid":I
    .restart local v16    # "uid":I
    move/from16 v5, p1

    move/from16 v17, v6

    .end local v6    # "i":I
    .restart local v17    # "i":I
    move-object/from16 v6, p2

    move-object/from16 v18, v7

    .end local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v18, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    move/from16 v7, v16

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_3

    .line 4177
    .end local v16    # "uid":I
    .end local v17    # "i":I
    .end local v18    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v5    # "uid":I
    .restart local v6    # "i":I
    .restart local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_3
    move/from16 v16, v5

    move/from16 v17, v6

    move-object/from16 v18, v7

    .line 4175
    .end local v5    # "uid":I
    .end local v6    # "i":I
    .end local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v16    # "uid":I
    .restart local v17    # "i":I
    .restart local v18    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :goto_3
    add-int/lit8 v6, v17, 0x1

    move/from16 v0, v16

    move-object/from16 v7, v18

    .end local v17    # "i":I
    .restart local v6    # "i":I
    goto :goto_2

    .end local v16    # "uid":I
    .end local v18    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v0    # "uid":I
    .restart local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_4
    move/from16 v17, v6

    move-object/from16 v18, v7

    .end local v6    # "i":I
    .end local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v17    # "i":I
    .restart local v18    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    goto :goto_4

    .line 4174
    .end local v17    # "i":I
    .end local v18    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_5
    move-object/from16 v18, v7

    .line 4182
    .end local v7    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :goto_4
    goto :goto_6

    .line 4183
    .end local v0    # "uid":I
    .restart local p4    # "uid":I
    :cond_6
    move v11, v7

    move/from16 v0, p4

    invoke-virtual {v8, v0}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    .line 4185
    .end local p4    # "uid":I
    .local v7, "uid":I
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v9, v10, v7, v11}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 4186
    move-object/from16 v0, p0

    move-wide v1, v12

    move-wide v3, v14

    move/from16 v5, p1

    move-object/from16 v6, p2

    move v11, v7

    .end local v7    # "uid":I
    .local v11, "uid":I
    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_5

    .line 4185
    .end local v11    # "uid":I
    .restart local v7    # "uid":I
    :cond_7
    move v11, v7

    .line 4189
    .end local v7    # "uid":I
    .restart local v11    # "uid":I
    :goto_5
    move v0, v11

    .end local v11    # "uid":I
    .restart local v0    # "uid":I
    :goto_6
    return-void
.end method

.method private greylist-max-o noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZ)V
    .locals 7
    .param p1, "workChain"    # Landroid/os/WorkSource$WorkChain;
    .param p2, "uid"    # I
    .param p3, "isUnoptimized"    # Z

    .line 5797
    invoke-direct {p0, p2, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p2

    .line 5798
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5799
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5800
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    if-nez v4, :cond_0

    .line 5801
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x100000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5804
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5805
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5807
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    .line 5808
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteBluetoothScanStartedLocked(JZ)V

    .line 5809
    return-void
.end method

.method private greylist-max-o noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZ)V
    .locals 7
    .param p1, "workChain"    # Landroid/os/WorkSource$WorkChain;
    .param p2, "uid"    # I
    .param p3, "isUnoptimized"    # Z

    .line 5827
    invoke-direct {p0, p2, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p2

    .line 5828
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5829
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5830
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    .line 5831
    if-nez v4, :cond_0

    .line 5832
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x100001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5835
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5836
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5838
    :cond_0
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteBluetoothScanStoppedLocked(JZ)V

    .line 5839
    return-void
.end method

.method private greylist-max-o noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 15
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4575
    move-object v8, p0

    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4576
    .local v9, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4577
    .local v11, "uptime":J
    if-nez p2, :cond_0

    .line 4578
    move-object/from16 v0, p1

    move-object v13, v0

    .end local p2    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    goto :goto_0

    .line 4577
    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p2    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v13, p2

    .line 4580
    .end local p2    # "historyName":Ljava/lang/String;
    .local v13, "historyName":Ljava/lang/String;
    :goto_0
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4014

    const/4 v2, 0x0

    move/from16 v14, p3

    invoke-virtual {v0, v1, v13, v14, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4582
    return-void

    .line 4584
    :cond_1
    const/16 v5, 0x4014

    move-object v0, p0

    move-wide v1, v9

    move-wide v3, v11

    move-object v6, v13

    move/from16 v7, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4586
    return-void
.end method

.method private greylist-max-o noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 15
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4538
    move-object v8, p0

    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4539
    .local v9, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4540
    .local v11, "uptime":J
    if-nez p2, :cond_0

    .line 4541
    move-object/from16 v0, p1

    move-object v13, v0

    .end local p2    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    goto :goto_0

    .line 4540
    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p2    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v13, p2

    .line 4543
    .end local p2    # "historyName":Ljava/lang/String;
    .local v13, "historyName":Ljava/lang/String;
    :goto_0
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8014

    const/4 v2, 0x0

    move/from16 v14, p3

    invoke-virtual {v0, v1, v13, v14, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4545
    return-void

    .line 4547
    :cond_1
    const v5, 0x8014

    move-object v0, p0

    move-wide v1, v9

    move-wide v3, v11

    move-object v6, v13

    move/from16 v7, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4549
    return-void
.end method

.method private greylist-max-o noteMobileRadioApWakeupLocked(JJI)V
    .locals 8
    .param p1, "elapsedRealtimeMillis"    # J
    .param p3, "uptimeMillis"    # J
    .param p5, "uid"    # I

    .line 4993
    invoke-virtual {p0, p5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p5

    .line 4994
    const/16 v5, 0x13

    const-string v6, ""

    move-object v0, p0

    move-wide v1, p1

    move-wide v3, p3

    move v7, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4996
    invoke-virtual {p0, p5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteMobileRadioApWakeupLocked()V

    .line 4997
    return-void
.end method

.method private greylist-max-o noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;)V
    .locals 8
    .param p1, "uid"    # I
    .param p2, "workChain"    # Landroid/os/WorkSource$WorkChain;

    .line 4723
    invoke-direct {p0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p1

    .line 4724
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4725
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4726
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    if-nez v4, :cond_0

    .line 4727
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x20000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4730
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4732
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    const/4 v5, 0x1

    add-int/2addr v4, v5

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    .line 4734
    const/4 v4, 0x6

    if-nez p2, :cond_1

    .line 4735
    const/4 v6, 0x0

    invoke-static {v4, p1, v6, v5}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;I)V

    goto :goto_0

    .line 4738
    :cond_1
    nop

    .line 4739
    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v6

    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v7

    .line 4738
    invoke-static {v4, v6, v7, v5}, Lcom/android/internal/util/FrameworkStatsLog;->write(I[I[Ljava/lang/String;I)V

    .line 4743
    :goto_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartGps(J)V

    .line 4744
    return-void
.end method

.method private greylist-max-o noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;)V
    .locals 12
    .param p1, "uid"    # I
    .param p2, "workChain"    # Landroid/os/WorkSource$WorkChain;

    .line 4747
    invoke-direct {p0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p1

    .line 4748
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4749
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4750
    .local v10, "uptime":J
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    .line 4751
    if-nez v0, :cond_0

    .line 4752
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v2, -0x20000001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4757
    const/4 v1, 0x5

    const/4 v6, 0x0

    move-object v0, p0

    move-wide v2, v8

    move-wide v4, v10

    move v7, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZI)V

    .line 4760
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4761
    const/4 v0, -0x1

    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->stopAllGpsSignalQualityTimersLocked(I)V

    .line 4762
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 4765
    :cond_0
    const/4 v0, 0x0

    const/4 v1, 0x6

    if-nez p2, :cond_1

    .line 4766
    const/4 v2, 0x0

    invoke-static {v1, p1, v2, v0}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;I)V

    goto :goto_0

    .line 4769
    :cond_1
    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v2

    .line 4770
    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v3

    .line 4769
    invoke-static {v1, v2, v3, v0}, Lcom/android/internal/util/FrameworkStatsLog;->write(I[I[Ljava/lang/String;I)V

    .line 4773
    :goto_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopGps(J)V

    .line 4774
    return-void
.end method

.method private greylist-max-o noteUsbConnectionStateLocked(Z)V
    .locals 5
    .param p1, "connected"    # Z

    .line 5258
    if-eqz p1, :cond_0

    const/4 v0, 0x2

    goto :goto_0

    :cond_0
    const/4 v0, 0x1

    .line 5259
    .local v0, "newState":I
    :goto_0
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    if-eq v1, v0, :cond_2

    .line 5260
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    .line 5261
    if-eqz p1, :cond_1

    .line 5262
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v3, 0x40000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    goto :goto_1

    .line 5264
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v3, -0x40001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5266
    :goto_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5268
    :cond_2
    return-void
.end method

.method private greylist-max-o noteWifiRadioApWakeupLocked(JJI)V
    .locals 8
    .param p1, "elapsedRealtimeMillis"    # J
    .param p3, "uptimeMillis"    # J
    .param p5, "uid"    # I

    .line 5899
    invoke-virtual {p0, p5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p5

    .line 5900
    const/16 v5, 0x13

    const-string v6, ""

    move-object v0, p0

    move-wide v1, p1

    move-wide v3, p3

    move v7, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5902
    invoke-virtual {p0, p5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRadioApWakeupLocked()V

    .line 5903
    return-void
.end method

.method private greylist-max-o readBatteryLevelInt(ILandroid/os/BatteryStats$HistoryItem;)V
    .locals 1
    .param p1, "batteryLevelInt"    # I
    .param p2, "out"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3409
    const/high16 v0, -0x2000000

    and-int/2addr v0, p1

    ushr-int/lit8 v0, v0, 0x19

    int-to-byte v0, v0

    iput-byte v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 3410
    const v0, 0x1ff8000

    and-int/2addr v0, p1

    ushr-int/lit8 v0, v0, 0xf

    int-to-short v0, v0

    iput-short v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    .line 3411
    and-int/lit16 v0, p1, 0x7ffe

    ushr-int/lit8 v0, v0, 0x1

    int-to-char v0, v0

    iput-char v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    .line 3412
    return-void
.end method

.method private greylist-max-o readDailyItemsLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    .locals 8
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;

    .line 10414
    const-string v0, "Failed parsing daily "

    const-string v1, "BatteryStatsImpl"

    :goto_0
    :try_start_0
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v2

    move v3, v2

    .local v3, "type":I
    const/4 v4, 0x1

    const/4 v5, 0x2

    if-eq v2, v5, :cond_0

    if-eq v3, v4, :cond_0

    goto :goto_0

    .line 10419
    :cond_0
    if-ne v3, v5, :cond_5

    .line 10423
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v2

    .line 10424
    .local v2, "outerDepth":I
    :cond_1
    :goto_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v5

    move v3, v5

    if-eq v5, v4, :cond_6

    const/4 v5, 0x3

    if-ne v3, v5, :cond_2

    .line 10425
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v6

    if-le v6, v2, :cond_6

    .line 10426
    :cond_2
    if-eq v3, v5, :cond_1

    const/4 v5, 0x4

    if-ne v3, v5, :cond_3

    .line 10427
    goto :goto_1

    .line 10430
    :cond_3
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v5

    .line 10431
    .local v5, "tagName":Ljava/lang/String;
    const-string v6, "item"

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    .line 10432
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemTagLocked(Lorg/xmlpull/v1/XmlPullParser;)V

    goto :goto_2

    .line 10434
    :cond_4
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Unknown element under <daily-items>: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10435
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 10434
    invoke-static {v1, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10436
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10438
    .end local v5    # "tagName":Ljava/lang/String;
    :goto_2
    goto :goto_1

    .line 10420
    .end local v2    # "outerDepth":I
    :cond_5
    new-instance v2, Ljava/lang/IllegalStateException;

    const-string/jumbo v4, "no start tag found"

    invoke-direct {v2, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/internal/os/BatteryStatsImpl;
    .end local p1    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    throw v2
    :try_end_0
    .catch Ljava/lang/IllegalStateException; {:try_start_0 .. :try_end_0} :catch_5
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_4
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_3
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_0 .. :try_end_0} :catch_2
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10450
    .end local v3    # "type":I
    .restart local p0    # "this":Lcom/android/internal/os/BatteryStatsImpl;
    .restart local p1    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    :catch_0
    move-exception v2

    .line 10451
    .local v2, "e":Ljava/lang/IndexOutOfBoundsException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 10448
    .end local v2    # "e":Ljava/lang/IndexOutOfBoundsException;
    :catch_1
    move-exception v2

    .line 10449
    .local v2, "e":Ljava/io/IOException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v2    # "e":Ljava/io/IOException;
    goto :goto_3

    .line 10446
    :catch_2
    move-exception v2

    .line 10447
    .local v2, "e":Lorg/xmlpull/v1/XmlPullParserException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v2    # "e":Lorg/xmlpull/v1/XmlPullParserException;
    goto :goto_3

    .line 10444
    :catch_3
    move-exception v2

    .line 10445
    .local v2, "e":Ljava/lang/NumberFormatException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v2    # "e":Ljava/lang/NumberFormatException;
    goto :goto_3

    .line 10442
    :catch_4
    move-exception v2

    .line 10443
    .local v2, "e":Ljava/lang/NullPointerException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v2    # "e":Ljava/lang/NullPointerException;
    goto :goto_3

    .line 10440
    :catch_5
    move-exception v2

    .line 10441
    .local v2, "e":Ljava/lang/IllegalStateException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10452
    .end local v2    # "e":Ljava/lang/IllegalStateException;
    :cond_6
    :goto_3
    nop

    .line 10453
    :goto_4
    return-void
.end method

.method private greylist-max-o readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V
    .locals 2
    .param p1, "index"    # I
    .param p2, "tag"    # Landroid/os/BatteryStats$HistoryTag;

    .line 3120
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    array-length v1, v0

    if-ge p1, v1, :cond_0

    .line 3121
    aget-object v0, v0, p1

    iput-object v0, p2, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 3122
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    aget v0, v0, p1

    iput v0, p2, Landroid/os/BatteryStats$HistoryTag;->uid:I

    goto :goto_0

    .line 3124
    :cond_0
    const/4 v0, 0x0

    iput-object v0, p2, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 3125
    const/4 v0, 0x0

    iput v0, p2, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 3127
    :goto_0
    iput p1, p2, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    .line 3128
    return-void
.end method

.method private greylist-max-o readNetworkStatsLocked([Ljava/lang/String;)Landroid/net/NetworkStats;
    .locals 4
    .param p1, "ifaces"    # [Ljava/lang/String;

    .line 11024
    const-string v0, "BatteryStatsImpl"

    :try_start_0
    invoke-static {p1}, Lcom/android/internal/util/ArrayUtils;->isEmpty([Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1

    .line 11025
    const-string/jumbo v1, "netstats"

    .line 11026
    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v1

    .line 11025
    invoke-static {v1}, Landroid/net/INetworkStatsService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/INetworkStatsService;

    move-result-object v1

    .line 11027
    .local v1, "statsService":Landroid/net/INetworkStatsService;
    if-eqz v1, :cond_0

    .line 11028
    invoke-interface {v1, p1}, Landroid/net/INetworkStatsService;->getDetailedUidStats([Ljava/lang/String;)Landroid/net/NetworkStats;

    move-result-object v0

    return-object v0

    .line 11030
    :cond_0
    const-string v2, "Failed to get networkStatsService "

    invoke-static {v0, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 11035
    .end local v1    # "statsService":Landroid/net/INetworkStatsService;
    :cond_1
    goto :goto_0

    .line 11033
    :catch_0
    move-exception v1

    .line 11034
    .local v1, "e":Landroid/os/RemoteException;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "failed to read network stats for ifaces: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p1}, Ljava/util/Arrays;->toString([Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11036
    .end local v1    # "e":Landroid/os/RemoteException;
    :goto_0
    const/4 v0, 0x0

    return-object v0
.end method

.method private greylist-max-o recordCurrentTimeChangeLocked(JJJ)V
    .locals 3
    .param p1, "currentTime"    # J
    .param p3, "elapsedRealtimeMs"    # J
    .param p5, "uptimeMs"    # J

    .line 12575
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    if-eqz v0, :cond_0

    .line 12576
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput-wide p1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12577
    const/4 v0, 0x5

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {p0, p3, p4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 12578
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    const-wide/16 v1, 0x0

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12580
    :cond_0
    return-void
.end method

.method private greylist-max-o recordShutdownLocked(JJ)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    .line 12583
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    if-eqz v0, :cond_0

    .line 12584
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12585
    const/16 v0, 0x8

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 12586
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    const-wide/16 v1, 0x0

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12588
    :cond_0
    return-void
.end method

.method private greylist-max-o registerUsbStateReceiver(Landroid/content/Context;)V
    .locals 4
    .param p1, "context"    # Landroid/content/Context;

    .line 5236
    new-instance v0, Landroid/content/IntentFilter;

    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V

    .line 5237
    .local v0, "usbStateFilter":Landroid/content/IntentFilter;
    const-string v1, "android.hardware.usb.action.USB_STATE"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 5238
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$2;

    invoke-direct {v1, p0}, Lcom/android/internal/os/BatteryStatsImpl$2;-><init>(Lcom/android/internal/os/BatteryStatsImpl;)V

    invoke-virtual {p1, v1, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 5247
    monitor-enter p0

    .line 5248
    :try_start_0
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    if-nez v1, :cond_1

    .line 5249
    const/4 v1, 0x0

    invoke-virtual {p1, v1, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    move-result-object v1

    .line 5250
    .local v1, "usbState":Landroid/content/Intent;
    const/4 v2, 0x0

    if-eqz v1, :cond_0

    const-string v3, "connected"

    invoke-virtual {v1, v3, v2}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v3

    if-eqz v3, :cond_0

    const/4 v2, 0x1

    .line 5252
    .local v2, "initState":Z
    :cond_0
    invoke-direct {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteUsbConnectionStateLocked(Z)V

    .line 5254
    .end local v1    # "usbState":Landroid/content/Intent;
    .end local v2    # "initState":Z
    :cond_1
    monitor-exit p0

    .line 5255
    return-void

    .line 5254
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method private greylist-max-o reportChangesToStatsLog(Landroid/os/BatteryStats$HistoryItem;III)V
    .locals 1
    .param p1, "recentPast"    # Landroid/os/BatteryStats$HistoryItem;
    .param p2, "status"    # I
    .param p3, "plugType"    # I
    .param p4, "level"    # I

    .line 12818
    if-eqz p1, :cond_0

    iget-byte v0, p1, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    if-eq v0, p2, :cond_1

    .line 12819
    :cond_0
    const/16 v0, 0x1f

    invoke-static {v0, p2}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    .line 12821
    :cond_1
    if-eqz p1, :cond_2

    iget-byte v0, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    if-eq v0, p3, :cond_3

    .line 12822
    :cond_2
    const/16 v0, 0x20

    invoke-static {v0, p3}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    .line 12824
    :cond_3
    if-eqz p1, :cond_4

    iget-byte v0, p1, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-eq v0, p4, :cond_5

    .line 12825
    :cond_4
    const/16 v0, 0x1e

    invoke-static {v0, p4}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    .line 12827
    :cond_5
    return-void
.end method

.method private greylist-max-o requestImmediateCpuUpdate()V
    .locals 3

    .line 4230
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    const-wide/16 v1, 0x0

    invoke-interface {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToWakelockChange(J)Ljava/util/concurrent/Future;

    .line 4231
    return-void
.end method

.method private greylist-max-o requestWakelockCpuUpdate()V
    .locals 3

    .line 4226
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    const-wide/16 v1, 0x1388

    invoke-interface {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToWakelockChange(J)Ljava/util/concurrent/Future;

    .line 4227
    return-void
.end method

.method private greylist-max-o resetAllStatsLocked()V
    .locals 15

    .line 10799
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 10800
    .local v0, "uptimeMillis":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v2

    .line 10801
    .local v2, "elapsedRealtimeMillis":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    .line 10802
    const-wide/16 v5, 0x3e8

    mul-long v7, v0, v5

    mul-long v9, v2, v5

    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->initTimes(JJ)V

    .line 10803
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10804
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10805
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_0
    const/4 v8, 0x5

    if-ge v7, v8, :cond_0

    .line 10806
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v8, v8, v7

    invoke-virtual {v8, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10805
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 10809
    .end local v7    # "i":I
    :cond_0
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const/4 v9, -0x1

    if-eqz v7, :cond_1

    .line 10810
    invoke-virtual {v7}, Lcom/android/internal/os/PowerProfile;->getBatteryCapacity()D

    move-result-wide v10

    double-to-int v7, v10

    iput v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    goto :goto_1

    .line 10812
    :cond_1
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 10814
    :goto_1
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 10815
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 10816
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10817
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10818
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastIdleTimeStart:J

    .line 10819
    const-wide/16 v9, 0x0

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    .line 10820
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    .line 10821
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10822
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10823
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10824
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10825
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10826
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10827
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10828
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10829
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10830
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10831
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_2
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v11

    if-ge v7, v11, :cond_2

    .line 10832
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10831
    add-int/lit8 v7, v7, 0x1

    goto :goto_2

    .line 10834
    .end local v7    # "i":I
    :cond_2
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10835
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_3
    sget v11, Lcom/android/internal/os/BatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v7, v11, :cond_3

    .line 10836
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10835
    add-int/lit8 v7, v7, 0x1

    goto :goto_3

    .line 10838
    .end local v7    # "i":I
    :cond_3
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_4
    const/16 v11, 0xa

    if-ge v7, v11, :cond_4

    .line 10839
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10840
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10838
    add-int/lit8 v7, v7, 0x1

    goto :goto_4

    .line 10842
    .end local v7    # "i":I
    :cond_4
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10843
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10844
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10845
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10846
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10847
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10848
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10849
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_5
    const/16 v11, 0x8

    if-ge v7, v11, :cond_5

    .line 10850
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10849
    add-int/lit8 v7, v7, 0x1

    goto :goto_5

    .line 10852
    .end local v7    # "i":I
    :cond_5
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_6
    const/16 v11, 0xd

    if-ge v7, v11, :cond_6

    .line 10853
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10852
    add-int/lit8 v7, v7, 0x1

    goto :goto_6

    .line 10855
    .end local v7    # "i":I
    :cond_6
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_7
    if-ge v7, v8, :cond_7

    .line 10856
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10855
    add-int/lit8 v7, v7, 0x1

    goto :goto_7

    .line 10858
    .end local v7    # "i":I
    :cond_7
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10859
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10860
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    .line 10861
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_8
    const/4 v8, 0x2

    if-ge v7, v8, :cond_8

    .line 10862
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v8, v8, v7

    invoke-virtual {v8, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10861
    add-int/lit8 v7, v7, 0x1

    goto :goto_8

    .line 10864
    .end local v7    # "i":I
    :cond_8
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    .line 10865
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    .line 10866
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    .line 10868
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_9
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v8

    if-ge v7, v8, :cond_a

    .line 10869
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8, v7}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    mul-long v11, v0, v5

    mul-long v13, v2, v5

    invoke-virtual {v8, v11, v12, v13, v14}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->reset(JJ)Z

    move-result v8

    if-eqz v8, :cond_9

    .line 10870
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8, v7}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->detachFromTimeBase()V

    .line 10871
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8, v7}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v11

    invoke-virtual {v8, v11}, Landroid/util/SparseArray;->remove(I)V

    .line 10872
    add-int/lit8 v7, v7, -0x1

    .line 10868
    :cond_9
    add-int/lit8 v7, v7, 0x1

    goto :goto_9

    .line 10876
    .end local v7    # "i":I
    :cond_a
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_c

    .line 10877
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_a
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_b

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 10878
    .local v6, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 10879
    .end local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_a

    .line 10880
    :cond_b
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10882
    :cond_c
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_e

    .line 10883
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_b
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_d

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 10884
    .restart local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 10885
    .end local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_b

    .line 10886
    :cond_d
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10889
    :cond_e
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_10

    .line 10890
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_c
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_f

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 10891
    .restart local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 10892
    .end local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_c

    .line 10893
    :cond_f
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10896
    :cond_10
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v5}, Landroid/util/LongSparseArray;->size()I

    move-result v5

    if-lez v5, :cond_12

    .line 10897
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_d
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v6}, Landroid/util/LongSparseArray;->size()I

    move-result v6

    if-ge v5, v6, :cond_11

    .line 10898
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v7, v5}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;

    invoke-virtual {v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 10897
    add-int/lit8 v5, v5, 0x1

    goto :goto_d

    .line 10900
    .end local v5    # "i":I
    :cond_11
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v5}, Landroid/util/LongSparseArray;->clear()V

    .line 10903
    :cond_12
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_14

    .line 10904
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_e
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_13

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 10905
    .restart local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 10906
    .end local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_e

    .line 10907
    :cond_13
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10910
    :cond_14
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v5}, Lcom/android/internal/os/RailStats;->reset()V

    .line 10912
    const/4 v5, 0x0

    iput-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 10913
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 10914
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    .line 10915
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 10916
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    .line 10917
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    .line 10918
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    .line 10919
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    .line 10920
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    .line 10921
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    .line 10922
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    .line 10924
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 10925
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumUidsRemoved:I

    .line 10927
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->initDischarge()V

    .line 10929
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    .line 10930
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsHistory;->resetAllFiles()V

    .line 10932
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v5, 0x4

    invoke-virtual {v4, v5}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 10933
    return-void
.end method

.method private static blacklist resetIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;Z)Z
    .locals 1
    .param p0, "counter"    # Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .param p1, "detachIfReset"    # Z

    .line 6790
    if-eqz p0, :cond_0

    .line 6791
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    .line 6793
    :cond_0
    const/4 v0, 0x1

    return v0
.end method

.method private static blacklist resetIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 1
    .param p1, "detachIfReset"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;",
            ">(TT;Z)Z"
        }
    .end annotation

    .line 6760
    .local p0, "t":Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;, "TT;"
    if-eqz p0, :cond_0

    .line 6761
    invoke-interface {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;->reset(Z)Z

    move-result v0

    return v0

    .line 6763
    :cond_0
    const/4 v0, 0x1

    return v0
.end method

.method private static blacklist resetIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 3
    .param p1, "detachIfReset"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;",
            ">([TT;Z)Z"
        }
    .end annotation

    .line 6767
    .local p0, "t":[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;, "[TT;"
    if-eqz p0, :cond_1

    .line 6768
    const/4 v0, 0x1

    .line 6769
    .local v0, "ret":Z
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    array-length v2, p0

    if-ge v1, v2, :cond_0

    .line 6770
    aget-object v2, p0, v1

    invoke-static {v2, p1}, Lcom/android/internal/os/BatteryStatsImpl;->resetIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;Z)Z

    move-result v2

    and-int/2addr v0, v2

    .line 6769
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6772
    .end local v1    # "i":I
    :cond_0
    return v0

    .line 6774
    .end local v0    # "ret":Z
    :cond_1
    const/4 v0, 0x1

    return v0
.end method

.method private static blacklist resetIfNotNull([[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;Z)Z
    .locals 3
    .param p1, "detachIfReset"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T::",
            "Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;",
            ">([[TT;Z)Z"
        }
    .end annotation

    .line 6778
    .local p0, "t":[[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;, "[[TT;"
    if-eqz p0, :cond_1

    .line 6779
    const/4 v0, 0x1

    .line 6780
    .local v0, "ret":Z
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    array-length v2, p0

    if-ge v1, v2, :cond_0

    .line 6781
    aget-object v2, p0, v1

    invoke-static {v2, p1}, Lcom/android/internal/os/BatteryStatsImpl;->resetIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;Z)Z

    move-result v2

    and-int/2addr v0, v2

    .line 6780
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6783
    .end local v1    # "i":I
    :cond_0
    return v0

    .line 6785
    .end local v0    # "ret":Z
    :cond_1
    const/4 v0, 0x1

    return v0
.end method

.method private greylist-max-o scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V
    .locals 1
    .param p1, "reason"    # Ljava/lang/String;
    .param p2, "updateFlags"    # I

    .line 12591
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    if-eqz v0, :cond_0

    .line 12592
    invoke-interface {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleSync(Ljava/lang/String;I)Ljava/util/concurrent/Future;

    .line 12594
    :cond_0
    return-void
.end method

.method private greylist-max-o startRecordingHistory(JJZ)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "reset"    # Z

    .line 12562
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 12563
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12564
    nop

    .line 12565
    if-eqz p5, :cond_0

    const/4 v0, 0x7

    goto :goto_0

    :cond_0
    const/4 v0, 0x5

    :goto_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 12564
    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 12567
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    const-wide/16 v1, 0x0

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12568
    if-eqz p5, :cond_1

    .line 12569
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl;->initActiveHistoryEventsLocked(JJ)V

    .line 12571
    :cond_1
    return-void
.end method

.method private greylist-max-o updateAllPhoneStateLocked(III)V
    .locals 17
    .param p1, "state"    # I
    .param p2, "simState"    # I
    .param p3, "strengthBin"    # I

    .line 5296
    move-object/from16 v6, p0

    move/from16 v0, p1

    move/from16 v7, p2

    move/from16 v1, p3

    const/4 v2, 0x0

    .line 5297
    .local v2, "scanning":Z
    const/4 v3, 0x0

    .line 5299
    .local v3, "newHistory":Z
    iput v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 5300
    iput v7, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 5301
    iput v1, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 5303
    iget-object v4, v6, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 5304
    .local v8, "elapsedRealtime":J
    iget-object v4, v6, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 5306
    .local v10, "uptime":J
    const/4 v4, 0x1

    if-ne v7, v4, :cond_0

    .line 5309
    if-ne v0, v4, :cond_0

    if-lez v1, :cond_0

    .line 5311
    const/4 v0, 0x0

    move v12, v0

    .end local p1    # "state":I
    .local v0, "state":I
    goto :goto_0

    .line 5316
    .end local v0    # "state":I
    .restart local p1    # "state":I
    :cond_0
    move v12, v0

    .end local p1    # "state":I
    .local v12, "state":I
    :goto_0
    const/16 v0, 0x5e

    const/4 v5, 0x3

    if-ne v12, v5, :cond_1

    .line 5317
    const/4 v1, -0x1

    move v13, v1

    move v14, v2

    .end local p3    # "strengthBin":I
    .local v1, "strengthBin":I
    goto :goto_2

    .line 5320
    .end local v1    # "strengthBin":I
    .restart local p3    # "strengthBin":I
    :cond_1
    if-nez v12, :cond_2

    goto :goto_1

    .line 5325
    :cond_2
    if-ne v12, v4, :cond_4

    .line 5326
    const/4 v2, 0x1

    .line 5327
    const/4 v1, 0x0

    .line 5328
    .end local p3    # "strengthBin":I
    .restart local v1    # "strengthBin":I
    iget-object v4, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v4

    if-nez v4, :cond_3

    .line 5329
    iget-object v4, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v13, 0x200000

    or-int/2addr v5, v13

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5330
    const/4 v3, 0x1

    .line 5333
    iget-object v4, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5334
    invoke-static {v0, v12, v7, v1}, Lcom/android/internal/util/FrameworkStatsLog;->write(IIII)V

    move v13, v1

    move v14, v2

    goto :goto_2

    .line 5328
    :cond_3
    move v13, v1

    move v14, v2

    goto :goto_2

    .line 5339
    .end local v1    # "strengthBin":I
    .restart local p3    # "strengthBin":I
    :cond_4
    :goto_1
    move v13, v1

    move v14, v2

    .end local v2    # "scanning":Z
    .end local p3    # "strengthBin":I
    .local v13, "strengthBin":I
    .local v14, "scanning":Z
    :goto_2
    if-nez v14, :cond_5

    .line 5341
    iget-object v1, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v1

    if-eqz v1, :cond_5

    .line 5342
    iget-object v1, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v4, -0x200001

    and-int/2addr v2, v4

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5345
    const/4 v3, 0x1

    .line 5346
    iget-object v1, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5347
    invoke-static {v0, v12, v7, v13}, Lcom/android/internal/util/FrameworkStatsLog;->write(IIII)V

    .line 5352
    :cond_5
    iget v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    if-eq v0, v12, :cond_6

    .line 5353
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit16 v1, v1, -0x1c1

    shl-int/lit8 v2, v12, 0x6

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5357
    const/4 v3, 0x1

    .line 5358
    iput v12, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    .line 5361
    :cond_6
    iget v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    if-eq v0, v13, :cond_a

    .line 5362
    if-ltz v0, :cond_7

    .line 5363
    iget-object v1, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v1, v0

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5366
    :cond_7
    if-ltz v13, :cond_9

    .line 5367
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, v13

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-nez v0, :cond_8

    .line 5368
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, v13

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5370
    :cond_8
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit8 v1, v1, -0x39

    shl-int/lit8 v2, v13, 0x3

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5374
    const/4 v0, 0x1

    .line 5375
    .end local v3    # "newHistory":Z
    .local v0, "newHistory":Z
    const/16 v1, 0x28

    invoke-static {v1, v13}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    move v15, v0

    goto :goto_3

    .line 5378
    .end local v0    # "newHistory":Z
    .restart local v3    # "newHistory":Z
    :cond_9
    const/4 v0, -0x1

    invoke-virtual {v6, v0}, Lcom/android/internal/os/BatteryStatsImpl;->stopAllPhoneSignalStrengthTimersLocked(I)V

    move v15, v3

    .line 5380
    .end local v3    # "newHistory":Z
    .local v15, "newHistory":Z
    :goto_3
    iput v13, v6, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 5383
    int-to-byte v5, v13

    move-object/from16 v0, p0

    move-wide v1, v8

    move-wide v3, v10

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalPhoneSignal(JJB)V

    goto :goto_4

    .line 5361
    .end local v15    # "newHistory":Z
    .restart local v3    # "newHistory":Z
    :cond_a
    move v15, v3

    .line 5388
    .end local v3    # "newHistory":Z
    .restart local v15    # "newHistory":Z
    :goto_4
    shl-int/lit8 v0, v7, 0x4

    and-int/lit8 v1, v12, 0xf

    or-int/2addr v0, v1

    int-to-byte v5, v0

    .line 5389
    .local v5, "phoneState":B
    move-object/from16 v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move/from16 v16, v5

    .end local v5    # "phoneState":B
    .local v16, "phoneState":B
    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalPhoneState(JJB)V

    .line 5391
    if-eqz v15, :cond_b

    .line 5392
    invoke-virtual {v6, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5394
    :cond_b
    return-void
.end method

.method private greylist-max-o updateBatteryPropertiesLocked()V
    .locals 1

    .line 3947
    :try_start_0
    const-string v0, "batteryproperties"

    .line 3948
    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 3947
    invoke-static {v0}, Landroid/os/IBatteryPropertiesRegistrar$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IBatteryPropertiesRegistrar;

    move-result-object v0

    .line 3949
    .local v0, "registrar":Landroid/os/IBatteryPropertiesRegistrar;
    if-eqz v0, :cond_0

    .line 3950
    invoke-interface {v0}, Landroid/os/IBatteryPropertiesRegistrar;->scheduleUpdate()V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 3954
    .end local v0    # "registrar":Landroid/os/IBatteryPropertiesRegistrar;
    :cond_0
    goto :goto_0

    .line 3952
    :catch_0
    move-exception v0

    .line 3955
    :goto_0
    return-void
.end method

.method private greylist-max-o updateNewDischargeScreenLevelLocked(I)V
    .locals 2
    .param p1, "state"    # I

    .line 10983
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 10984
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10985
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 10986
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    goto :goto_0

    .line 10987
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 10988
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10989
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10990
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_0

    .line 10991
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOff(I)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 10992
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10993
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10994
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 10996
    :cond_2
    :goto_0
    return-void
.end method

.method private greylist-max-o updateOldDischargeScreenLevelLocked(I)V
    .locals 2
    .param p1, "state"    # I

    .line 10961
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 10962
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v0, v1

    .line 10963
    .local v0, "diff":I
    if-lez v0, :cond_0

    .line 10964
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 10965
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 10967
    .end local v0    # "diff":I
    :cond_0
    goto :goto_1

    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 10968
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v0, v1

    .line 10969
    .restart local v0    # "diff":I
    if-lez v0, :cond_3

    .line 10970
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 10971
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    goto :goto_0

    .line 10973
    .end local v0    # "diff":I
    :cond_2
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOff(I)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 10974
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v0, v1

    .line 10975
    .restart local v0    # "diff":I
    if-lez v0, :cond_4

    .line 10976
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 10977
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    goto :goto_1

    .line 10973
    .end local v0    # "diff":I
    :cond_3
    :goto_0
    nop

    .line 10980
    :cond_4
    :goto_1
    return-void
.end method

.method private greylist-max-o writeDailyItemsLocked(Lorg/xmlpull/v1/XmlSerializer;)V
    .locals 11
    .param p1, "out"    # Lorg/xmlpull/v1/XmlSerializer;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 10342
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v1, 0x40

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 10343
    .local v0, "sb":Ljava/lang/StringBuilder;
    const/4 v1, 0x1

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v1

    const/4 v2, 0x0

    invoke-interface {p1, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V

    .line 10344
    const-string v1, "daily-items"

    invoke-interface {p1, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10345
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_0
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v3, v4, :cond_2

    .line 10346
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/os/BatteryStats$DailyItem;

    .line 10347
    .local v4, "dit":Landroid/os/BatteryStats$DailyItem;
    const-string v5, "item"

    invoke-interface {p1, v2, v5}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10348
    iget-wide v6, v4, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v6

    const-string/jumbo v7, "start"

    invoke-interface {p1, v2, v7, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10349
    iget-wide v6, v4, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v6

    const-string v7, "end"

    invoke-interface {p1, v2, v7, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10350
    iget-object v6, v4, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    const-string v7, "dis"

    invoke-direct {p0, p1, v7, v6, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V

    .line 10351
    iget-object v6, v4, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    const-string v7, "chg"

    invoke-direct {p0, p1, v7, v6, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V

    .line 10352
    iget-object v6, v4, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-eqz v6, :cond_1

    .line 10353
    const/4 v6, 0x0

    .local v6, "j":I
    :goto_1
    iget-object v7, v4, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v7

    if-ge v6, v7, :cond_1

    .line 10354
    iget-object v7, v4, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/os/BatteryStats$PackageChange;

    .line 10355
    .local v7, "pc":Landroid/os/BatteryStats$PackageChange;
    iget-boolean v8, v7, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    const-string/jumbo v9, "pkg"

    if-eqz v8, :cond_0

    .line 10356
    const-string/jumbo v8, "upd"

    invoke-interface {p1, v2, v8}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10357
    iget-object v10, v7, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-interface {p1, v2, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10358
    iget-wide v9, v7, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    invoke-static {v9, v10}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v9

    const-string/jumbo v10, "ver"

    invoke-interface {p1, v2, v10, v9}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10359
    invoke-interface {p1, v2, v8}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    goto :goto_2

    .line 10361
    :cond_0
    const-string/jumbo v8, "rem"

    invoke-interface {p1, v2, v8}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10362
    iget-object v10, v7, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-interface {p1, v2, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10363
    invoke-interface {p1, v2, v8}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10353
    .end local v7    # "pc":Landroid/os/BatteryStats$PackageChange;
    :goto_2
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 10367
    .end local v6    # "j":I
    :cond_1
    invoke-interface {p1, v2, v5}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10345
    .end local v4    # "dit":Landroid/os/BatteryStats$DailyItem;
    add-int/lit8 v3, v3, 0x1

    goto/16 :goto_0

    .line 10369
    .end local v3    # "i":I
    :cond_2
    invoke-interface {p1, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10370
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlSerializer;->endDocument()V

    .line 10371
    return-void
.end method

.method private greylist-max-o writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V
    .locals 5
    .param p1, "out"    # Lorg/xmlpull/v1/XmlSerializer;
    .param p2, "tag"    # Ljava/lang/String;
    .param p3, "steps"    # Landroid/os/BatteryStats$LevelStepTracker;
    .param p4, "tmpBuilder"    # Ljava/lang/StringBuilder;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 10375
    if-eqz p3, :cond_1

    .line 10376
    const/4 v0, 0x0

    invoke-interface {p1, v0, p2}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10377
    iget v1, p3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v1

    const-string/jumbo v2, "n"

    invoke-interface {p1, v0, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10378
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    iget v2, p3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    if-ge v1, v2, :cond_0

    .line 10379
    const-string/jumbo v2, "s"

    invoke-interface {p1, v0, v2}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10380
    const/4 v3, 0x0

    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 10381
    invoke-virtual {p3, v1, p4}, Landroid/os/BatteryStats$LevelStepTracker;->encodeEntryAt(ILjava/lang/StringBuilder;)V

    .line 10382
    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string/jumbo v4, "v"

    invoke-interface {p1, v0, v4, v3}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10383
    invoke-interface {p1, v0, v2}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10378
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 10385
    .end local v1    # "i":I
    :cond_0
    invoke-interface {p1, v0, p2}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10387
    :cond_1
    return-void
.end method

.method private greylist-max-o writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I
    .locals 5
    .param p1, "tag"    # Landroid/os/BatteryStats$HistoryTag;

    .line 3103
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Integer;

    .line 3105
    .local v0, "idxObj":Ljava/lang/Integer;
    if-eqz v0, :cond_0

    .line 3106
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v1

    .local v1, "idx":I
    goto :goto_0

    .line 3108
    .end local v1    # "idx":I
    :cond_0
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 3109
    .restart local v1    # "idx":I
    new-instance v2, Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryTag;-><init>()V

    .line 3110
    .local v2, "key":Landroid/os/BatteryStats$HistoryTag;
    invoke-virtual {v2, p1}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3111
    iput v1, p1, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    .line 3112
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v3, v2, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3113
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    add-int/lit8 v3, v3, 0x1

    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 3114
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    iget-object v4, v2, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v4

    add-int/lit8 v4, v4, 0x1

    add-int/2addr v3, v4

    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 3116
    .end local v2    # "key":Landroid/os/BatteryStats$HistoryTag;
    :goto_0
    return v1
.end method


# virtual methods
.method public greylist-max-o addCpuTimes([J[J)[J
    .locals 5
    .param p1, "timesA"    # [J
    .param p2, "timesB"    # [J

    .line 592
    if-eqz p1, :cond_1

    if-eqz p2, :cond_1

    .line 593
    array-length v0, p1

    add-int/lit8 v0, v0, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    .line 594
    aget-wide v1, p1, v0

    aget-wide v3, p2, v0

    add-long/2addr v1, v3

    aput-wide v1, p1, v0

    .line 593
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 596
    .end local v0    # "i":I
    :cond_0
    return-object p1

    .line 598
    :cond_1
    if-nez p1, :cond_3

    if-nez p2, :cond_2

    const/4 v0, 0x0

    goto :goto_1

    :cond_2
    move-object v0, p2

    goto :goto_1

    :cond_3
    move-object v0, p1

    :goto_1
    return-object v0
.end method

.method greylist-max-o addHistoryBufferLocked(JLandroid/os/BatteryStats$HistoryItem;)V
    .locals 26
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3665
    move-object/from16 v6, p0

    move-object/from16 v7, p3

    iget-boolean v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    if-eqz v0, :cond_a

    iget-boolean v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    if-nez v0, :cond_0

    goto/16 :goto_1

    .line 3669
    :cond_0
    iget-wide v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    add-long v0, v0, p1

    iget-object v2, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v2, v2, Landroid/os/BatteryStats$HistoryItem;->time:J

    sub-long v8, v0, v2

    .line 3670
    .local v8, "timeDiff":J
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget v1, v7, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget v2, v6, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    and-int/2addr v1, v2

    xor-int v10, v0, v1

    .line 3671
    .local v10, "diffStates":I
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget v1, v7, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget v2, v6, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    and-int/2addr v1, v2

    xor-int v11, v0, v1

    .line 3672
    .local v11, "diffStates2":I
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget-object v1, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    xor-int v12, v0, v1

    .line 3673
    .local v12, "lastDiffStates":I
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget-object v1, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    xor-int v13, v0, v1

    .line 3679
    .local v13, "lastDiffStates2":I
    iget v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    const/4 v1, -0x1

    if-ltz v0, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    if-nez v0, :cond_7

    const-wide/16 v2, 0x3e8

    cmp-long v0, v8, v2

    if-gez v0, :cond_7

    and-int v0, v10, v12

    if-nez v0, :cond_7

    and-int v0, v11, v13

    if-nez v0, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v0, :cond_1

    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-nez v0, :cond_7

    :cond_1
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v0, :cond_2

    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-nez v0, :cond_7

    :cond_2
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    if-nez v0, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v0, :cond_3

    iget v0, v7, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-nez v0, :cond_7

    :cond_3
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iget-byte v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-ne v0, v2, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    iget-byte v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    if-ne v0, v2, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    iget-byte v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    if-ne v0, v2, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    iget-byte v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    if-ne v0, v2, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-short v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    iget-short v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    if-ne v0, v2, :cond_7

    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-char v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    iget-char v2, v7, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    if-ne v0, v2, :cond_7

    .line 3698
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget v2, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataSize(I)V

    .line 3699
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget v2, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 3700
    iput v1, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 3701
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v2, v0, Landroid/os/BatteryStats$HistoryItem;->time:J

    iget-wide v4, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    sub-long/2addr v2, v4

    .line 3705
    .end local p1    # "elapsedRealtimeMs":J
    .local v2, "elapsedRealtimeMs":J
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v0, :cond_4

    .line 3706
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3707
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iget-object v4, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-virtual {v0, v4}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3712
    :cond_4
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v0, :cond_5

    .line 3713
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3714
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iget-object v4, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-virtual {v0, v4}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3719
    :cond_5
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v0, :cond_6

    .line 3720
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    iput v0, v7, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3721
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3722
    iget-object v0, v7, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    iget-object v4, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-virtual {v0, v4}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3724
    :cond_6
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0, v4}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    move-wide v14, v2

    goto :goto_0

    .line 3726
    .end local v2    # "elapsedRealtimeMs":J
    .restart local p1    # "elapsedRealtimeMs":J
    :cond_7
    move-wide/from16 v14, p1

    .end local p1    # "elapsedRealtimeMs":J
    .local v14, "elapsedRealtimeMs":J
    :goto_0
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataSize()I

    move-result v5

    .line 3728
    .local v5, "dataSize":I
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    const/4 v3, 0x0

    if-lt v5, v0, :cond_8

    .line 3730
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v16

    .line 3731
    .local v16, "start":J
    const/4 v0, 0x1

    invoke-virtual {v6, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryLocked(Z)V

    .line 3736
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->startNextFile()V

    .line 3737
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0, v3}, Landroid/os/Parcel;->setDataSize(I)V

    .line 3738
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0, v3}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 3739
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v2, v6, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget v2, v2, Lcom/android/internal/os/BatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    div-int/lit8 v2, v2, 0x2

    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataCapacity(I)V

    .line 3740
    iput v1, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 3741
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v18

    .line 3742
    .local v18, "elapsedRealtime":J
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v20

    .line 3743
    .local v20, "uptime":J
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    move-object v4, v0

    .line 3744
    .local v4, "newItem":Landroid/os/BatteryStats$HistoryItem;
    invoke-virtual {v4, v7}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    .line 3745
    const/16 v22, 0x0

    move-object/from16 v0, p0

    move-wide/from16 v1, v18

    move-wide/from16 v23, v8

    move v9, v3

    move-object v8, v4

    .end local v4    # "newItem":Landroid/os/BatteryStats$HistoryItem;
    .local v8, "newItem":Landroid/os/BatteryStats$HistoryItem;
    .local v23, "timeDiff":J
    move-wide/from16 v3, v20

    move/from16 v25, v5

    .end local v5    # "dataSize":I
    .local v25, "dataSize":I
    move/from16 v5, v22

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    .line 3746
    invoke-direct {v6, v14, v15, v9, v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3747
    return-void

    .line 3750
    .end local v16    # "start":J
    .end local v18    # "elapsedRealtime":J
    .end local v20    # "uptime":J
    .end local v23    # "timeDiff":J
    .end local v25    # "dataSize":I
    .restart local v5    # "dataSize":I
    .local v8, "timeDiff":J
    :cond_8
    move/from16 v25, v5

    move-wide/from16 v23, v8

    move v9, v3

    .end local v5    # "dataSize":I
    .end local v8    # "timeDiff":J
    .restart local v23    # "timeDiff":J
    .restart local v25    # "dataSize":I
    if-nez v25, :cond_9

    .line 3752
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, v7, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 3753
    const/4 v0, 0x7

    invoke-direct {v6, v14, v15, v0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3755
    :cond_9
    invoke-direct {v6, v14, v15, v9, v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3756
    return-void

    .line 3666
    .end local v10    # "diffStates":I
    .end local v11    # "diffStates2":I
    .end local v12    # "lastDiffStates":I
    .end local v13    # "lastDiffStates2":I
    .end local v14    # "elapsedRealtimeMs":J
    .end local v23    # "timeDiff":J
    .end local v25    # "dataSize":I
    .restart local p1    # "elapsedRealtimeMs":J
    :cond_a
    :goto_1
    return-void
.end method

.method public greylist-max-o addHistoryEventLocked(JJILjava/lang/String;I)V
    .locals 2
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "code"    # I
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "uid"    # I

    .line 3845
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput p5, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3846
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v1, v0, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v1, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3847
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object p6, v0, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 3848
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    iput p7, v0, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 3849
    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 3850
    return-void
.end method

.method greylist-max-o addHistoryRecordInnerLocked(JLandroid/os/BatteryStats$HistoryItem;)V
    .locals 0
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3802
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JLandroid/os/BatteryStats$HistoryItem;)V

    .line 3805
    return-void
.end method

.method greylist-max-o addHistoryRecordLocked(JJ)V
    .locals 9
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    .line 3782
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    const-wide/16 v2, 0x0

    cmp-long v2, v0, v2

    if-eqz v2, :cond_0

    .line 3783
    sub-long v0, p1, v0

    .line 3784
    .local v0, "diffElapsed":J
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    sub-long v2, p3, v2

    .line 3785
    .local v2, "diffUptime":J
    const-wide/16 v4, 0x14

    sub-long v4, v0, v4

    cmp-long v4, v2, v4

    if-gez v4, :cond_0

    .line 3786
    sub-long v4, v0, v2

    sub-long v4, p1, v4

    .line 3787
    .local v4, "wakeElapsedTime":J
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    .line 3788
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    const/4 v7, 0x0

    iput-object v7, v6, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3789
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    iput-object v7, v6, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3790
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    const/4 v7, 0x0

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3791
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v8, 0x7fffffff

    and-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3792
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, v4, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordInnerLocked(JLandroid/os/BatteryStats$HistoryItem;)V

    .line 3795
    .end local v0    # "diffElapsed":J
    .end local v2    # "diffUptime":J
    .end local v4    # "wakeElapsedTime":J
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v2, -0x80000000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3796
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 3797
    iput-wide p3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 3798
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordInnerLocked(JLandroid/os/BatteryStats$HistoryItem;)V

    .line 3799
    return-void
.end method

.method greylist-max-o addHistoryRecordLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "cmd"    # B
    .param p6, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3853
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

    .line 3854
    .local v0, "rec":Landroid/os/BatteryStats$HistoryItem;
    if-eqz v0, :cond_0

    .line 3855
    iget-object v1, v0, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

    goto :goto_0

    .line 3857
    :cond_0
    new-instance v1, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v1}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    move-object v0, v1

    .line 3859
    :goto_0
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    add-long/2addr v1, p1

    invoke-virtual {v0, v1, v2, p5, p6}, Landroid/os/BatteryStats$HistoryItem;->setTo(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3861
    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(Landroid/os/BatteryStats$HistoryItem;)V

    .line 3862
    return-void
.end method

.method greylist-max-o addHistoryRecordLocked(Landroid/os/BatteryStats$HistoryItem;)V
    .locals 1
    .param p1, "rec"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3865
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryItems:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryItems:I

    .line 3866
    const/4 v0, 0x0

    iput-object v0, p1, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    .line 3867
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastEnd:Landroid/os/BatteryStats$HistoryItem;

    .line 3868
    if-eqz v0, :cond_0

    .line 3869
    iput-object p1, v0, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    .line 3870
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    goto :goto_0

    .line 3872
    :cond_0
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistory:Landroid/os/BatteryStats$HistoryItem;

    .line 3874
    :goto_0
    return-void
.end method

.method public greylist-max-o addIsolatedUidLocked(II)V
    .locals 1
    .param p1, "isolatedUid"    # I
    .param p2, "appUid"    # I

    .line 3958
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0, p1, p2}, Landroid/util/SparseIntArray;->put(II)V

    .line 3959
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 3960
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->addIsolatedUid(I)V

    .line 3961
    return-void
.end method

.method greylist-max-o aggregateLastWakeupUptimeLocked(J)V
    .locals 8
    .param p1, "uptimeMs"    # J

    .line 4589
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    if-eqz v0, :cond_0

    .line 4590
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    sub-long v1, p1, v1

    .line 4591
    .local v1, "deltaUptime":J
    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v0

    .line 4592
    .local v0, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    const-wide/16 v3, 0x3e8

    mul-long v5, v1, v3

    const/4 v7, 0x1

    invoke-virtual {v0, v5, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->add(JI)V

    .line 4593
    const/16 v5, 0x24

    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    mul-long/2addr v3, v1

    invoke-static {v5, v6, v3, v4}, Lcom/android/internal/util/FrameworkStatsLog;->write(ILjava/lang/String;J)V

    .line 4595
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 4597
    .end local v0    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .end local v1    # "deltaUptime":J
    :cond_0
    return-void
.end method

.method greylist-max-o clearHistoryLocked()V
    .locals 3

    .line 3887
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    .line 3888
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 3889
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 3890
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 3892
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataSize(I)V

    .line 3893
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 3894
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget v2, v2, Lcom/android/internal/os/BatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    div-int/lit8 v2, v2, 0x2

    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataCapacity(I)V

    .line 3895
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    .line 3896
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    .line 3897
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->clear()V

    .line 3898
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 3899
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 3900
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 3901
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    .line 3902
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    .line 3903
    return-void
.end method

.method public greylist-max-o clearPendingRemovedUids()V
    .locals 4

    .line 521
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-wide v2, v2, Lcom/android/internal/os/BatteryStatsImpl$Constants;->UID_REMOVE_DELAY_MS:J

    sub-long/2addr v0, v2

    .line 522
    .local v0, "cutOffTime":J
    :goto_0
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    invoke-interface {v2}, Ljava/util/Queue;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_0

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 523
    invoke-interface {v2}, Ljava/util/Queue;->peek()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;

    iget-wide v2, v2, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;->timeAddedInQueue:J

    cmp-long v2, v2, v0

    if-gez v2, :cond_0

    .line 524
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    invoke-interface {v2}, Ljava/util/Queue;->poll()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;->remove()V

    goto :goto_0

    .line 526
    :cond_0
    return-void
.end method

.method public greylist-max-o commitCurrentHistoryBatchLocked()V
    .locals 2

    .line 3654
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    const/4 v1, -0x1

    iput-byte v1, v0, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    .line 3655
    return-void
.end method

.method public greylist computeBatteryRealtime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12860
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeRealtime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o computeBatteryScreenOffRealtime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12870
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeRealtime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o computeBatteryScreenOffUptime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12865
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeUptime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist computeBatteryTimeRemaining(J)J
    .locals 7
    .param p1, "curTime"    # J

    .line 12914
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    const-wide/16 v1, -0x1

    if-nez v0, :cond_0

    .line 12915
    return-wide v1

    .line 12930
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v0, v0, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    const/4 v3, 0x1

    if-ge v0, v3, :cond_1

    .line 12931
    return-wide v1

    .line 12933
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->computeTimePerLevel()J

    move-result-wide v3

    .line 12934
    .local v3, "msPerLevel":J
    const-wide/16 v5, 0x0

    cmp-long v0, v3, v5

    if-gtz v0, :cond_2

    .line 12935
    return-wide v1

    .line 12937
    :cond_2
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    int-to-long v0, v0

    mul-long/2addr v0, v3

    const-wide/16 v5, 0x3e8

    mul-long/2addr v0, v5

    return-wide v0
.end method

.method public greylist computeBatteryUptime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12854
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeUptime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o computeChargeTimeRemaining(J)J
    .locals 7
    .param p1, "curTime"    # J

    .line 12952
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    const-wide/16 v1, -0x1

    if-eqz v0, :cond_0

    .line 12954
    return-wide v1

    .line 12956
    :cond_0
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryTimeToFullSeconds:J

    const-wide/16 v5, 0x0

    cmp-long v0, v3, v5

    if-ltz v0, :cond_1

    .line 12957
    const-wide/32 v0, 0xf4240

    mul-long/2addr v3, v0

    return-wide v3

    .line 12960
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v0, v0, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    const/4 v3, 0x1

    if-ge v0, v3, :cond_2

    .line 12961
    return-wide v1

    .line 12963
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->computeTimePerLevel()J

    move-result-wide v3

    .line 12964
    .local v3, "msPerLevel":J
    cmp-long v0, v3, v5

    if-gtz v0, :cond_3

    .line 12965
    return-wide v1

    .line 12967
    :cond_3
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    rsub-int/lit8 v0, v0, 0x64

    int-to-long v0, v0

    mul-long/2addr v0, v3

    const-wide/16 v5, 0x3e8

    mul-long/2addr v0, v5

    return-wide v0
.end method

.method public greylist-max-o computeRealtime(JI)J
    .locals 4
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12848
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    sub-long v2, p1, v2

    add-long/2addr v0, v2

    return-wide v0
.end method

.method public greylist-max-o computeUptime(JI)J
    .locals 4
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12843
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    sub-long v2, p1, v2

    add-long/2addr v0, v2

    return-wide v0
.end method

.method public greylist-max-o copyFromAllUidsCpuTimes()V
    .locals 2

    .line 529
    monitor-enter p0

    .line 530
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 531
    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    .line 530
    invoke-virtual {p0, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->copyFromAllUidsCpuTimes(ZZ)V

    .line 532
    monitor-exit p0

    .line 533
    return-void

    .line 532
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist-max-o copyFromAllUidsCpuTimes(ZZ)V
    .locals 9
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z

    .line 542
    monitor-enter p0

    .line 543
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-boolean v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;->TRACK_CPU_TIMES_BY_PROC_STATE:Z

    if-nez v0, :cond_0

    .line 544
    monitor-exit p0

    return-void

    .line 546
    :cond_0
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->initKernelSingleUidTimeReaderLocked()Z

    move-result v0

    if-nez v0, :cond_1

    .line 547
    monitor-exit p0

    return-void

    .line 550
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    .line 551
    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->getAllUidCpuFreqTimeMs()Landroid/util/SparseArray;

    move-result-object v0

    .line 554
    .local v0, "allUidCpuFreqTimesMs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<[J>;"
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsPerProcessStateCpuDataStale:Z

    if-eqz v1, :cond_2

    .line 555
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/KernelSingleUidTimeReader;->setAllUidsCpuTimesMs(Landroid/util/SparseArray;)V

    .line 556
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsPerProcessStateCpuDataStale:Z

    .line 557
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v1}, Landroid/util/SparseIntArray;->clear()V

    .line 558
    monitor-exit p0

    return-void

    .line 560
    :cond_2
    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_7

    .line 561
    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v2

    .line 562
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getAvailableUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v3

    .line 563
    .local v3, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-nez v3, :cond_3

    .line 564
    goto :goto_2

    .line 566
    :cond_3
    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, [J

    .line 567
    .local v4, "cpuTimesMs":[J
    if-nez v4, :cond_4

    .line 568
    goto :goto_2

    .line 570
    :cond_4
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    .line 571
    invoke-virtual {v4}, [J->clone()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, [J

    .line 570
    invoke-virtual {v5, v2, v6}, Lcom/android/internal/os/KernelSingleUidTimeReader;->computeDelta(I[J)[J

    move-result-object v5

    .line 572
    .local v5, "deltaTimesMs":[J
    if-eqz p1, :cond_6

    if-eqz v5, :cond_6

    .line 574
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v6, v2}, Landroid/util/SparseIntArray;->indexOfKey(I)I

    move-result v6

    .line 575
    .local v6, "idx":I
    if-ltz v6, :cond_5

    .line 576
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v7, v6}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v7

    .line 577
    .local v7, "procState":I
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v8, v6}, Landroid/util/SparseIntArray;->removeAt(I)V

    goto :goto_1

    .line 579
    .end local v7    # "procState":I
    :cond_5
    iget v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessState:I

    .line 581
    .restart local v7    # "procState":I
    :goto_1
    if-ltz v7, :cond_6

    const/4 v8, 0x7

    if-ge v7, v8, :cond_6

    .line 582
    invoke-static {v3, v7, v5, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$200(Lcom/android/internal/os/BatteryStatsImpl$Uid;I[JZ)V

    .line 583
    invoke-static {v3, v7, v5, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$300(Lcom/android/internal/os/BatteryStatsImpl$Uid;I[JZ)V

    .line 560
    .end local v2    # "uid":I
    .end local v3    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v4    # "cpuTimesMs":[J
    .end local v5    # "deltaTimesMs":[J
    .end local v6    # "idx":I
    .end local v7    # "procState":I
    :cond_6
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 587
    .end local v0    # "allUidCpuFreqTimesMs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<[J>;"
    .end local v1    # "i":I
    :cond_7
    monitor-exit p0

    .line 588
    return-void

    .line 587
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public blacklist createFakeHistoryEvents(J)V
    .locals 5
    .param p1, "numEvents"    # J

    .line 3658
    const-wide/16 v0, 0x0

    .local v0, "i":J
    :goto_0
    cmp-long v2, v0, p1

    if-gez v2, :cond_0

    .line 3659
    const-string/jumbo v2, "name1"

    const-string v3, "historyName1"

    const/16 v4, 0x3e8

    invoke-virtual {p0, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakelockStart(Ljava/lang/String;Ljava/lang/String;I)V

    .line 3660
    invoke-virtual {p0, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakelockFinish(Ljava/lang/String;Ljava/lang/String;I)V

    .line 3658
    const-wide/16 v2, 0x1

    add-long/2addr v0, v2

    goto :goto_0

    .line 3662
    .end local v0    # "i":J
    :cond_0
    return-void
.end method

.method public whitelist test-api describeContents()I
    .locals 1

    .line 13793
    const/4 v0, 0x0

    return v0
.end method

.method public greylist-max-o dumpConstantsLocked(Ljava/io/PrintWriter;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 13556
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Constants;->dumpLocked(Ljava/io/PrintWriter;)V

    .line 13557
    return-void
.end method

.method public greylist-max-o dumpCpuStatsLocked(Ljava/io/PrintWriter;)V
    .locals 11
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 13561
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 13562
    .local v0, "size":I
    const-string v1, "Per UID CPU user & system time in ms:"

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13563
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    const/4 v2, 0x0

    const-string v3, ": "

    const-string v4, "  "

    if-ge v1, v0, :cond_0

    .line 13564
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v5

    .line 13565
    .local v5, "u":I
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 13566
    .local v6, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13567
    invoke-virtual {v6, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUserCpuTimeUs(I)J

    move-result-wide v3

    const-wide/16 v7, 0x3e8

    div-long/2addr v3, v7

    invoke-virtual {p1, v3, v4}, Ljava/io/PrintWriter;->print(J)V

    const-string v3, " "

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13568
    invoke-virtual {v6, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getSystemCpuTimeUs(I)J

    move-result-wide v2

    div-long/2addr v2, v7

    invoke-virtual {p1, v2, v3}, Ljava/io/PrintWriter;->println(J)V

    .line 13563
    .end local v5    # "u":I
    .end local v6    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 13570
    .end local v1    # "i":I
    :cond_0
    const-string v1, "Per UID CPU active time in ms:"

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13571
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_1
    if-ge v1, v0, :cond_2

    .line 13572
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v5

    .line 13573
    .restart local v5    # "u":I
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 13574
    .restart local v6    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getCpuActiveTime()J

    move-result-wide v7

    const-wide/16 v9, 0x0

    cmp-long v7, v7, v9

    if-lez v7, :cond_1

    .line 13575
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getCpuActiveTime()J

    move-result-wide v7

    invoke-virtual {p1, v7, v8}, Ljava/io/PrintWriter;->println(J)V

    .line 13571
    .end local v5    # "u":I
    .end local v6    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 13578
    .end local v1    # "i":I
    :cond_2
    const-string v1, "Per UID CPU cluster time in ms:"

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13579
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_2
    if-ge v1, v0, :cond_4

    .line 13580
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v5

    .line 13581
    .restart local v5    # "u":I
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getCpuClusterTimes()[J

    move-result-object v6

    .line 13582
    .local v6, "times":[J
    if-eqz v6, :cond_3

    .line 13583
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v6}, Ljava/util/Arrays;->toString([J)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13579
    .end local v5    # "u":I
    .end local v6    # "times":[J
    :cond_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 13586
    .end local v1    # "i":I
    :cond_4
    const-string v1, "Per UID CPU frequency time in ms:"

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13587
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_3
    if-ge v1, v0, :cond_6

    .line 13588
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v5

    .line 13589
    .restart local v5    # "u":I
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-virtual {v6, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getCpuFreqTimes(I)[J

    move-result-object v6

    .line 13590
    .restart local v6    # "times":[J
    if-eqz v6, :cond_5

    .line 13591
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v6}, Ljava/util/Arrays;->toString([J)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13587
    .end local v5    # "u":I
    .end local v6    # "times":[J
    :cond_5
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 13594
    .end local v1    # "i":I
    :cond_6
    return-void
.end method

.method public greylist-max-o dumpLocked(Landroid/content/Context;Ljava/io/PrintWriter;IIJ)V
    .locals 4
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "flags"    # I
    .param p4, "reqUid"    # I
    .param p5, "histStart"    # J

    .line 15438
    invoke-super/range {p0 .. p6}, Lcom/android/internal/os/OplusBaseBatteryStatsImpl;->dumpLocked(Landroid/content/Context;Ljava/io/PrintWriter;IIJ)V

    .line 15439
    const-string v0, "Total cpu time reads: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15440
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    invoke-virtual {p2, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 15441
    const-string v0, "Batched cpu time reads: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15442
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    invoke-virtual {p2, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 15443
    const-string v0, "Batching Duration (min): "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15444
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    sub-long/2addr v0, v2

    const-wide/32 v2, 0xea60

    div-long/2addr v0, v2

    invoke-virtual {p2, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 15445
    const-string v0, "All UID cpu time reads since the later of device start or stats reset: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15446
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 15447
    const-string v0, "UIDs removed since the later of device start or stats reset: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15448
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumUidsRemoved:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 15449
    return-void
.end method

.method public greylist-max-o finishAddingCpuLocked(IIIIIIII)V
    .locals 4
    .param p1, "totalUTime"    # I
    .param p2, "totalSTime"    # I
    .param p3, "statUserTime"    # I
    .param p4, "statSystemTime"    # I
    .param p5, "statIOWaitTime"    # I
    .param p6, "statIrqTime"    # I
    .param p7, "statSoftIrqTime"    # I
    .param p8, "statIdleTime"    # I

    .line 4625
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    int-to-long v2, p1

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    .line 4626
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    int-to-long v2, p2

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    .line 4627
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    int-to-long v2, p3

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    .line 4628
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    int-to-long v2, p4

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    .line 4629
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    int-to-long v2, p5

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    .line 4630
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    int-to-long v2, p6

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    .line 4631
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    int-to-long v2, p7

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    .line 4632
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    int-to-long v2, p8

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    .line 4633
    return-void
.end method

.method public greylist-max-o finishIteratingHistoryLocked()V
    .locals 1

    .line 10694
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->finishIteratingHistory()V

    .line 10695
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    .line 10696
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    .line 10697
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    .line 10698
    return-void
.end method

.method public greylist-max-o finishIteratingOldHistoryLocked()V
    .locals 2

    .line 10621
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    .line 10622
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataSize()I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 10623
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    .line 10624
    return-void
.end method

.method public greylist-max-o getAvailableUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .locals 1
    .param p1, "uid"    # I

    .line 13251
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 13252
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    return-object v0
.end method

.method public greylist getAwakeTimeBattery()J
    .locals 2

    .line 12833
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getBatteryUptimeLocked()J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getAwakeTimePlugged()J
    .locals 4

    .line 12838
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    const-wide/16 v2, 0x3e8

    mul-long/2addr v0, v2

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getAwakeTimeBattery()J

    move-result-wide v2

    sub-long/2addr v0, v2

    return-wide v0
.end method

.method protected blacklist getBatteryCheckinFile()Landroid/util/AtomicFile;
    .locals 1

    .line 15466
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCheckinFile:Landroid/util/AtomicFile;

    return-object v0
.end method

.method public greylist getBatteryRealtime(J)J
    .locals 2
    .param p1, "curTime"    # J

    .line 13096
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtime(J)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getBatteryUptime(J)J
    .locals 2
    .param p1, "curTime"    # J

    .line 13090
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide v0

    return-wide v0
.end method

.method protected greylist-max-o getBatteryUptimeLocked()J
    .locals 5

    .line 13085
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long/2addr v1, v3

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getBluetoothControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    .line 6656
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    return-object v0
.end method

.method public greylist-max-o getBluetoothScanTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6701
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getCameraOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6696
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getCellularBatteryStats()Landroid/os/connectivity/CellularBatteryStats;
    .locals 48

    .line 12972
    move-object/from16 v0, p0

    const/4 v1, 0x0

    .line 12973
    .local v1, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    const-wide/16 v4, 0x3e8

    mul-long/2addr v2, v4

    .line 12974
    .local v2, "rawRealTime":J
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getModemControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;

    move-result-object v6

    .line 12975
    .local v6, "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getSleepTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    const/4 v8, 0x0

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v34

    .line 12976
    .local v34, "sleepTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getIdleTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v36

    .line 12977
    .local v36, "idleTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getRxTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v38

    .line 12978
    .local v38, "rxTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getPowerCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v40

    .line 12979
    .local v40, "energyConsumedMaMs":J
    nop

    .line 12980
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getMonitoredRailChargeConsumedMaMs()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v42

    .line 12981
    .local v42, "monitoredRailChargeConsumedMaMs":J
    sget v7, Landroid/os/BatteryStats;->NUM_DATA_CONNECTION_TYPES:I

    new-array v7, v7, [J

    .line 12982
    .local v7, "timeInRatMs":[J
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_0
    array-length v10, v7

    if-ge v9, v10, :cond_0

    .line 12983
    invoke-virtual {v0, v9, v2, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getPhoneDataConnectionTime(IJI)J

    move-result-wide v10

    div-long/2addr v10, v4

    aput-wide v10, v7, v9

    .line 12982
    add-int/lit8 v9, v9, 0x1

    goto :goto_0

    .line 12986
    .end local v9    # "i":I
    :cond_0
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v9

    new-array v14, v9, [J

    .line 12987
    .local v14, "timeInRxSignalStrengthLevelMs":[J
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_1
    array-length v10, v14

    if-ge v9, v10, :cond_1

    .line 12988
    nop

    .line 12989
    invoke-virtual {v0, v9, v2, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getPhoneSignalStrengthTime(IJI)J

    move-result-wide v10

    div-long/2addr v10, v4

    aput-wide v10, v14, v9

    .line 12987
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    .line 12991
    .end local v9    # "i":I
    :cond_1
    const/4 v9, 0x5

    .line 12992
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v10

    array-length v10, v10

    .line 12991
    invoke-static {v9, v10}, Ljava/lang/Math;->min(II)I

    move-result v9

    new-array v15, v9, [J

    .line 12993
    .local v15, "txTimeMs":[J
    const-wide/16 v9, 0x0

    .line 12994
    .local v9, "totalTxTimeMs":J
    const/4 v11, 0x0

    move-wide/from16 v44, v9

    .end local v9    # "totalTxTimeMs":J
    .local v11, "i":I
    .local v44, "totalTxTimeMs":J
    :goto_2
    array-length v9, v15

    if-ge v11, v9, :cond_2

    .line 12995
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v9

    aget-object v9, v9, v11

    invoke-virtual {v9, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v9

    aput-wide v9, v15, v11

    .line 12996
    aget-wide v9, v15, v11

    add-long v44, v44, v9

    .line 12994
    add-int/lit8 v11, v11, 0x1

    goto :goto_2

    .line 12999
    .end local v11    # "i":I
    :cond_2
    new-instance v46, Landroid/os/connectivity/CellularBatteryStats;

    move-object/from16 v9, v46

    invoke-virtual {v0, v2, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v10

    div-long/2addr v10, v4

    .line 13000
    invoke-virtual {v0, v2, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getMobileRadioActiveTime(JI)J

    move-result-wide v12

    div-long/2addr v12, v4

    .line 13001
    const/4 v4, 0x1

    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v16

    move-object v5, v14

    move-object/from16 v47, v15

    .end local v14    # "timeInRxSignalStrengthLevelMs":[J
    .end local v15    # "txTimeMs":[J
    .local v5, "timeInRxSignalStrengthLevelMs":[J
    .local v47, "txTimeMs":[J
    move-wide/from16 v14, v16

    .line 13002
    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v16

    .line 13003
    invoke-virtual {v0, v8, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v18

    .line 13004
    invoke-virtual {v0, v8, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v20

    .line 13005
    invoke-static/range {v40 .. v41}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v28

    move-wide/from16 v22, v34

    move-wide/from16 v24, v36

    move-wide/from16 v26, v38

    move-object/from16 v29, v7

    move-object/from16 v30, v5

    move-object/from16 v31, v47

    move-wide/from16 v32, v42

    invoke-direct/range {v9 .. v33}, Landroid/os/connectivity/CellularBatteryStats;-><init>(JJJJJJJJJLjava/lang/Long;[J[J[JJ)V

    .line 12999
    return-object v46
.end method

.method public greylist-max-o getChargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 13071
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method protected blacklist getClockElapsedRealtime()J
    .locals 2

    .line 15456
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getCpuFreqs()[J
    .locals 1

    .line 10059
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    return-object v0
.end method

.method public greylist-max-o getCurrentDailyStartTime()J
    .locals 2

    .line 10559
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    return-wide v0
.end method

.method public greylist-max-o getDailyChargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 13076
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method public greylist-max-o getDailyDischargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 12947
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method public greylist-max-o getDailyItemLocked(I)Landroid/os/BatteryStats$DailyItem;
    .locals 2
    .param p1, "daysAgo"    # I

    .line 10553
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    sub-int/2addr v0, p1

    .line 10554
    .local v0, "index":I
    if-ltz v0, :cond_0

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/BatteryStats$DailyItem;

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    return-object v1
.end method

.method public greylist-max-o getDailyPackageChanges()Ljava/util/ArrayList;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList<",
            "Landroid/os/BatteryStats$PackageChange;",
            ">;"
        }
    .end annotation

    .line 13081
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    return-object v0
.end method

.method public greylist-max-o getDeviceIdleModeCount(II)I
    .locals 1
    .param p1, "mode"    # I
    .param p2, "which"    # I

    .line 6436
    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    .line 6442
    const/4 v0, 0x0

    return v0

    .line 6440
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0

    .line 6438
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist-max-o getDeviceIdleModeTime(IJI)J
    .locals 2
    .param p1, "mode"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6426
    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    .line 6432
    const-wide/16 v0, 0x0

    return-wide v0

    .line 6430
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0

    .line 6428
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getDeviceIdlingCount(II)I
    .locals 1
    .param p1, "mode"    # I
    .param p2, "which"    # I

    .line 6466
    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    .line 6472
    const/4 v0, 0x0

    return v0

    .line 6470
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0

    .line 6468
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist-max-o getDeviceIdlingTime(IJI)J
    .locals 2
    .param p1, "mode"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6456
    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    .line 6462
    const-wide/16 v0, 0x0

    return-wide v0

    .line 6460
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0

    .line 6458
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getDischargeAmount(I)I
    .locals 2
    .param p1, "which"    # I

    .line 13148
    if-nez p1, :cond_0

    .line 13149
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result v0

    goto :goto_0

    .line 13150
    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeStartLevel()I

    move-result v0

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeCurrentLevel()I

    move-result v1

    sub-int/2addr v0, v1

    :goto_0
    nop

    .line 13151
    .local v0, "dischargeAmount":I
    if-gez v0, :cond_1

    .line 13152
    const/4 v0, 0x0

    .line 13154
    :cond_1
    return v0
.end method

.method public greylist-max-o getDischargeAmountScreenDoze()I
    .locals 3

    .line 13211
    monitor-enter p0

    .line 13212
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 13213
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13215
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13217
    :cond_0
    monitor-exit p0

    return v0

    .line 13218
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist-max-o getDischargeAmountScreenDozeSinceCharge()I
    .locals 3

    .line 13223
    monitor-enter p0

    .line 13224
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 13225
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13227
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13229
    :cond_0
    monitor-exit p0

    return v0

    .line 13230
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist getDischargeAmountScreenOff()I
    .locals 3

    .line 13185
    monitor-enter p0

    .line 13186
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 13187
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOff(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13189
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13192
    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenDoze()I

    move-result v1

    add-int/2addr v1, v0

    monitor-exit p0

    return v1

    .line 13193
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist-max-o getDischargeAmountScreenOffSinceCharge()I
    .locals 3

    .line 13198
    monitor-enter p0

    .line 13199
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 13200
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOff(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13202
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13205
    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenDozeSinceCharge()I

    move-result v1

    add-int/2addr v1, v0

    monitor-exit p0

    return v1

    .line 13206
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist getDischargeAmountScreenOn()I
    .locals 3

    .line 13160
    monitor-enter p0

    .line 13161
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 13162
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13164
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13166
    :cond_0
    monitor-exit p0

    return v0

    .line 13167
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist-max-o getDischargeAmountScreenOnSinceCharge()I
    .locals 3

    .line 13172
    monitor-enter p0

    .line 13173
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 13174
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13176
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13178
    :cond_0
    monitor-exit p0

    return v0

    .line 13179
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist getDischargeCurrentLevel()I
    .locals 1

    .line 13114
    monitor-enter p0

    .line 13115
    :try_start_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeCurrentLevelLocked()I

    move-result v0

    monitor-exit p0

    return v0

    .line 13116
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist-max-o getDischargeCurrentLevelLocked()I
    .locals 1

    .line 13120
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    return v0
.end method

.method public greylist-max-o getDischargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 12942
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method public greylist getDischargeStartLevel()I
    .locals 1

    .line 13102
    monitor-enter p0

    .line 13103
    :try_start_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeStartLevelLocked()I

    move-result v0

    monitor-exit p0

    return v0

    .line 13104
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist-max-o getDischargeStartLevelLocked()I
    .locals 1

    .line 13108
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    return v0
.end method

.method public greylist-max-o getEndPlatformVersion()Ljava/lang/String;
    .locals 1

    .line 6743
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    return-object v0
.end method

.method public greylist-max-o getEstimatedBatteryCapacity()I
    .locals 1

    .line 1105
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    return v0
.end method

.method public greylist-max-o getExternalStatsCollectionRateLimitMs()J
    .locals 2

    .line 13549
    monitor-enter p0

    .line 13550
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;->EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS:J

    monitor-exit p0

    return-wide v0

    .line 13551
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist-max-o getFlashlightOnCount(I)J
    .locals 2
    .param p1, "which"    # I

    .line 6691
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    int-to-long v0, v0

    return-wide v0
.end method

.method public greylist-max-o getFlashlightOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6686
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getGlobalWifiRunningTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6609
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getGpsBatteryDrainMaMs()J
    .locals 14

    .line 6491
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-wide/16 v1, 0x0

    if-nez v0, :cond_0

    .line 6492
    return-wide v1

    .line 6495
    :cond_0
    const-string v3, "gps.voltage"

    invoke-virtual {v0, v3}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v3

    const-wide v5, 0x408f400000000000L    # 1000.0

    div-double/2addr v3, v5

    .line 6497
    .local v3, "opVolt":D
    const-wide/16 v5, 0x0

    cmpl-double v0, v3, v5

    if-nez v0, :cond_1

    .line 6498
    return-wide v1

    .line 6500
    :cond_1
    const-wide/16 v0, 0x0

    .line 6501
    .local v0, "energyUsedMaMs":D
    const/4 v2, 0x0

    .line 6502
    .local v2, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    const-wide/16 v7, 0x3e8

    mul-long/2addr v5, v7

    .line 6503
    .local v5, "rawRealtime":J
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_0
    const/4 v10, 0x2

    if-ge v9, v10, :cond_2

    .line 6504
    iget-object v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    .line 6505
    const-string v11, "gps.signalqualitybased"

    invoke-virtual {v10, v11, v9}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;I)D

    move-result-wide v10

    const/4 v12, 0x0

    .line 6506
    invoke-virtual {p0, v9, v5, v6, v12}, Lcom/android/internal/os/BatteryStatsImpl;->getGpsSignalQualityTime(IJI)J

    move-result-wide v12

    div-long/2addr v12, v7

    long-to-double v12, v12

    mul-double/2addr v10, v12

    add-double/2addr v0, v10

    .line 6503
    add-int/lit8 v9, v9, 0x1

    goto :goto_0

    .line 6510
    .end local v9    # "i":I
    :cond_2
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    double-to-long v8, v0

    invoke-virtual {v7, v8, v9}, Lcom/android/internal/os/OppoDevicePowerStats;->recordGpsPowerDrainMaMs(J)V

    .line 6512
    double-to-long v7, v0

    return-wide v7
.end method

.method public greylist-max-o getGpsBatteryStats()Landroid/os/connectivity/GpsBatteryStats;
    .locals 11

    .line 13056
    new-instance v0, Landroid/os/connectivity/GpsBatteryStats;

    invoke-direct {v0}, Landroid/os/connectivity/GpsBatteryStats;-><init>()V

    .line 13057
    .local v0, "s":Landroid/os/connectivity/GpsBatteryStats;
    const/4 v1, 0x0

    .line 13058
    .local v1, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    const-wide/16 v4, 0x3e8

    mul-long/2addr v2, v4

    .line 13059
    .local v2, "rawRealTime":J
    const/4 v6, 0x0

    invoke-virtual {p0, v2, v3, v6}, Lcom/android/internal/os/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v7

    div-long/2addr v7, v4

    invoke-virtual {v0, v7, v8}, Landroid/os/connectivity/GpsBatteryStats;->setLoggingDurationMs(J)V

    .line 13060
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getGpsBatteryDrainMaMs()J

    move-result-wide v7

    invoke-virtual {v0, v7, v8}, Landroid/os/connectivity/GpsBatteryStats;->setEnergyConsumedMaMs(J)V

    .line 13061
    const/4 v7, 0x2

    new-array v7, v7, [J

    .line 13062
    .local v7, "time":[J
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_0
    array-length v9, v7

    if-ge v8, v9, :cond_0

    .line 13063
    invoke-virtual {p0, v8, v2, v3, v6}, Lcom/android/internal/os/BatteryStatsImpl;->getGpsSignalQualityTime(IJI)J

    move-result-wide v9

    div-long/2addr v9, v4

    aput-wide v9, v7, v8

    .line 13062
    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    .line 13065
    .end local v8    # "i":I
    :cond_0
    invoke-virtual {v0, v7}, Landroid/os/connectivity/GpsBatteryStats;->setTimeInGpsSignalQualityLevel([J)V

    .line 13066
    return-object v0
.end method

.method public greylist-max-o getGpsSignalQualityTime(IJI)J
    .locals 2
    .param p1, "strengthBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6481
    if-ltz p1, :cond_1

    const/4 v0, 0x2

    if-lt p1, v0, :cond_0

    goto :goto_0

    .line 6484
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0

    .line 6482
    :cond_1
    :goto_0
    const-wide/16 v0, 0x0

    return-wide v0
.end method

.method public greylist-max-o getHighDischargeAmountSinceCharge()I
    .locals 3

    .line 13136
    monitor-enter p0

    .line 13137
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 13138
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13139
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13141
    :cond_0
    monitor-exit p0

    return v0

    .line 13142
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist-max-o getHistoryBaseTime()J
    .locals 2

    .line 10702
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    return-wide v0
.end method

.method public blacklist getHistoryBufferSize()I
    .locals 1

    .line 15493
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    div-int/lit8 v0, v0, 0x2

    return v0
.end method

.method public greylist-max-o getHistoryStringPoolBytes()I
    .locals 2

    .line 10662
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    array-length v0, v0

    mul-int/lit8 v0, v0, 0xc

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    mul-int/lit8 v1, v1, 0x2

    add-int/2addr v0, v1

    return v0
.end method

.method public greylist-max-o getHistoryStringPoolSize()I
    .locals 1

    .line 10655
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    array-length v0, v0

    return v0
.end method

.method public greylist-max-o getHistoryTagPoolString(I)Ljava/lang/String;
    .locals 1
    .param p1, "index"    # I

    .line 10667
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public greylist-max-o getHistoryTagPoolUid(I)I
    .locals 1
    .param p1, "index"    # I

    .line 10672
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    aget v0, v0, p1

    return v0
.end method

.method public greylist-max-o getHistoryTotalSize()I
    .locals 2

    .line 10627
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget v1, v1, Lcom/android/internal/os/BatteryStatsImpl$Constants;->MAX_HISTORY_FILES:I

    mul-int/2addr v0, v1

    return v0
.end method

.method public greylist-max-o getHistoryUsedSize()I
    .locals 1

    .line 10631
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->getHistoryUsedSize()I

    move-result v0

    return v0
.end method

.method public greylist-max-o getInteractiveTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6413
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getIsOnBattery()Z
    .locals 1

    .line 6751
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    return v0
.end method

.method public greylist-max-o getKernelMemoryStats()Landroid/util/LongSparseArray;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Landroid/util/LongSparseArray<",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation

    .line 240
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    return-object v0
.end method

.method public greylist-max-o getKernelMemoryTimerLocked(J)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "bucket"    # J

    .line 3094
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, p1, p2}, Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 3095
    .local v0, "kmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3096
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3097
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1, p1, p2, v0}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    .line 3099
    :cond_0
    return-object v0
.end method

.method public greylist getKernelWakelockStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/BatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 1067
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public greylist-max-o getKernelWakelockTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3085
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 3086
    .local v0, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3087
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3088
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3090
    :cond_0
    return-object v0
.end method

.method public greylist-max-o getLongestDeviceIdleModeTime(I)J
    .locals 2
    .param p1, "mode"    # I

    .line 6446
    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    .line 6452
    const-wide/16 v0, 0x0

    return-wide v0

    .line 6450
    :cond_0
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    return-wide v0

    .line 6448
    :cond_1
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    return-wide v0
.end method

.method public greylist-max-o getLowDischargeAmountSinceCharge()I
    .locals 3

    .line 13125
    monitor-enter p0

    .line 13126
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 13127
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13128
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/lit8 v1, v1, -0x1

    add-int/2addr v0, v1

    .line 13130
    :cond_0
    monitor-exit p0

    return v0

    .line 13131
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public greylist-max-o getMaxLearnedBatteryCapacity()I
    .locals 1

    .line 1115
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    return v0
.end method

.method public greylist-max-o getMinLearnedBatteryCapacity()I
    .locals 1

    .line 1110
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    return v0
.end method

.method public greylist-max-o getMobileIfaces()[Ljava/lang/String;
    .locals 2

    .line 6379
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    .line 6380
    :try_start_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    monitor-exit v0

    return-object v1

    .line 6381
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public greylist-max-o getMobileRadioActiveAdjustedTime(I)J
    .locals 2
    .param p1, "which"    # I

    .line 6577
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getMobileRadioActiveCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6573
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist getMobileRadioActiveTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6569
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getMobileRadioActiveUnknownCount(I)I
    .locals 2
    .param p1, "which"    # I

    .line 6585
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    long-to-int v0, v0

    return v0
.end method

.method public greylist-max-o getMobileRadioActiveUnknownTime(I)J
    .locals 2
    .param p1, "which"    # I

    .line 6581
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getModemControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    .line 6666
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    return-object v0
.end method

.method public greylist getNetworkActivityBytes(II)J
    .locals 2
    .param p1, "type"    # I
    .param p2, "which"    # I

    .line 6707
    if-ltz p1, :cond_0

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v1, v0

    if-ge p1, v1, :cond_0

    .line 6708
    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0

    .line 6710
    :cond_0
    const-wide/16 v0, 0x0

    return-wide v0
.end method

.method public greylist-max-o getNetworkActivityPackets(II)J
    .locals 2
    .param p1, "type"    # I
    .param p2, "which"    # I

    .line 6716
    if-ltz p1, :cond_0

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v1, v0

    if-ge p1, v1, :cond_0

    .line 6717
    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0

    .line 6719
    :cond_0
    const-wide/16 v0, 0x0

    return-wide v0
.end method

.method public greylist getNextHistoryLocked(Landroid/os/BatteryStats$HistoryItem;)Z
    .locals 7
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryItem;

    .line 10678
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsHistory;->getNextParcel(Landroid/os/BatteryStats$HistoryItem;)Landroid/os/Parcel;

    move-result-object v0

    .line 10679
    .local v0, "p":Landroid/os/Parcel;
    if-nez v0, :cond_0

    .line 10680
    const/4 v1, 0x0

    return v1

    .line 10682
    :cond_0
    iget-wide v1, p1, Landroid/os/BatteryStats$HistoryItem;->time:J

    .line 10683
    .local v1, "lastRealtime":J
    iget-wide v3, p1, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 10684
    .local v3, "lastWalltime":J
    invoke-virtual {p0, v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V

    .line 10685
    iget-byte v5, p1, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    const/4 v6, 0x5

    if-eq v5, v6, :cond_1

    iget-byte v5, p1, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    const/4 v6, 0x7

    if-eq v5, v6, :cond_1

    const-wide/16 v5, 0x0

    cmp-long v5, v3, v5

    if-eqz v5, :cond_1

    .line 10687
    iget-wide v5, p1, Landroid/os/BatteryStats$HistoryItem;->time:J

    sub-long/2addr v5, v1

    add-long/2addr v5, v3

    iput-wide v5, p1, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 10689
    :cond_1
    const/4 v5, 0x1

    return v5
.end method

.method public greylist-max-o getNextMaxDailyDeadline()J
    .locals 2

    .line 10569
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    return-wide v0
.end method

.method public greylist-max-o getNextMinDailyDeadline()J
    .locals 2

    .line 10564
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    return-wide v0
.end method

.method public greylist-max-o getNextOldHistoryLocked(Landroid/os/BatteryStats$HistoryItem;)Z
    .locals 14
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryItem;

    .line 10588
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataPosition()I

    move-result v0

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    move-result v1

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-lt v0, v1, :cond_0

    move v0, v2

    goto :goto_0

    :cond_0
    move v0, v3

    .line 10589
    .local v0, "end":Z
    :goto_0
    if-nez v0, :cond_2

    .line 10590
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, v1, v4}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V

    .line 10591
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v4, v4, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    const/4 v5, 0x6

    if-ne v4, v5, :cond_1

    move v4, v2

    goto :goto_1

    :cond_1
    move v4, v3

    :goto_1
    or-int/2addr v1, v4

    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    .line 10593
    :cond_2
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    .line 10594
    .local v1, "cur":Landroid/os/BatteryStats$HistoryItem;
    const-string v4, "BatteryStatsImpl"

    if-nez v1, :cond_4

    .line 10595
    iget-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    if-nez v2, :cond_3

    if-nez v0, :cond_3

    .line 10596
    const-string v2, "Old history ends before new history!"

    invoke-static {v4, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10598
    :cond_3
    return v3

    .line 10600
    :cond_4
    invoke-virtual {p1, v1}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    .line 10601
    iget-object v3, v1, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    .line 10602
    iget-boolean v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    if-nez v3, :cond_6

    .line 10603
    if-eqz v0, :cond_5

    .line 10604
    const-string v3, "New history ends before old history!"

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 10605
    :cond_5
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p1, v3}, Landroid/os/BatteryStats$HistoryItem;->same(Landroid/os/BatteryStats$HistoryItem;)Z

    move-result v3

    if-nez v3, :cond_6

    .line 10606
    new-instance v3, Lcom/android/internal/util/FastPrintWriter;

    new-instance v5, Landroid/util/LogWriter;

    const/4 v6, 0x5

    invoke-direct {v5, v6, v4}, Landroid/util/LogWriter;-><init>(ILjava/lang/String;)V

    invoke-direct {v3, v5}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;)V

    .line 10607
    .local v3, "pw":Ljava/io/PrintWriter;
    const-string v4, "Histories differ!"

    invoke-virtual {v3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10608
    const-string v4, "Old history:"

    invoke-virtual {v3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10609
    new-instance v7, Landroid/os/BatteryStats$HistoryPrinter;

    invoke-direct {v7}, Landroid/os/BatteryStats$HistoryPrinter;-><init>()V

    const-wide/16 v10, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x1

    move-object v8, v3

    move-object v9, p1

    invoke-virtual/range {v7 .. v13}, Landroid/os/BatteryStats$HistoryPrinter;->printNextItem(Ljava/io/PrintWriter;Landroid/os/BatteryStats$HistoryItem;JZZ)V

    .line 10610
    const-string v4, "New history:"

    invoke-virtual {v3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10611
    new-instance v7, Landroid/os/BatteryStats$HistoryPrinter;

    invoke-direct {v7}, Landroid/os/BatteryStats$HistoryPrinter;-><init>()V

    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual/range {v7 .. v13}, Landroid/os/BatteryStats$HistoryPrinter;->printNextItem(Ljava/io/PrintWriter;Landroid/os/BatteryStats$HistoryItem;JZZ)V

    .line 10613
    invoke-virtual {v3}, Ljava/io/PrintWriter;->flush()V

    .line 10616
    .end local v3    # "pw":Ljava/io/PrintWriter;
    :cond_6
    :goto_2
    return v2
.end method

.method public greylist-max-o getNumConnectivityChange(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6476
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    return v0
.end method

.method public greylist getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pkg"    # Ljava/lang/String;

    .line 13308
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 13309
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 13310
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getPackageStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v1

    return-object v1
.end method

.method public greylist-max-o getParcelVersion()I
    .locals 1

    .line 6747
    const/16 v0, 0xba

    return v0
.end method

.method public greylist getPhoneDataConnectionCount(II)I
    .locals 1
    .param p1, "dataType"    # I
    .param p2, "which"    # I

    .line 6560
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist getPhoneDataConnectionTime(IJI)J
    .locals 2
    .param p1, "dataType"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6554
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getPhoneDataConnectionTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 151
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getPhoneDataConnectionTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public greylist-max-o getPhoneDataConnectionTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "dataType"    # I

    .line 6564
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public greylist-max-o getPhoneOnCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6521
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist getPhoneOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6517
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getPhoneSignalScanningTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6534
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getPhoneSignalScanningTimer()Landroid/os/BatteryStats$Timer;
    .locals 1

    .line 151
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getPhoneSignalScanningTimer()Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object v0

    return-object v0
.end method

.method public greylist-max-o getPhoneSignalScanningTimer()Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1

    .line 6539
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    return-object v0
.end method

.method public greylist getPhoneSignalStrengthCount(II)I
    .locals 1
    .param p1, "strengthBin"    # I
    .param p2, "which"    # I

    .line 6544
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist getPhoneSignalStrengthTime(IJI)J
    .locals 2
    .param p1, "strengthBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6527
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getPhoneSignalStrengthTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 151
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getPhoneSignalStrengthTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public greylist-max-o getPhoneSignalStrengthTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "strengthBin"    # I

    .line 6548
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public greylist-max-o getPowerSaveModeEnabledCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6421
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist-max-o getPowerSaveModeEnabledTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6417
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "name"    # Ljava/lang/String;

    .line 13297
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 13298
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 13299
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v1

    return-object v1
.end method

.method public greylist-max-o getProcessWakeTime(IIJ)J
    .locals 7
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "realtime"    # J

    .line 4644
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4645
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 4646
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    const-wide/16 v1, 0x0

    if-eqz v0, :cond_1

    .line 4647
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPids:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$Uid$Pid;

    .line 4648
    .local v3, "p":Landroid/os/BatteryStats$Uid$Pid;
    if-eqz v3, :cond_1

    .line 4649
    iget-wide v4, v3, Landroid/os/BatteryStats$Uid$Pid;->mWakeSumMs:J

    iget v6, v3, Landroid/os/BatteryStats$Uid$Pid;->mWakeNesting:I

    if-lez v6, :cond_0

    iget-wide v1, v3, Landroid/os/BatteryStats$Uid$Pid;->mWakeStartMs:J

    sub-long v1, p3, v1

    :cond_0
    add-long/2addr v4, v1

    return-wide v4

    .line 4652
    .end local v3    # "p":Landroid/os/BatteryStats$Uid$Pid;
    :cond_1
    return-wide v1
.end method

.method public greylist-max-o getRpmStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/BatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 1051
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public greylist-max-o getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3049
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 3050
    .local v0, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3051
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3052
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3054
    :cond_0
    return-object v0
.end method

.method public greylist getScreenBrightnessTime(IJI)J
    .locals 2
    .param p1, "brightnessBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6404
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getScreenBrightnessTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 151
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getScreenBrightnessTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public greylist-max-o getScreenBrightnessTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "brightnessBin"    # I

    .line 6409
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public greylist-max-o getScreenDozeCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6398
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist-max-o getScreenDozeTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6394
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getScreenOffRpmStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/BatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 1057
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public greylist-max-o getScreenOffRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3059
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 3060
    .local v0, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3061
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3062
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3064
    :cond_0
    return-object v0
.end method

.method public greylist-max-o getScreenOnCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6390
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist getScreenOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6386
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method protected blacklist getScreenState()I
    .locals 1

    .line 15488
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    return v0
.end method

.method public greylist getServiceStatsLocked(ILjava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "name"    # Ljava/lang/String;

    .line 13319
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 13320
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 13321
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getServiceStatsLocked(Ljava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    move-result-object v1

    return-object v1
.end method

.method public greylist-max-o getStartClockTime()J
    .locals 9

    .line 6724
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v7

    .line 6725
    .local v7, "currentTime":J
    const-wide v0, 0x757b12c00L

    cmp-long v2, v7, v0

    if-lez v2, :cond_0

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    sub-long v0, v7, v0

    cmp-long v0, v2, v0

    if-ltz v0, :cond_1

    :cond_0
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    cmp-long v2, v0, v7

    if-lez v2, :cond_2

    .line 6731
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 6732
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v5

    .line 6731
    move-object v0, p0

    move-wide v1, v7

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->recordCurrentTimeChangeLocked(JJJ)V

    .line 6733
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    const-wide/16 v4, 0x3e8

    div-long/2addr v2, v4

    sub-long/2addr v0, v2

    sub-long v0, v7, v0

    return-wide v0

    .line 6735
    :cond_2
    return-wide v0
.end method

.method public greylist-max-o getStartCount()I
    .locals 1

    .line 10707
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    return v0
.end method

.method public greylist-max-o getStartPlatformVersion()Ljava/lang/String;
    .locals 1

    .line 6739
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    return-object v0
.end method

.method public greylist-max-o getUahDischarge(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1080
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getUahDischargeDeepDoze(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1100
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getUahDischargeLightDoze(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1095
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getUahDischargeScreenDoze(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1090
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getUahDischargeScreenOff(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1085
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getUidStats()Landroid/util/SparseArray;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Landroid/util/SparseArray<",
            "+",
            "Landroid/os/BatteryStats$Uid;",
            ">;"
        }
    .end annotation

    .line 6756
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    return-object v0
.end method

.method public greylist getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .locals 2
    .param p1, "uid"    # I

    .line 13238
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 13239
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-nez v0, :cond_0

    .line 13240
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-direct {v1, p0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/BatteryStatsImpl;I)V

    move-object v0, v1

    .line 13241
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, p1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13243
    :cond_0
    return-object v0
.end method

.method public greylist-max-o getWakeupReasonStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/BatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 1075
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public greylist-max-o getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3072
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 3073
    .local v0, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3074
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3075
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3077
    :cond_0
    return-object v0
.end method

.method public greylist-max-o getWifiActiveTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6604
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist-max-o getWifiBatteryStats()Landroid/os/connectivity/WifiBatteryStats;
    .locals 61

    .line 13012
    move-object/from16 v0, p0

    const/4 v1, 0x0

    .line 13013
    .local v1, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    const-wide/16 v4, 0x3e8

    mul-long/2addr v2, v4

    .line 13014
    .local v2, "rawRealTime":J
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;

    move-result-object v6

    .line 13015
    .local v6, "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getIdleTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    const/4 v8, 0x0

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v41

    .line 13016
    .local v41, "idleTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getScanTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v43

    .line 13017
    .local v43, "scanTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getRxTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v45

    .line 13018
    .local v45, "rxTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    aget-object v7, v7, v8

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v47

    .line 13019
    .local v47, "txTimeMs":J
    nop

    .line 13020
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v9

    mul-long/2addr v9, v4

    invoke-virtual {v0, v9, v10, v8}, Lcom/android/internal/os/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v9

    div-long v49, v9, v4

    .line 13021
    .local v49, "totalControllerActivityTimeMs":J
    add-long v9, v41, v45

    add-long v9, v9, v47

    sub-long v51, v49, v9

    .line 13023
    .local v51, "sleepTimeMs":J
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getPowerCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v53

    .line 13024
    .local v53, "energyConsumedMaMs":J
    nop

    .line 13025
    invoke-virtual {v6}, Landroid/os/BatteryStats$ControllerActivityCounter;->getMonitoredRailChargeConsumedMaMs()Landroid/os/BatteryStats$LongCounter;

    move-result-object v7

    invoke-virtual {v7, v8}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v55

    .line 13026
    .local v55, "monitoredRailChargeConsumedMaMs":J
    const-wide/16 v9, 0x0

    .line 13027
    .local v9, "numAppScanRequest":J
    const/4 v7, 0x0

    move-wide/from16 v57, v9

    .end local v9    # "numAppScanRequest":J
    .local v7, "i":I
    .local v57, "numAppScanRequest":J
    :goto_0
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v9}, Landroid/util/SparseArray;->size()I

    move-result v9

    if-ge v7, v9, :cond_0

    .line 13028
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v9, v7}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    iget-object v9, v9, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v9, v8}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->getCountLocked(I)I

    move-result v9

    int-to-long v9, v9

    add-long v57, v57, v9

    .line 13027
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 13030
    .end local v7    # "i":I
    :cond_0
    const/16 v7, 0x8

    new-array v14, v7, [J

    .line 13031
    .local v14, "timeInStateMs":[J
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_1
    if-ge v9, v7, :cond_1

    .line 13032
    invoke-virtual {v0, v9, v2, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiStateTime(IJI)J

    move-result-wide v10

    div-long/2addr v10, v4

    aput-wide v10, v14, v9

    .line 13031
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    .line 13034
    .end local v9    # "i":I
    :cond_1
    const/16 v7, 0xd

    new-array v15, v7, [J

    .line 13035
    .local v15, "timeInSupplStateMs":[J
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_2
    if-ge v9, v7, :cond_2

    .line 13036
    invoke-virtual {v0, v9, v2, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiSupplStateTime(IJI)J

    move-result-wide v10

    div-long/2addr v10, v4

    aput-wide v10, v15, v9

    .line 13035
    add-int/lit8 v9, v9, 0x1

    goto :goto_2

    .line 13038
    .end local v9    # "i":I
    :cond_2
    const/4 v7, 0x5

    new-array v12, v7, [J

    .line 13039
    .local v12, "timeSignalStrengthTimeMs":[J
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_3
    if-ge v9, v7, :cond_3

    .line 13040
    invoke-virtual {v0, v9, v2, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiSignalStrengthTime(IJI)J

    move-result-wide v10

    div-long/2addr v10, v4

    aput-wide v10, v12, v9

    .line 13039
    add-int/lit8 v9, v9, 0x1

    goto :goto_3

    .line 13042
    .end local v9    # "i":I
    :cond_3
    new-instance v7, Landroid/os/connectivity/WifiBatteryStats;

    move-object v9, v7

    .line 13043
    invoke-virtual {v0, v2, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v10

    div-long/2addr v10, v4

    .line 13044
    invoke-virtual {v0, v2, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiActiveTime(JI)J

    move-result-wide v16

    div-long v4, v16, v4

    move-object/from16 v59, v12

    .end local v12    # "timeSignalStrengthTimeMs":[J
    .local v59, "timeSignalStrengthTimeMs":[J
    move-wide v12, v4

    .line 13045
    const/4 v4, 0x3

    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v16

    move-object v5, v14

    move-object/from16 v60, v15

    .end local v14    # "timeInStateMs":[J
    .end local v15    # "timeInSupplStateMs":[J
    .local v5, "timeInStateMs":[J
    .local v60, "timeInSupplStateMs":[J
    move-wide/from16 v14, v16

    .line 13046
    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v16

    .line 13047
    const/4 v4, 0x2

    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v18

    .line 13048
    invoke-virtual {v0, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v20

    move-wide/from16 v22, v51

    move-wide/from16 v24, v43

    move-wide/from16 v26, v41

    move-wide/from16 v28, v45

    move-wide/from16 v30, v47

    move-wide/from16 v32, v53

    move-wide/from16 v34, v57

    move-object/from16 v36, v5

    move-object/from16 v37, v59

    move-object/from16 v38, v60

    move-wide/from16 v39, v55

    invoke-direct/range {v9 .. v40}, Landroid/os/connectivity/WifiBatteryStats;-><init>(JJJJJJJJJJJJJ[J[J[JJ)V

    .line 13042
    return-object v7
.end method

.method public greylist-max-o getWifiControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    .line 6661
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    return-object v0
.end method

.method public greylist-max-o getWifiIfaces()[Ljava/lang/String;
    .locals 2

    .line 6373
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    .line 6374
    :try_start_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    monitor-exit v0

    return-object v1

    .line 6375
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public greylist-max-o getWifiMulticastWakelockCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6595
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist-max-o getWifiMulticastWakelockTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6590
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public greylist getWifiOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6600
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public blacklist getWifiSignalStrengthBin()I
    .locals 1

    .line 15498
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    return v0
.end method

.method public greylist-max-o getWifiSignalStrengthCount(II)I
    .locals 1
    .param p1, "strengthBin"    # I
    .param p2, "which"    # I

    .line 6647
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist-max-o getWifiSignalStrengthTime(IJI)J
    .locals 2
    .param p1, "strengthBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6642
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getWifiSignalStrengthTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 151
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiSignalStrengthTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public greylist-max-o getWifiSignalStrengthTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "strengthBin"    # I

    .line 6651
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public greylist-max-o getWifiStateCount(II)I
    .locals 1
    .param p1, "wifiState"    # I
    .param p2, "which"    # I

    .line 6619
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist-max-o getWifiStateTime(IJI)J
    .locals 2
    .param p1, "wifiState"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6614
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getWifiStateTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 151
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiStateTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public greylist-max-o getWifiStateTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "wifiState"    # I

    .line 6623
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public greylist-max-o getWifiSupplStateCount(II)I
    .locals 1
    .param p1, "state"    # I
    .param p2, "which"    # I

    .line 6633
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public greylist-max-o getWifiSupplStateTime(IJI)J
    .locals 2
    .param p1, "state"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6628
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic blacklist getWifiSupplStateTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 151
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiSupplStateTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public greylist-max-o getWifiSupplStateTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "state"    # I

    .line 6637
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public greylist-max-o hasBluetoothActivityReporting()Z
    .locals 1

    .line 6671
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    return v0
.end method

.method public greylist-max-o hasModemActivityReporting()Z
    .locals 1

    .line 6681
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    return v0
.end method

.method public greylist-max-o hasWifiActivityReporting()Z
    .locals 1

    .line 6676
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    return v0
.end method

.method greylist-max-o initDischarge()V
    .locals 2

    .line 10743
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 10744
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 10745
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 10746
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 10747
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 10748
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 10749
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 10750
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 10751
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10752
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10753
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10754
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10755
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10756
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10757
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)Z

    .line 10758
    return-void
.end method

.method greylist-max-o initTimes(JJ)V
    .locals 2
    .param p1, "uptime"    # J
    .param p3, "realtime"    # J

    .line 10733
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    .line 10734
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->init(JJ)V

    .line 10735
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->init(JJ)V

    .line 10736
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    .line 10737
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    .line 10738
    iput-wide p3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    .line 10739
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    .line 10740
    return-void
.end method

.method public greylist-max-o isCharging()Z
    .locals 1

    .line 10716
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    return v0
.end method

.method public greylist isOnBattery()Z
    .locals 1

    .line 10712
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    return v0
.end method

.method public greylist-max-o isOnBatteryLocked()Z
    .locals 1

    .line 11939
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    return v0
.end method

.method public greylist-max-o isOnBatteryScreenOffLocked()Z
    .locals 1

    .line 11943
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    return v0
.end method

.method public greylist-max-o isScreenDoze(I)Z
    .locals 1
    .param p1, "state"    # I

    .line 10729
    const/4 v0, 0x3

    if-eq p1, v0, :cond_1

    const/4 v0, 0x4

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method

.method public greylist-max-o isScreenOff(I)Z
    .locals 1
    .param p1, "state"    # I

    .line 10725
    const/4 v0, 0x1

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public greylist-max-o isScreenOn(I)Z
    .locals 1
    .param p1, "state"    # I

    .line 10720
    const/4 v0, 0x2

    if-eq p1, v0, :cond_1

    const/4 v0, 0x5

    if-eq p1, v0, :cond_1

    const/4 v0, 0x6

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method

.method public synthetic blacklist lambda$readKernelUidCpuActiveTimesLocked$2$BatteryStatsImpl(ZILjava/lang/Long;)V
    .locals 4
    .param p1, "onBattery"    # Z
    .param p2, "uid"    # I
    .param p3, "cpuActiveTimesMs"    # Ljava/lang/Long;

    .line 12350
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 12351
    invoke-static {p2}, Landroid/os/Process;->isIsolated(I)Z

    move-result v0

    const-string v1, "BatteryStatsImpl"

    if-eqz v0, :cond_0

    .line 12352
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->removeUid(I)V

    .line 12353
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got active times for an isolated uid with no mapping: "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12354
    return-void

    .line 12356
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-virtual {v0, v2}, Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v0

    if-nez v0, :cond_1

    .line 12357
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got active times for an invalid user\'s uid "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12358
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->removeUid(I)V

    .line 12359
    return-void

    .line 12361
    :cond_1
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 12362
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p3}, Ljava/lang/Long;->longValue()J

    move-result-wide v2

    invoke-virtual {v1, v2, v3, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12363
    return-void
.end method

.method public synthetic blacklist lambda$readKernelUidCpuClusterTimesLocked$3$BatteryStatsImpl(ZI[J)V
    .locals 3
    .param p1, "onBattery"    # Z
    .param p2, "uid"    # I
    .param p3, "cpuClusterTimesMs"    # [J

    .line 12379
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 12380
    invoke-static {p2}, Landroid/os/Process;->isIsolated(I)Z

    move-result v0

    const-string v1, "BatteryStatsImpl"

    if-eqz v0, :cond_0

    .line 12381
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->removeUid(I)V

    .line 12382
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got cluster times for an isolated uid with no mapping: "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12383
    return-void

    .line 12385
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-virtual {v0, v2}, Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v0

    if-nez v0, :cond_1

    .line 12386
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got cluster times for an invalid user\'s uid "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12387
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->removeUid(I)V

    .line 12388
    return-void

    .line 12390
    :cond_1
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 12391
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual {v1, p3, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    .line 12392
    return-void
.end method

.method public synthetic blacklist lambda$readKernelUidCpuFreqTimesLocked$1$BatteryStatsImpl(ZZZIII[J)V
    .locals 21
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z
    .param p3, "perClusterTimesAvailable"    # Z
    .param p4, "numClusters"    # I
    .param p5, "numWakelocks"    # I
    .param p6, "uid"    # I
    .param p7, "cpuFreqTimeMs"    # [J

    .line 12237
    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v2, p4

    move-object/from16 v3, p7

    move/from16 v4, p6

    invoke-virtual {v0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 12238
    .end local p6    # "uid":I
    .local v4, "uid":I
    invoke-static {v4}, Landroid/os/Process;->isIsolated(I)Z

    move-result v5

    const-string v6, "BatteryStatsImpl"

    if-eqz v5, :cond_0

    .line 12239
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v5, v4}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->removeUid(I)V

    .line 12240
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Got freq readings for an isolated uid with no mapping: "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12241
    return-void

    .line 12243
    :cond_0
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    invoke-virtual {v5, v7}, Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v5

    if-nez v5, :cond_1

    .line 12244
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Got freq readings for an invalid user\'s uid "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12245
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v5, v4}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->removeUid(I)V

    .line 12246
    return-void

    .line 12248
    :cond_1
    invoke-virtual {v0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v5

    .line 12249
    .local v5, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v6, :cond_2

    iget-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->getSize()I

    move-result v6

    array-length v7, v3

    if-eq v6, v7, :cond_3

    .line 12250
    :cond_2
    iget-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v6}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 12251
    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 12253
    :cond_3
    iget-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual {v6, v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    .line 12254
    iget-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v6, :cond_4

    iget-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 12255
    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->getSize()I

    move-result v6

    array-length v7, v3

    if-eq v6, v7, :cond_5

    .line 12256
    :cond_4
    iget-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v6}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 12257
    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 12260
    :cond_5
    iget-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    move/from16 v7, p2

    invoke-virtual {v6, v3, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    .line 12262
    if-eqz p3, :cond_f

    .line 12263
    iget-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v6, :cond_6

    iget-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v6, v6

    if-eq v6, v2, :cond_7

    .line 12265
    :cond_6
    iget-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-static {v6}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 12266
    new-array v6, v2, [[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v6, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 12268
    :cond_7
    if-lez p5, :cond_8

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    if-nez v6, :cond_8

    .line 12269
    new-array v6, v2, [[J

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    .line 12272
    :cond_8
    const/4 v6, 0x0

    .line 12273
    .local v6, "freqIndex":I
    const/4 v8, 0x0

    .local v8, "cluster":I
    :goto_0
    if-ge v8, v2, :cond_f

    .line 12274
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v9, v8}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v9

    .line 12275
    .local v9, "speedsInCluster":I
    iget-object v10, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v10, v10, v8

    if-eqz v10, :cond_9

    iget-object v10, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v10, v10, v8

    array-length v10, v10

    if-eq v10, v9, :cond_a

    .line 12277
    :cond_9
    iget-object v10, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v10, v10, v8

    invoke-static {v10}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 12278
    iget-object v10, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-array v11, v9, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aput-object v11, v10, v8

    .line 12281
    :cond_a
    if-lez p5, :cond_b

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v11, v10, v8

    if-nez v11, :cond_b

    .line 12282
    new-array v11, v9, [J

    aput-object v11, v10, v8

    .line 12284
    :cond_b
    iget-object v10, v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v10, v10, v8

    .line 12285
    .local v10, "cpuTimesUs":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    const/4 v11, 0x0

    .local v11, "speed":I
    :goto_1
    if-ge v11, v9, :cond_e

    .line 12286
    aget-object v12, v10, v11

    if-nez v12, :cond_c

    .line 12287
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v12, v10, v11

    .line 12290
    :cond_c
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    const-wide/16 v13, 0x3e8

    if-eqz v12, :cond_d

    .line 12291
    aget-wide v15, v3, v6

    mul-long/2addr v15, v13

    const-wide/16 v17, 0x32

    mul-long v15, v15, v17

    const-wide/16 v17, 0x64

    div-long v15, v15, v17

    .line 12293
    .local v15, "appAllocationUs":J
    aget-object v12, v12, v8

    aget-wide v17, v12, v11

    aget-wide v19, v3, v6

    mul-long v19, v19, v13

    sub-long v19, v19, v15

    add-long v17, v17, v19

    aput-wide v17, v12, v11

    move-wide v12, v15

    goto :goto_2

    .line 12296
    .end local v15    # "appAllocationUs":J
    :cond_d
    aget-wide v15, v3, v6

    mul-long/2addr v15, v13

    move-wide v12, v15

    .line 12298
    .local v12, "appAllocationUs":J
    :goto_2
    aget-object v14, v10, v11

    invoke-virtual {v14, v12, v13, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12299
    nop

    .end local v12    # "appAllocationUs":J
    add-int/lit8 v6, v6, 0x1

    .line 12285
    add-int/lit8 v11, v11, 0x1

    goto :goto_1

    .line 12273
    .end local v9    # "speedsInCluster":I
    .end local v10    # "cpuTimesUs":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    .end local v11    # "speed":I
    :cond_e
    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    .line 12303
    .end local v6    # "freqIndex":I
    .end local v8    # "cluster":I
    :cond_f
    return-void
.end method

.method public synthetic blacklist lambda$readKernelUidCpuTimesLocked$0$BatteryStatsImpl(IZLandroid/util/SparseLongArray;I[J)V
    .locals 17
    .param p1, "numWakelocks"    # I
    .param p2, "onBattery"    # Z
    .param p3, "updatedUids"    # Landroid/util/SparseLongArray;
    .param p4, "uid"    # I
    .param p5, "timesUs"    # [J

    .line 12125
    move-object/from16 v0, p0

    move/from16 v1, p2

    move-object/from16 v2, p3

    const/4 v3, 0x0

    aget-wide v3, p5, v3

    .local v3, "userTimeUs":J
    const/4 v5, 0x1

    aget-wide v5, p5, v5

    .line 12127
    .local v5, "systemTimeUs":J
    move/from16 v7, p4

    invoke-virtual {v0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    .line 12128
    .end local p4    # "uid":I
    .local v7, "uid":I
    invoke-static {v7}, Landroid/os/Process;->isIsolated(I)Z

    move-result v8

    const-string v9, "BatteryStatsImpl"

    if-eqz v8, :cond_0

    .line 12131
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    invoke-virtual {v8, v7}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->removeUid(I)V

    .line 12132
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Got readings for an isolated uid with no mapping: "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v9, v8}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12133
    return-void

    .line 12135
    :cond_0
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    invoke-virtual {v8, v10}, Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v8

    if-nez v8, :cond_1

    .line 12136
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Got readings for an invalid user\'s uid "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v9, v8}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12137
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    invoke-virtual {v8, v7}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->removeUid(I)V

    .line 12138
    return-void

    .line 12140
    :cond_1
    invoke-virtual {v0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v8

    .line 12143
    .local v8, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    add-long/2addr v10, v3

    iput-wide v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12144
    iget-wide v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    add-long/2addr v10, v5

    iput-wide v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    .line 12146
    const/4 v10, 0x0

    .line 12156
    .local v10, "sb":Ljava/lang/StringBuilder;
    if-lez p1, :cond_2

    .line 12160
    const-wide/16 v11, 0x32

    mul-long v13, v3, v11

    const-wide/16 v15, 0x64

    div-long v3, v13, v15

    .line 12161
    mul-long/2addr v11, v5

    div-long v5, v11, v15

    .line 12164
    :cond_2
    if-eqz v10, :cond_3

    .line 12165
    const-string v11, "  adding to uid="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v11, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, ": u="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12166
    const-wide/16 v11, 0x3e8

    div-long v13, v3, v11

    invoke-static {v13, v14, v10}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 12167
    const-string v13, " s="

    invoke-virtual {v10, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12168
    div-long v11, v5, v11

    invoke-static {v11, v12, v10}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 12169
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v9, v11}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12172
    :cond_3
    iget-object v9, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v9, v3, v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12173
    iget-object v9, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v9, v5, v6, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12174
    if-eqz v2, :cond_4

    .line 12175
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUid()I

    move-result v9

    add-long v11, v3, v5

    invoke-virtual {v2, v9, v11, v12}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 12177
    :cond_4
    return-void
.end method

.method public greylist-max-o mapUid(I)I
    .locals 2
    .param p1, "uid"    # I

    .line 3993
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    const/4 v1, -0x1

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseIntArray;->get(II)I

    move-result v0

    .line 3994
    .local v0, "isolated":I
    if-lez v0, :cond_0

    move v1, v0

    goto :goto_0

    :cond_0
    move v1, p1

    :goto_0
    return v1
.end method

.method public greylist-max-o markPartialTimersAsEligible()V
    .locals 5

    .line 12029
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-static {v0, v1}, Lcom/android/internal/util/ArrayUtils;->referenceEquals(Ljava/util/ArrayList;Ljava/util/ArrayList;)Z

    move-result v0

    const/4 v1, 0x1

    if-eqz v0, :cond_1

    .line 12031
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    .line 12032
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-boolean v1, v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    .line 12031
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .end local v0    # "i":I
    :cond_0
    goto :goto_3

    .line 12037
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v1

    .restart local v0    # "i":I
    :goto_1
    if-ltz v0, :cond_2

    .line 12038
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    const/4 v3, 0x0

    iput-boolean v3, v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    .line 12037
    add-int/lit8 v0, v0, -0x1

    goto :goto_1

    .line 12040
    .end local v0    # "i":I
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 12043
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 12044
    .local v0, "numPartialTimers":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_2
    if-ge v2, v0, :cond_3

    .line 12045
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 12046
    .local v3, "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    iput-boolean v1, v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    .line 12047
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 12044
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 12050
    .end local v0    # "numPartialTimers":I
    .end local v2    # "i":I
    :cond_3
    :goto_3
    return-void
.end method

.method public greylist-max-o noteActivityPausedLocked(I)V
    .locals 3
    .param p1, "uid"    # I

    .line 5655
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5656
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteActivityPausedLocked(J)V

    .line 5657
    return-void
.end method

.method public blacklist noteActivityPausedLocked(ILandroid/content/ComponentName;)V
    .locals 8
    .param p1, "uid"    # I
    .param p2, "component"    # Landroid/content/ComponentName;

    .line 5641
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->noteActivityPausedLocked(I)V

    .line 5643
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5645
    iget-boolean v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v5

    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    invoke-super/range {v0 .. v7}, Lcom/android/internal/os/OplusBaseBatteryStatsImpl;->noteActivityPausedLocked(ILandroid/content/ComponentName;ZLandroid/os/BatteryStats$HistoryItem;JLandroid/os/Handler;)V

    .line 5646
    return-void
.end method

.method public greylist-max-o noteActivityResumedLocked(I)V
    .locals 3
    .param p1, "uid"    # I

    .line 5650
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5651
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteActivityResumedLocked(J)V

    .line 5652
    return-void
.end method

.method public blacklist noteActivityResumedLocked(ILandroid/content/ComponentName;)V
    .locals 9
    .param p1, "uid"    # I
    .param p2, "component"    # Landroid/content/ComponentName;

    .line 5627
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->noteActivityResumedLocked(I)V

    .line 5629
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5632
    iget-boolean v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v5

    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-virtual {p2}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v8

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    invoke-super/range {v0 .. v8}, Lcom/android/internal/os/OplusBaseBatteryStatsImpl;->noteActivityResumedLocked(ILandroid/content/ComponentName;ZLandroid/os/BatteryStats$HistoryItem;JLandroid/os/Handler;Ljava/lang/String;)V

    .line 5635
    if-eqz p2, :cond_0

    .line 5636
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    invoke-virtual {p2}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/internal/os/OppoDevicePowerStats;->recordResumeActivity(Ljava/lang/String;)V

    .line 5639
    :cond_0
    return-void
.end method

.method public greylist-max-o noteAlarmFinishLocked(Ljava/lang/String;Landroid/os/WorkSource;I)V
    .locals 1
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "workSource"    # Landroid/os/WorkSource;
    .param p3, "uid"    # I

    .line 4153
    const/16 v0, 0x400d

    invoke-direct {p0, v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;I)V

    .line 4154
    return-void
.end method

.method public greylist-max-o noteAlarmStartLocked(Ljava/lang/String;Landroid/os/WorkSource;I)V
    .locals 1
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "workSource"    # Landroid/os/WorkSource;
    .param p3, "uid"    # I

    .line 4149
    const v0, 0x800d

    invoke-direct {p0, v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;I)V

    .line 4150
    return-void
.end method

.method public greylist noteAudioOffLocked(I)V
    .locals 13
    .param p1, "uid"    # I

    .line 5515
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    if-nez v0, :cond_0

    .line 5516
    return-void

    .line 5518
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5519
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 5520
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 5521
    .local v11, "uptime":J
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    if-nez v0, :cond_1

    .line 5522
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v2, -0x400001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5525
    invoke-virtual {p0, v9, v10, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5528
    const/4 v2, 0x3

    const/4 v7, 0x0

    move-object v1, p0

    move-wide v3, v9

    move-wide v5, v11

    move v8, p1

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZI)V

    .line 5531
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5533
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteAudioTurnedOffLocked(J)V

    .line 5534
    return-void
.end method

.method public greylist noteAudioOnLocked(I)V
    .locals 12
    .param p1, "uid"    # I

    .line 5494
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5495
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 5496
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 5497
    .local v10, "uptime":J
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    if-nez v0, :cond_0

    .line 5498
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v2, 0x400000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5501
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5504
    const/4 v1, 0x3

    const/4 v6, 0x1

    move-object v0, p0

    move-wide v2, v8

    move-wide v4, v10

    move v7, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZI)V

    .line 5507
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5509
    :cond_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    .line 5510
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteAudioTurnedOnLocked(J)V

    .line 5511
    return-void
.end method

.method public greylist-max-o noteBluetoothScanResultsFromSourceLocked(Landroid/os/WorkSource;I)V
    .locals 6
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "numNewResults"    # I

    .line 5881
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 5882
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 5883
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 5884
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v3

    invoke-virtual {v3, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteBluetoothScanResultsLocked(I)V

    .line 5882
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 5887
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 5888
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 5889
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 5890
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 5891
    .local v3, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 5892
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v5

    invoke-virtual {v5, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteBluetoothScanResultsLocked(I)V

    .line 5889
    .end local v3    # "wc":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 5895
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist-max-o noteBluetoothScanStartedFromSourceLocked(Landroid/os/WorkSource;Z)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "isUnoptimized"    # Z

    .line 5812
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 5813
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 5814
    const/4 v2, 0x0

    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v3

    invoke-direct {p0, v2, v3, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5813
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 5817
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 5818
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 5819
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 5820
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    const/4 v4, -0x1

    invoke-direct {p0, v3, v4, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5819
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 5823
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist-max-o noteBluetoothScanStoppedFromSourceLocked(Landroid/os/WorkSource;Z)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "isUnoptimized"    # Z

    .line 5850
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 5851
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 5852
    const/4 v2, 0x0

    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v3

    invoke-direct {p0, v2, v3, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5851
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 5855
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 5856
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 5857
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 5858
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    const/4 v4, -0x1

    invoke-direct {p0, v3, v4, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5857
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 5861
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist-max-o noteCameraOffLocked(I)V
    .locals 13
    .param p1, "uid"    # I

    .line 5730
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    if-nez v0, :cond_0

    .line 5731
    return-void

    .line 5733
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5734
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 5735
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 5736
    .local v11, "uptime":J
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    if-nez v0, :cond_1

    .line 5737
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x200001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5740
    invoke-virtual {p0, v9, v10, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5743
    const/4 v2, 0x2

    const/4 v7, 0x0

    move-object v1, p0

    move-wide v3, v9

    move-wide v5, v11

    move v8, p1

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZI)V

    .line 5746
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5748
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteCameraTurnedOffLocked(J)V

    .line 5749
    return-void
.end method

.method public greylist-max-o noteCameraOnLocked(I)V
    .locals 12
    .param p1, "uid"    # I

    .line 5711
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5712
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 5713
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 5714
    .local v10, "uptime":J
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    add-int/lit8 v1, v0, 0x1

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    if-nez v0, :cond_0

    .line 5715
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v2, 0x200000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5718
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5721
    const/4 v1, 0x2

    const/4 v6, 0x1

    move-object v0, p0

    move-wide v2, v8

    move-wide v4, v10

    move v7, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZI)V

    .line 5724
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5726
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteCameraTurnedOnLocked(J)V

    .line 5727
    return-void
.end method

.method public greylist-max-o noteChangeWakelockFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;ILandroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IZ)V
    .locals 24
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I
    .param p6, "newWs"    # Landroid/os/WorkSource;
    .param p7, "newPid"    # I
    .param p8, "newName"    # Ljava/lang/String;
    .param p9, "newHistoryName"    # Ljava/lang/String;
    .param p10, "newType"    # I
    .param p11, "newUnimportantForLogging"    # Z

    .line 4449
    move-object/from16 v12, p0

    move-object/from16 v13, p1

    move-object/from16 v14, p6

    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v15

    .line 4450
    .local v15, "elapsedRealtime":J
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v17

    .line 4452
    .local v17, "uptime":J
    invoke-static {v13, v14}, Landroid/os/WorkSource;->diffChains(Landroid/os/WorkSource;Landroid/os/WorkSource;)[Ljava/util/ArrayList;

    move-result-object v19

    .line 4459
    .local v19, "wcs":[Ljava/util/List;, "[Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    invoke-virtual/range {p6 .. p6}, Landroid/os/WorkSource;->size()I

    move-result v10

    .line 4460
    .local v10, "NN":I
    const/4 v0, 0x0

    move v11, v0

    .local v11, "i":I
    :goto_0
    if-ge v11, v10, :cond_0

    .line 4461
    invoke-virtual {v14, v11}, Landroid/os/WorkSource;->getUid(I)I

    move-result v1

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v2, p7

    move-object/from16 v4, p8

    move-object/from16 v5, p9

    move/from16 v6, p10

    move/from16 v7, p11

    move-wide v8, v15

    move/from16 v20, v10

    move/from16 v21, v11

    .end local v10    # "NN":I
    .end local v11    # "i":I
    .local v20, "NN":I
    .local v21, "i":I
    move-wide/from16 v10, v17

    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4460
    add-int/lit8 v11, v21, 0x1

    move/from16 v10, v20

    .end local v21    # "i":I
    .restart local v11    # "i":I
    goto :goto_0

    .end local v20    # "NN":I
    .restart local v10    # "NN":I
    :cond_0
    move/from16 v20, v10

    move/from16 v21, v11

    .line 4464
    .end local v10    # "NN":I
    .end local v11    # "i":I
    .restart local v20    # "NN":I
    if-eqz v19, :cond_3

    .line 4465
    const/4 v0, 0x0

    aget-object v10, v19, v0

    .line 4466
    .local v10, "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v10, :cond_2

    .line 4467
    const/4 v0, 0x0

    move v11, v0

    .restart local v11    # "i":I
    :goto_1
    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v0

    if-ge v11, v0, :cond_1

    .line 4468
    invoke-interface {v10, v11}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v21, v0

    check-cast v21, Landroid/os/WorkSource$WorkChain;

    .line 4469
    .local v21, "newChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual/range {v21 .. v21}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object/from16 v0, p0

    move/from16 v2, p7

    move-object/from16 v3, v21

    move-object/from16 v4, p8

    move-object/from16 v5, p9

    move/from16 v6, p10

    move/from16 v7, p11

    move-wide v8, v15

    move-object/from16 v22, v10

    move/from16 v23, v11

    .end local v10    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v11    # "i":I
    .local v22, "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v23, "i":I
    move-wide/from16 v10, v17

    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4467
    .end local v21    # "newChain":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v11, v23, 0x1

    move-object/from16 v10, v22

    .end local v23    # "i":I
    .restart local v11    # "i":I
    goto :goto_1

    .end local v22    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v10    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_1
    move-object/from16 v22, v10

    move/from16 v23, v11

    .end local v10    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v11    # "i":I
    .restart local v22    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v23    # "i":I
    goto :goto_2

    .line 4466
    .end local v22    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v23    # "i":I
    .restart local v10    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_2
    move-object/from16 v22, v10

    .line 4477
    .end local v10    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_3
    :goto_2
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v11

    .line 4478
    .local v11, "NO":I
    const/4 v0, 0x0

    move v9, v0

    .local v9, "i":I
    :goto_3
    if-ge v9, v11, :cond_4

    .line 4479
    invoke-virtual {v13, v9}, Landroid/os/WorkSource;->getUid(I)I

    move-result v1

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-wide v7, v15

    move/from16 v21, v9

    .end local v9    # "i":I
    .local v21, "i":I
    move-wide/from16 v9, v17

    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4478
    add-int/lit8 v9, v21, 0x1

    .end local v21    # "i":I
    .restart local v9    # "i":I
    goto :goto_3

    :cond_4
    move/from16 v21, v9

    .line 4482
    .end local v9    # "i":I
    if-eqz v19, :cond_7

    .line 4483
    const/4 v0, 0x1

    aget-object v9, v19, v0

    .line 4484
    .local v9, "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v9, :cond_6

    .line 4485
    const/4 v0, 0x0

    move v10, v0

    .local v10, "i":I
    :goto_4
    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v0

    if-ge v10, v0, :cond_5

    .line 4486
    invoke-interface {v9, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v21, v0

    check-cast v21, Landroid/os/WorkSource$WorkChain;

    .line 4487
    .local v21, "goneChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual/range {v21 .. v21}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v3, v21

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-wide v7, v15

    move-object/from16 v22, v9

    move/from16 v23, v10

    .end local v9    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v10    # "i":I
    .local v22, "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v23    # "i":I
    move-wide/from16 v9, v17

    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4485
    .end local v21    # "goneChain":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v10, v23, 0x1

    move-object/from16 v9, v22

    .end local v23    # "i":I
    .restart local v10    # "i":I
    goto :goto_4

    .end local v22    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v9    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_5
    move-object/from16 v22, v9

    move/from16 v23, v10

    .end local v9    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v10    # "i":I
    .restart local v22    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v23    # "i":I
    goto :goto_5

    .line 4484
    .end local v22    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v23    # "i":I
    .restart local v9    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_6
    move-object/from16 v22, v9

    .line 4492
    .end local v9    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_7
    :goto_5
    return-void
.end method

.method public greylist-max-o noteConnectivityChangedLocked(ILjava/lang/String;)V
    .locals 13
    .param p1, "type"    # I
    .param p2, "extra"    # Ljava/lang/String;

    .line 4980
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4981
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4982
    .local v11, "uptime":J
    const/16 v6, 0x9

    move-object v1, p0

    move-wide v2, v9

    move-wide v4, v11

    move-object v7, p2

    move v8, p1

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4984
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    .line 4987
    move v2, p1

    move-object v3, p2

    move-wide v4, v9

    move-wide v6, v11

    invoke-super/range {v1 .. v7}, Lcom/android/internal/os/OplusBaseBatteryStatsImpl;->noteConnectivityChangedLocked(ILjava/lang/String;JJ)V

    .line 4989
    return-void
.end method

.method public greylist-max-o noteCurrentTimeChangedLocked()V
    .locals 13

    .line 4012
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v7

    .line 4013
    .local v7, "currentTime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4014
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4015
    .local v11, "uptime":J
    move-object v0, p0

    move-wide v1, v7

    move-wide v3, v9

    move-wide v5, v11

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->recordCurrentTimeChangeLocked(JJJ)V

    .line 4016
    return-void
.end method

.method public greylist-max-o noteDeviceIdleModeLocked(ILjava/lang/String;I)V
    .locals 17
    .param p1, "mode"    # I
    .param p2, "activeReason"    # Ljava/lang/String;
    .param p3, "activeUid"    # I

    .line 5083
    move-object/from16 v8, p0

    move/from16 v9, p1

    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v10

    .line 5084
    .local v10, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v12

    .line 5085
    .local v12, "uptime":J
    const/4 v15, 0x2

    const/4 v7, 0x1

    if-ne v9, v15, :cond_0

    move v0, v7

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 5086
    .local v0, "nowIdling":Z
    :goto_0
    iget-boolean v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    if-eqz v1, :cond_1

    if-nez v0, :cond_1

    if-nez p2, :cond_1

    .line 5089
    const/4 v0, 0x1

    move v6, v0

    goto :goto_1

    .line 5091
    :cond_1
    move v6, v0

    .end local v0    # "nowIdling":Z
    .local v6, "nowIdling":Z
    :goto_1
    if-ne v9, v7, :cond_2

    move v0, v7

    goto :goto_2

    :cond_2
    const/4 v0, 0x0

    .line 5092
    .local v0, "nowLightIdling":Z
    :goto_2
    iget-boolean v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eqz v1, :cond_3

    if-nez v0, :cond_3

    if-nez v6, :cond_3

    if-nez p2, :cond_3

    .line 5095
    const/4 v0, 0x1

    move v5, v0

    goto :goto_3

    .line 5097
    :cond_3
    move v5, v0

    .end local v0    # "nowLightIdling":Z
    .local v5, "nowLightIdling":Z
    :goto_3
    if-eqz p2, :cond_6

    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    if-nez v0, :cond_5

    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eqz v0, :cond_4

    goto :goto_4

    :cond_4
    move v14, v5

    move v15, v6

    goto :goto_5

    .line 5098
    :cond_5
    :goto_4
    const/16 v16, 0xa

    move-object/from16 v0, p0

    move-wide v1, v10

    move-wide v3, v12

    move v14, v5

    .end local v5    # "nowLightIdling":Z
    .local v14, "nowLightIdling":Z
    move/from16 v5, v16

    move v15, v6

    .end local v6    # "nowIdling":Z
    .local v15, "nowIdling":Z
    move-object/from16 v6, p2

    move/from16 v7, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_5

    .line 5097
    .end local v14    # "nowLightIdling":Z
    .end local v15    # "nowIdling":Z
    .restart local v5    # "nowLightIdling":Z
    .restart local v6    # "nowIdling":Z
    :cond_6
    move v14, v5

    move v15, v6

    .line 5101
    .end local v5    # "nowLightIdling":Z
    .end local v6    # "nowIdling":Z
    .restart local v14    # "nowLightIdling":Z
    .restart local v15    # "nowIdling":Z
    :goto_5
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    if-ne v0, v15, :cond_7

    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eq v0, v14, :cond_a

    .line 5103
    :cond_7
    if-eqz v15, :cond_8

    const/4 v0, 0x2

    .local v0, "statsmode":I
    goto :goto_6

    .line 5104
    .end local v0    # "statsmode":I
    :cond_8
    if-eqz v14, :cond_9

    const/4 v0, 0x1

    .restart local v0    # "statsmode":I
    goto :goto_6

    .line 5105
    .end local v0    # "statsmode":I
    :cond_9
    const/4 v0, 0x0

    .line 5106
    .restart local v0    # "statsmode":I
    :goto_6
    const/16 v1, 0x16

    invoke-static {v1, v0}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    .line 5108
    .end local v0    # "statsmode":I
    :cond_a
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    if-eq v0, v15, :cond_d

    .line 5109
    iput-boolean v15, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    .line 5110
    if-eqz v15, :cond_b

    const/16 v0, 0x8

    goto :goto_7

    :cond_b
    const/4 v0, 0x0

    .line 5111
    .local v0, "stepState":I
    :goto_7
    iget v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    iget v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v3, v2, 0x8

    xor-int/2addr v3, v0

    or-int/2addr v1, v3

    iput v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 5112
    and-int/lit8 v1, v2, -0x9

    or-int/2addr v1, v0

    iput v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    .line 5113
    if-eqz v15, :cond_c

    .line 5114
    iget-object v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_8

    .line 5116
    :cond_c
    iget-object v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5119
    .end local v0    # "stepState":I
    :cond_d
    :goto_8
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eq v0, v14, :cond_f

    .line 5120
    iput-boolean v14, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    .line 5121
    if-eqz v14, :cond_e

    .line 5122
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_9

    .line 5124
    :cond_e
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5127
    :cond_f
    :goto_9
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    if-eq v0, v9, :cond_16

    .line 5128
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x6000001

    and-int/2addr v1, v2

    shl-int/lit8 v2, v9, 0x19

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5132
    invoke-virtual {v8, v10, v11, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5133
    iget-wide v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLastIdleTimeStart:J

    sub-long v0, v10, v0

    .line 5134
    .local v0, "lastDuration":J
    iput-wide v10, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLastIdleTimeStart:J

    .line 5135
    iget v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    const/4 v3, 0x1

    if-ne v2, v3, :cond_11

    .line 5136
    iget-wide v4, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    cmp-long v2, v0, v4

    if-lez v2, :cond_10

    .line 5137
    iput-wide v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    .line 5139
    :cond_10
    iget-object v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_a

    .line 5140
    :cond_11
    const/4 v4, 0x2

    if-ne v2, v4, :cond_13

    .line 5141
    iget-wide v4, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    cmp-long v2, v0, v4

    if-lez v2, :cond_12

    .line 5142
    iput-wide v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    .line 5144
    :cond_12
    iget-object v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5146
    :cond_13
    :goto_a
    if-ne v9, v3, :cond_14

    .line 5147
    iget-object v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_b

    .line 5148
    :cond_14
    const/4 v2, 0x2

    if-ne v9, v2, :cond_15

    .line 5149
    iget-object v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5151
    :cond_15
    :goto_b
    iput v9, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    .line 5152
    const/16 v2, 0x15

    invoke-static {v2, v9}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    .line 5154
    .end local v0    # "lastDuration":J
    :cond_16
    return-void
.end method

.method public greylist-max-o noteEventLocked(ILjava/lang/String;I)V
    .locals 12
    .param p1, "code"    # I
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 3998
    invoke-virtual {p0, p3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p3

    .line 3999
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, p2, p3, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4000
    return-void

    .line 4002
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4003
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4004
    .local v10, "uptime":J
    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move v5, p1

    move-object v6, p2

    move v7, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4007
    move-object v5, p2

    move v6, p3

    move v7, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalForeProc(JJLjava/lang/String;II)V

    .line 4009
    return-void
.end method

.method public greylist-max-o noteFlashlightOffLocked(I)V
    .locals 13
    .param p1, "uid"    # I

    .line 5689
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez v0, :cond_0

    .line 5690
    return-void

    .line 5692
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5693
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 5694
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 5695
    .local v11, "uptime":J
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez v0, :cond_1

    .line 5696
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x8000001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5699
    invoke-virtual {p0, v9, v10, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5702
    const/4 v2, 0x6

    const/4 v7, 0x0

    move-object v1, p0

    move-wide v3, v9

    move-wide v5, v11

    move v8, p1

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZI)V

    .line 5705
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5707
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFlashlightTurnedOffLocked(J)V

    .line 5708
    return-void
.end method

.method public greylist-max-o noteFlashlightOnLocked(I)V
    .locals 12
    .param p1, "uid"    # I

    .line 5670
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5671
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 5672
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 5673
    .local v10, "uptime":J
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    add-int/lit8 v1, v0, 0x1

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez v0, :cond_0

    .line 5674
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v2, 0x8000000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5677
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5680
    const/4 v1, 0x6

    const/4 v6, 0x1

    move-object v0, p0

    move-wide v2, v8

    move-wide v4, v10

    move v7, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZI)V

    .line 5683
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5685
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFlashlightTurnedOnLocked(J)V

    .line 5686
    return-void
.end method

.method public greylist-max-o noteFullWifiLockAcquiredFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6227
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6228
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6229
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 6230
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteFullWifiLockAcquiredLocked(I)V

    .line 6228
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6233
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6234
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6235
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6236
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 6237
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 6238
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteFullWifiLockAcquiredLocked(I)V

    .line 6235
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6241
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist noteFullWifiLockAcquiredLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6116
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6117
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6118
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    if-nez v4, :cond_0

    .line 6119
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x10000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6122
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6124
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6125
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFullWifiLockAcquiredLocked(J)V

    .line 6126
    return-void
.end method

.method public greylist-max-o noteFullWifiLockReleasedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6244
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6245
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6246
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 6247
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteFullWifiLockReleasedLocked(I)V

    .line 6245
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6250
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6251
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6252
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6253
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 6254
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 6255
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteFullWifiLockReleasedLocked(I)V

    .line 6252
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6258
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist noteFullWifiLockReleasedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6130
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6131
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6132
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6133
    if-nez v4, :cond_0

    .line 6134
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x10000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6137
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6139
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFullWifiLockReleasedLocked(J)V

    .line 6140
    return-void
.end method

.method public greylist-max-o noteGpsChangedLocked(Landroid/os/WorkSource;Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "oldWs"    # Landroid/os/WorkSource;
    .param p2, "newWs"    # Landroid/os/WorkSource;

    .line 4696
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    invoke-virtual {p2}, Landroid/os/WorkSource;->size()I

    move-result v1

    const/4 v2, 0x0

    if-ge v0, v1, :cond_0

    .line 4697
    invoke-virtual {p2, v0}, Landroid/os/WorkSource;->getUid(I)I

    move-result v1

    invoke-direct {p0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4696
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 4700
    .end local v0    # "i":I
    :cond_0
    const/4 v0, 0x0

    .restart local v0    # "i":I
    :goto_1
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v1

    if-ge v0, v1, :cond_1

    .line 4701
    invoke-virtual {p1, v0}, Landroid/os/WorkSource;->getUid(I)I

    move-result v1

    invoke-direct {p0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4700
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 4704
    .end local v0    # "i":I
    :cond_1
    invoke-static {p1, p2}, Landroid/os/WorkSource;->diffChains(Landroid/os/WorkSource;Landroid/os/WorkSource;)[Ljava/util/ArrayList;

    move-result-object v0

    .line 4705
    .local v0, "wcs":[Ljava/util/List;, "[Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v0, :cond_3

    .line 4706
    const/4 v1, 0x0

    aget-object v2, v0, v1

    const/4 v3, -0x1

    if-eqz v2, :cond_2

    .line 4707
    aget-object v1, v0, v1

    .line 4708
    .local v1, "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_2
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v4

    if-ge v2, v4, :cond_2

    .line 4709
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/os/WorkSource$WorkChain;

    invoke-direct {p0, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4708
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 4713
    .end local v1    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v2    # "i":I
    :cond_2
    const/4 v1, 0x1

    aget-object v2, v0, v1

    if-eqz v2, :cond_3

    .line 4714
    aget-object v1, v0, v1

    .line 4715
    .local v1, "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_3
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v4

    if-ge v2, v4, :cond_3

    .line 4716
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/os/WorkSource$WorkChain;

    invoke-direct {p0, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4715
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 4720
    .end local v1    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v2    # "i":I
    :cond_3
    return-void
.end method

.method public greylist-max-o noteGpsSignalQualityLocked(I)V
    .locals 7
    .param p1, "signalLevel"    # I

    .line 4777
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    if-nez v0, :cond_0

    .line 4778
    return-void

    .line 4780
    :cond_0
    if-ltz p1, :cond_5

    const/4 v0, 0x2

    if-lt p1, v0, :cond_1

    goto :goto_0

    .line 4784
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4785
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4786
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    if-eq v4, p1, :cond_4

    .line 4787
    if-ltz v4, :cond_2

    .line 4788
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v4, v5, v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4790
    :cond_2
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, p1

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v4

    if-nez v4, :cond_3

    .line 4791
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, p1

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4793
    :cond_3
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    and-int/lit16 v5, v5, -0x81

    shl-int/lit8 v6, p1, 0x7

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 4795
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4796
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 4798
    :cond_4
    return-void

    .line 4781
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_5
    :goto_0
    const/4 v0, -0x1

    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->stopAllGpsSignalQualityTimersLocked(I)V

    .line 4782
    return-void
.end method

.method public greylist-max-o noteInteractiveLocked(Z)V
    .locals 3
    .param p1, "interactive"    # Z

    .line 4967
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    if-eq v0, p1, :cond_1

    .line 4968
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4969
    .local v0, "elapsedRealtime":J
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    .line 4971
    if-eqz p1, :cond_0

    .line 4972
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_0

    .line 4974
    :cond_0
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4977
    .end local v0    # "elapsedRealtime":J
    :cond_1
    :goto_0
    return-void
.end method

.method public greylist-max-o noteJobFinishLocked(Ljava/lang/String;II)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "stopReason"    # I

    .line 4129
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4130
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4131
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4132
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopJobLocked(Ljava/lang/String;JI)V

    .line 4133
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4006

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4134
    return-void

    .line 4136
    :cond_0
    const/16 v5, 0x4006

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4139
    const-string/jumbo v6, "null"

    move-object v1, p0

    move-wide v2, v8

    move-wide v4, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalJobProc(JJLjava/lang/String;)V

    .line 4141
    return-void
.end method

.method public greylist-max-o noteJobStartLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4114
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4115
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4116
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4117
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartJobLocked(Ljava/lang/String;J)V

    .line 4118
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8006

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4119
    return-void

    .line 4121
    :cond_0
    const v5, 0x8006

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4124
    move-object v1, p0

    move-wide v2, v8

    move-wide v4, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalJobProc(JJLjava/lang/String;)V

    .line 4126
    return-void
.end method

.method public greylist-max-o noteJobsDeferredLocked(IIJ)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "numDeferred"    # I
    .param p3, "sinceLast"    # J

    .line 4144
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4145
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteJobsDeferredLocked(IJ)V

    .line 4146
    return-void
.end method

.method public greylist-max-o noteLongPartialWakelockFinish(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 0
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4552
    invoke-virtual {p0, p3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p3

    .line 4553
    invoke-direct {p0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4554
    return-void
.end method

.method public greylist-max-o noteLongPartialWakelockFinishFromSource(Ljava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "workSource"    # Landroid/os/WorkSource;

    .line 4558
    invoke-virtual {p3}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 4559
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 4560
    invoke-virtual {p3, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 4561
    .local v2, "uid":I
    invoke-direct {p0, p1, p2, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4559
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 4564
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 4565
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 4566
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 4567
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 4568
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    .line 4569
    .local v4, "uid":I
    invoke-direct {p0, p1, p2, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4566
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 4572
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist-max-o noteLongPartialWakelockStart(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 0
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4515
    invoke-virtual {p0, p3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p3

    .line 4516
    invoke-direct {p0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4517
    return-void
.end method

.method public greylist-max-o noteLongPartialWakelockStartFromSource(Ljava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "workSource"    # Landroid/os/WorkSource;

    .line 4521
    invoke-virtual {p3}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 4522
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 4523
    invoke-virtual {p3, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 4524
    .local v2, "uid":I
    invoke-direct {p0, p1, p2, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4522
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 4527
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 4528
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 4529
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 4530
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 4531
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    .line 4532
    .local v4, "uid":I
    invoke-direct {p0, p1, p2, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4529
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 4535
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist-max-o noteMobileRadioPowerStateLocked(IJI)Z
    .locals 19
    .param p1, "powerState"    # I
    .param p2, "timestampNs"    # J
    .param p4, "uid"    # I

    .line 5003
    move-object/from16 v6, p0

    move/from16 v7, p1

    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 5004
    .local v8, "elapsedRealtime":J
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 5005
    .local v10, "uptime":J
    iget v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    if-eq v0, v7, :cond_7

    .line 5007
    const/4 v0, 0x2

    if-eq v7, v0, :cond_1

    const/4 v0, 0x3

    if-ne v7, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    move v14, v0

    .line 5010
    .local v14, "active":Z
    const-wide/32 v15, 0xf4240

    if-eqz v14, :cond_3

    .line 5011
    if-lez p4, :cond_2

    .line 5012
    move-object/from16 v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move/from16 v5, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->noteMobileRadioApWakeupLocked(JJI)V

    .line 5015
    :cond_2
    div-long v0, p2, v15

    move-wide v15, v0

    .local v15, "realElapsedRealtimeMs":J
    iput-wide v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveStartTime:J

    .line 5016
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v2, 0x2000000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5019
    const/4 v5, 0x1

    move-object/from16 v0, p0

    move-wide v1, v8

    move-wide v3, v10

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalNetState(JJZ)V

    move-wide v12, v15

    goto :goto_3

    .line 5022
    .end local v15    # "realElapsedRealtimeMs":J
    :cond_3
    div-long v0, p2, v15

    .line 5023
    .local v0, "realElapsedRealtimeMs":J
    iget-wide v3, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveStartTime:J

    .line 5024
    .local v3, "lastUpdateTimeMs":J
    cmp-long v2, v0, v3

    if-gez v2, :cond_4

    .line 5025
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Data connection inactive timestamp "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " is before start time "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v5, "BatteryStatsImpl"

    invoke-static {v5, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 5027
    move-wide v0, v8

    move-wide v12, v0

    goto :goto_2

    .line 5028
    :cond_4
    cmp-long v2, v0, v8

    if-gez v2, :cond_5

    .line 5029
    iget-object v2, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    sub-long v12, v8, v0

    invoke-virtual {v2, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 5032
    :cond_5
    move-wide v12, v0

    .end local v0    # "realElapsedRealtimeMs":J
    .local v12, "realElapsedRealtimeMs":J
    :goto_2
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v2, -0x2000001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5035
    const/4 v5, 0x0

    move-object/from16 v0, p0

    move-wide v1, v8

    move-wide/from16 v17, v3

    .end local v3    # "lastUpdateTimeMs":J
    .local v17, "lastUpdateTimeMs":J
    move-wide v3, v10

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalNetState(JJZ)V

    .line 5040
    .end local v17    # "lastUpdateTimeMs":J
    :goto_3
    invoke-virtual {v6, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5041
    iput v7, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 5042
    if-eqz v14, :cond_6

    .line 5043
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5044
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_4

    .line 5046
    :cond_6
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5047
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5049
    const/4 v0, 0x1

    return v0

    .line 5052
    .end local v12    # "realElapsedRealtimeMs":J
    .end local v14    # "active":Z
    :cond_7
    :goto_4
    const/4 v0, 0x0

    return v0
.end method

.method public blacklist noteNetworkInterfaceType(Ljava/lang/String;I)V
    .locals 2
    .param p1, "iface"    # Ljava/lang/String;
    .param p2, "networkType"    # I

    .line 6349
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_0

    return-void

    .line 6351
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    .line 6352
    :try_start_0
    invoke-static {p2}, Landroid/net/ConnectivityManager;->isNetworkTypeMobile(I)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 6353
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    invoke-static {v1, p1}, Lcom/android/internal/os/BatteryStatsImpl;->includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    goto :goto_0

    .line 6356
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    invoke-static {v1, p1}, Lcom/android/internal/os/BatteryStatsImpl;->excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 6359
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6361
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v1

    .line 6362
    :try_start_1
    invoke-static {p2}, Landroid/net/ConnectivityManager;->isNetworkTypeWifi(I)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 6363
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    invoke-static {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    goto :goto_1

    .line 6366
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    invoke-static {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 6369
    :goto_1
    monitor-exit v1

    .line 6370
    return-void

    .line 6369
    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 6359
    :catchall_1
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v1
.end method

.method public greylist-max-o notePackageInstalledLocked(Ljava/lang/String;J)V
    .locals 15
    .param p1, "pkgName"    # Ljava/lang/String;
    .param p2, "versionCode"    # J

    .line 5157
    move-object v8, p0

    move-wide/from16 v9, p2

    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v11

    .line 5158
    .local v11, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v13

    .line 5160
    .local v13, "uptime":J
    long-to-int v7, v9

    const/16 v5, 0xb

    move-object v0, p0

    move-wide v1, v11

    move-wide v3, v13

    move-object/from16 v6, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5162
    new-instance v0, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v0}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 5163
    .local v0, "pc":Landroid/os/BatteryStats$PackageChange;
    move-object/from16 v1, p1

    iput-object v1, v0, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 5164
    const/4 v2, 0x1

    iput-boolean v2, v0, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 5165
    iput-wide v9, v0, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    .line 5166
    invoke-direct {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->addPackageChange(Landroid/os/BatteryStats$PackageChange;)V

    .line 5167
    return-void
.end method

.method public greylist-max-o notePackageUninstalledLocked(Ljava/lang/String;)V
    .locals 13
    .param p1, "pkgName"    # Ljava/lang/String;

    .line 5170
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 5171
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 5172
    .local v11, "uptime":J
    const/16 v6, 0xc

    const/4 v8, 0x0

    move-object v1, p0

    move-wide v2, v9

    move-wide v4, v11

    move-object v7, p1

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5174
    new-instance v0, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v0}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 5175
    .local v0, "pc":Landroid/os/BatteryStats$PackageChange;
    iput-object p1, v0, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 5176
    const/4 v1, 0x1

    iput-boolean v1, v0, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 5177
    invoke-direct {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->addPackageChange(Landroid/os/BatteryStats$PackageChange;)V

    .line 5178
    return-void
.end method

.method public greylist notePhoneDataConnectionStateLocked(IZI)V
    .locals 8
    .param p1, "dataType"    # I
    .param p2, "hasData"    # Z
    .param p3, "serviceType"    # I

    .line 5416
    const/4 v0, 0x0

    .line 5417
    .local v0, "bin":I
    if-eqz p2, :cond_3

    .line 5418
    if-lez p1, :cond_0

    invoke-static {}, Landroid/telephony/TelephonyManager;->getAllNetworkTypes()[I

    move-result-object v1

    array-length v1, v1

    if-gt p1, v1, :cond_0

    .line 5419
    move v0, p1

    goto :goto_0

    .line 5421
    :cond_0
    const/4 v1, 0x1

    if-eq p3, v1, :cond_2

    const/4 v1, 0x2

    if-eq p3, v1, :cond_1

    .line 5429
    sget v0, Lcom/android/internal/os/BatteryStatsImpl;->DATA_CONNECTION_OTHER:I

    goto :goto_0

    .line 5426
    :cond_1
    sget v0, Lcom/android/internal/os/BatteryStatsImpl;->DATA_CONNECTION_EMERGENCY_SERVICE:I

    .line 5427
    goto :goto_0

    .line 5423
    :cond_2
    const/4 v0, 0x0

    .line 5435
    :cond_3
    :goto_0
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    if-eq v1, v0, :cond_5

    .line 5436
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 5437
    .local v1, "elapsedRealtime":J
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 5438
    .local v3, "uptime":J
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit16 v6, v6, -0x3e01

    shl-int/lit8 v7, v0, 0x9

    or-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5442
    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5443
    iget v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    if-ltz v5, :cond_4

    .line 5444
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v6, v5

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5447
    :cond_4
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 5448
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v0

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5452
    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    :cond_5
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v5

    move-object v2, p0

    move v7, p1

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->notePhoneDataConnectionStateLocked(JJI)V

    .line 5454
    return-void
.end method

.method public greylist notePhoneOffLocked()V
    .locals 11

    .line 5219
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    if-eqz v0, :cond_0

    .line 5220
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v7

    .line 5221
    .local v7, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v9

    .line 5222
    .local v9, "uptime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x800001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5225
    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5226
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    .line 5227
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5230
    const/4 v6, 0x0

    move-object v1, p0

    move-wide v2, v7

    move-wide v4, v9

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalPhoneOnOff(JJZ)V

    .line 5233
    .end local v7    # "elapsedRealtime":J
    .end local v9    # "uptime":J
    :cond_0
    return-void
.end method

.method public greylist notePhoneOnLocked()V
    .locals 11

    .line 5201
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    if-nez v0, :cond_0

    .line 5202
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v7

    .line 5203
    .local v7, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v9

    .line 5204
    .local v9, "uptime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v2, 0x800000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5207
    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5208
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    .line 5209
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5212
    const/4 v6, 0x1

    move-object v1, p0

    move-wide v2, v7

    move-wide v4, v9

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalPhoneOnOff(JJZ)V

    .line 5215
    .end local v7    # "elapsedRealtime":J
    .end local v9    # "uptime":J
    :cond_0
    return-void
.end method

.method public greylist notePhoneSignalStrengthLocked(Landroid/telephony/SignalStrength;)V
    .locals 3
    .param p1, "signalStrength"    # Landroid/telephony/SignalStrength;

    .line 5407
    invoke-virtual {p1}, Landroid/telephony/SignalStrength;->getLevel()I

    move-result v0

    .line 5408
    .local v0, "bin":I
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    invoke-direct {p0, v1, v2, v0}, Lcom/android/internal/os/BatteryStatsImpl;->updateAllPhoneStateLocked(III)V

    .line 5409
    return-void
.end method

.method public greylist-max-o notePhoneStateLocked(II)V
    .locals 1
    .param p1, "state"    # I
    .param p2, "simState"    # I

    .line 5401
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    invoke-direct {p0, p1, p2, v0}, Lcom/android/internal/os/BatteryStatsImpl;->updateAllPhoneStateLocked(III)V

    .line 5402
    return-void
.end method

.method public greylist-max-o notePowerSaveModeLocked(Z)V
    .locals 9
    .param p1, "enabled"    # Z

    .line 5056
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabled:Z

    if-eq v0, p1, :cond_3

    .line 5057
    const/4 v0, 0x0

    if-eqz p1, :cond_0

    const/4 v1, 0x4

    goto :goto_0

    :cond_0
    move v1, v0

    .line 5058
    .local v1, "stepState":I
    :goto_0
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v4, v3, 0x4

    xor-int/2addr v4, v1

    or-int/2addr v2, v4

    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 5059
    and-int/lit8 v2, v3, -0x5

    or-int/2addr v2, v1

    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    .line 5060
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v2

    .line 5061
    .local v2, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v4

    .line 5062
    .local v4, "uptime":J
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabled:Z

    .line 5063
    if-eqz p1, :cond_1

    .line 5064
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v8, -0x80000000

    or-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5067
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_1

    .line 5069
    :cond_1
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v8, 0x7fffffff

    and-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5072
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5074
    :goto_1
    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5075
    const/16 v6, 0x14

    .line 5076
    if-eqz p1, :cond_2

    .line 5077
    const/4 v0, 0x1

    goto :goto_2

    .line 5078
    :cond_2
    nop

    .line 5075
    :goto_2
    invoke-static {v6, v0}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    .line 5080
    .end local v1    # "stepState":I
    .end local v2    # "elapsedRealtime":J
    .end local v4    # "uptime":J
    :cond_3
    return-void
.end method

.method public greylist-max-o noteProcessAnrLocked(Ljava/lang/String;I)V
    .locals 2
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4048
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4049
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4050
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 4051
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->incNumAnrsLocked()V

    .line 4053
    .end local v0    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    return-void
.end method

.method public greylist-max-o noteProcessCrashLocked(Ljava/lang/String;I)V
    .locals 2
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4040
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4041
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4042
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 4043
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->incNumCrashesLocked()V

    .line 4045
    .end local v0    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    return-void
.end method

.method public greylist-max-o noteProcessDiedLocked(II)V
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pid"    # I

    .line 4636
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4637
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 4638
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-eqz v0, :cond_0

    .line 4639
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPids:Landroid/util/SparseArray;

    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 4641
    :cond_0
    return-void
.end method

.method public greylist-max-o noteProcessFinishLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4071
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4072
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4001

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4073
    return-void

    .line 4075
    :cond_0
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_1

    .line 4076
    return-void

    .line 4078
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4079
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4080
    .local v10, "uptime":J
    const/16 v5, 0x4001

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4081
    return-void
.end method

.method public greylist-max-o noteProcessStartLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4019
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4020
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4021
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 4022
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->incStartsLocked()V

    .line 4024
    .end local v0    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8001

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4025
    return-void

    .line 4027
    :cond_1
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_2

    .line 4028
    return-void

    .line 4030
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4031
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4032
    .local v10, "uptime":J
    const v5, 0x8001

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4035
    const/4 v7, -0x1

    move-object v5, p1

    move v6, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalForeProc(JJLjava/lang/String;II)V

    .line 4037
    return-void
.end method

.method public greylist-max-o noteResetAudioLocked()V
    .locals 12

    .line 5581
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    if-lez v0, :cond_0

    .line 5582
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 5583
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 5584
    .local v10, "uptime":J
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    .line 5585
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v2, -0x400001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5588
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5591
    const/4 v2, 0x3

    const/4 v7, 0x0

    move-object v1, p0

    move-wide v3, v8

    move-wide v5, v10

    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZ)V

    .line 5594
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5595
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_0

    .line 5596
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 5597
    .local v1, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetAudioLocked(J)V

    .line 5595
    .end local v1    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 5600
    .end local v0    # "i":I
    .end local v8    # "elapsedRealtime":J
    .end local v10    # "uptime":J
    :cond_0
    return-void
.end method

.method public greylist-max-o noteResetBluetoothScanLocked()V
    .locals 7

    .line 5864
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    if-lez v0, :cond_0

    .line 5865
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5866
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5867
    .local v2, "uptime":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    .line 5868
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x100001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5871
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5872
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5873
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_0

    .line 5874
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 5875
    .local v5, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetBluetoothScanLocked(J)V

    .line 5873
    .end local v5    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5878
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "i":I
    :cond_0
    return-void
.end method

.method public greylist-max-o noteResetCameraLocked()V
    .locals 12

    .line 5752
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    if-lez v0, :cond_0

    .line 5753
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 5754
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 5755
    .local v10, "uptime":J
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    .line 5756
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x200001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5759
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5762
    const/4 v2, 0x2

    const/4 v7, 0x0

    move-object v1, p0

    move-wide v3, v8

    move-wide v5, v10

    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZ)V

    .line 5765
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5766
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_0

    .line 5767
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 5768
    .local v1, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetCameraLocked(J)V

    .line 5766
    .end local v1    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 5771
    .end local v0    # "i":I
    .end local v8    # "elapsedRealtime":J
    .end local v10    # "uptime":J
    :cond_0
    return-void
.end method

.method public greylist-max-o noteResetFlashlightLocked()V
    .locals 12

    .line 5774
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-lez v0, :cond_0

    .line 5775
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 5776
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 5777
    .local v10, "uptime":J
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    .line 5778
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x8000001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5781
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5784
    const/4 v2, 0x6

    const/4 v7, 0x0

    move-object v1, p0

    move-wide v3, v8

    move-wide v5, v10

    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZ)V

    .line 5787
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5788
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_0

    .line 5789
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 5790
    .local v1, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetFlashlightLocked(J)V

    .line 5788
    .end local v1    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 5793
    .end local v0    # "i":I
    .end local v8    # "elapsedRealtime":J
    .end local v10    # "uptime":J
    :cond_0
    return-void
.end method

.method public greylist-max-o noteResetVideoLocked()V
    .locals 12

    .line 5603
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    if-lez v0, :cond_0

    .line 5604
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 5605
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 5606
    .local v10, "uptime":J
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    .line 5607
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x40000001    # -1.9999999f

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5610
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5613
    const/4 v2, 0x4

    const/4 v7, 0x0

    move-object v1, p0

    move-wide v3, v8

    move-wide v5, v10

    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZ)V

    .line 5616
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5617
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_0

    .line 5618
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 5619
    .local v1, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetVideoLocked(J)V

    .line 5617
    .end local v1    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 5622
    .end local v0    # "i":I
    .end local v8    # "elapsedRealtime":J
    .end local v10    # "uptime":J
    :cond_0
    return-void
.end method

.method public greylist noteScreenBrightnessLocked(I)V
    .locals 14
    .param p1, "brightness"    # I

    .line 4912
    const-string/jumbo v0, "sys.oplus.multibrightness"

    const/16 v1, 0xff

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    .line 4913
    .local v0, "MAX_BRIGHTNESS":I
    add-int/lit8 v1, v0, 0x1

    const/4 v2, 0x5

    div-int/2addr v1, v2

    div-int v1, p1, v1

    .line 4918
    .local v1, "bin":I
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->setScreenBrightness(I)V

    .line 4919
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    invoke-virtual {v3, p1}, Lcom/android/internal/os/OppoDevicePowerStats;->recordBrightness(I)V

    .line 4921
    sget-boolean v3, Lcom/android/internal/os/BatteryStatsImpl;->DEBUG_UID_SCREEN_BASIC:Z

    if-eqz v3, :cond_0

    .line 4922
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "noteScreenBrightnessLocked: brightness="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ", bin="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ", MAX_BRIGHTNESS="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "BatteryStatsImpl"

    invoke-static {v4, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4926
    :cond_0
    if-gez v1, :cond_1

    const/4 v1, 0x0

    goto :goto_0

    .line 4927
    :cond_1
    if-lt v1, v2, :cond_2

    const/4 v1, 0x4

    .line 4928
    :cond_2
    :goto_0
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-eq v2, v1, :cond_5

    .line 4929
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v10

    .line 4930
    .local v10, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v12

    .line 4931
    .local v12, "uptime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v3, v2, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit8 v3, v3, -0x8

    shl-int/lit8 v4, v1, 0x0

    or-int/2addr v3, v4

    iput v3, v2, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4935
    invoke-virtual {p0, v10, v11, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4938
    const/16 v9, 0x1b58

    move-object v3, p0

    move-wide v4, v10

    move-wide v6, v12

    move v8, p1

    invoke-virtual/range {v3 .. v9}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalScreenBrightnessEvent(JJII)V

    .line 4940
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    const/4 v3, 0x2

    if-ne v2, v3, :cond_4

    .line 4941
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v2, :cond_3

    .line 4942
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v3, v2

    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4944
    :cond_3
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4947
    :cond_4
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    .line 4949
    .end local v10    # "elapsedRealtime":J
    .end local v12    # "uptime":J
    :cond_5
    return-void
.end method

.method public greylist-max-o noteScreenStateLocked(I)V
    .locals 22
    .param p1, "state"    # I

    .line 4803
    move-object/from16 v12, p0

    iget-boolean v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mPretendScreenOff:Z

    const/4 v1, 0x1

    if-eqz v0, :cond_0

    move v0, v1

    goto :goto_0

    :cond_0
    move/from16 v0, p1

    .line 4807
    .end local p1    # "state":I
    .local v0, "state":I
    :goto_0
    const/4 v2, 0x4

    const-string v3, "BatteryStatsImpl"

    if-le v0, v2, :cond_2

    .line 4808
    const/4 v2, 0x5

    if-eq v0, v2, :cond_1

    .line 4813
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown screen state (not mapped): "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v3, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 4810
    :cond_1
    const/4 v0, 0x2

    .line 4811
    move v13, v0

    goto :goto_2

    .line 4818
    :cond_2
    :goto_1
    move v13, v0

    .end local v0    # "state":I
    .local v13, "state":I
    :goto_2
    iget v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    if-eq v0, v13, :cond_e

    .line 4819
    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(Z)V

    .line 4820
    iget v14, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 4821
    .local v14, "oldState":I
    iput v13, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 4825
    if-eqz v13, :cond_4

    .line 4826
    add-int/lit8 v0, v13, -0x1

    .line 4827
    .local v0, "stepState":I
    and-int/lit8 v1, v0, 0x3

    if-ne v1, v0, :cond_3

    .line 4828
    iget v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    iget v2, v12, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v3, v2, 0x3

    xor-int/2addr v3, v0

    or-int/2addr v1, v3

    iput v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 4829
    and-int/lit8 v1, v2, -0x4

    or-int/2addr v1, v0

    iput v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    goto :goto_3

    .line 4831
    :cond_3
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unexpected screen state: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v3, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4835
    .end local v0    # "stepState":I
    :cond_4
    :goto_3
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v10

    .line 4836
    .local v10, "elapsedRealtime":J
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v8

    .line 4837
    .local v8, "uptime":J
    const/4 v0, 0x0

    .line 4838
    .local v0, "updateHistory":Z
    invoke-virtual {v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_5

    invoke-virtual {v12, v14}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-nez v1, :cond_5

    .line 4839
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x40000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4840
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4841
    const/4 v0, 0x1

    goto :goto_4

    .line 4842
    :cond_5
    invoke-virtual {v12, v14}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_6

    invoke-virtual {v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-nez v1, :cond_6

    .line 4843
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, -0x40001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4844
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4845
    const/4 v0, 0x1

    .line 4847
    :cond_6
    :goto_4
    invoke-virtual {v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_8

    .line 4848
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x100000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4851
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4852
    iget v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v1, :cond_7

    .line 4853
    iget-object v2, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v2, v1

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4855
    :cond_7
    const/4 v7, 0x1

    .line 4859
    .end local v0    # "updateHistory":Z
    .local v7, "updateHistory":Z
    nop

    .line 4860
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getScreenBrightness()I

    move-result v5

    const/16 v6, 0xbb8

    .line 4859
    move-object/from16 v0, p0

    move-wide v1, v10

    move-wide v3, v8

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalScreenBrightnessEvent(JJII)V

    move v15, v7

    goto :goto_5

    .line 4862
    .end local v7    # "updateHistory":Z
    .restart local v0    # "updateHistory":Z
    :cond_8
    invoke-virtual {v12, v14}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_a

    .line 4863
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, -0x100001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4866
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4867
    iget v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v1, :cond_9

    .line 4868
    iget-object v2, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v2, v1

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4870
    :cond_9
    const/4 v7, 0x1

    .line 4874
    .end local v0    # "updateHistory":Z
    .restart local v7    # "updateHistory":Z
    const/4 v5, 0x0

    const/4 v6, 0x0

    move-object/from16 v0, p0

    move-wide v1, v10

    move-wide v3, v8

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalScreenBrightnessEvent(JJII)V

    move v15, v7

    goto :goto_5

    .line 4862
    .end local v7    # "updateHistory":Z
    .restart local v0    # "updateHistory":Z
    :cond_a
    move v15, v0

    .line 4877
    .end local v0    # "updateHistory":Z
    .local v15, "updateHistory":Z
    :goto_5
    if-eqz v15, :cond_b

    .line 4880
    invoke-virtual {v12, v10, v11, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4882
    :cond_b
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 4883
    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    iget-object v2, v12, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v2

    .line 4882
    invoke-interface {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToScreenStateChange(ZZ)Ljava/util/concurrent/Future;

    .line 4884
    invoke-virtual {v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    const-wide/16 v16, 0x3e8

    if-eqz v0, :cond_c

    .line 4885
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 4886
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    mul-long v3, v2, v16

    mul-long v5, v10, v16

    .line 4885
    move-object/from16 v0, p0

    move v2, v13

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 4888
    const/4 v1, -0x1

    const/4 v2, -0x1

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const-string/jumbo v4, "screen"

    move-wide/from16 v18, v8

    .end local v8    # "uptime":J
    .local v18, "uptime":J
    move-wide v8, v10

    move-wide/from16 v20, v10

    .end local v10    # "elapsedRealtime":J
    .local v20, "elapsedRealtime":J
    move-wide/from16 v10, v18

    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    goto :goto_6

    .line 4890
    .end local v18    # "uptime":J
    .end local v20    # "elapsedRealtime":J
    .restart local v8    # "uptime":J
    .restart local v10    # "elapsedRealtime":J
    :cond_c
    move-wide/from16 v18, v8

    move-wide/from16 v20, v10

    .end local v8    # "uptime":J
    .end local v10    # "elapsedRealtime":J
    .restart local v18    # "uptime":J
    .restart local v20    # "elapsedRealtime":J
    invoke-virtual {v12, v14}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 4891
    const/4 v1, -0x1

    const/4 v2, -0x1

    const/4 v3, 0x0

    const/4 v6, 0x0

    const-string/jumbo v4, "screen"

    const-string/jumbo v5, "screen"

    move-object/from16 v0, p0

    move-wide/from16 v7, v20

    move-wide/from16 v9, v18

    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4893
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 4894
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    mul-long v3, v2, v16

    mul-long v5, v20, v16

    .line 4893
    move-object/from16 v0, p0

    move v2, v13

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 4897
    :cond_d
    :goto_6
    iget-boolean v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_e

    .line 4898
    invoke-virtual {v12, v14, v13}, Lcom/android/internal/os/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    .line 4901
    .end local v14    # "oldState":I
    .end local v15    # "updateHistory":Z
    .end local v18    # "uptime":J
    .end local v20    # "elapsedRealtime":J
    :cond_e
    return-void
.end method

.method public greylist-max-o noteStartSensorLocked(II)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "sensor"    # I

    .line 4666
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4667
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4668
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4669
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    if-nez v4, :cond_0

    .line 4670
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x800000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4673
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4675
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    .line 4676
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartSensor(IJ)V

    .line 4677
    return-void
.end method

.method public greylist-max-o noteStartWakeFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IZ)V
    .locals 21
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I
    .param p6, "unimportantForLogging"    # Z

    .line 4428
    move-object/from16 v12, p0

    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v13

    .line 4429
    .local v13, "elapsedRealtime":J
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v15

    .line 4430
    .local v15, "uptime":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v10

    .line 4431
    .local v10, "N":I
    const/4 v0, 0x0

    move v11, v0

    .local v11, "i":I
    :goto_0
    if-ge v11, v10, :cond_0

    .line 4432
    move-object/from16 v8, p1

    invoke-virtual {v8, v11}, Landroid/os/WorkSource;->getUid(I)I

    move-result v1

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move/from16 v7, p6

    move-wide v8, v13

    move/from16 v17, v10

    move/from16 v18, v11

    .end local v10    # "N":I
    .end local v11    # "i":I
    .local v17, "N":I
    .local v18, "i":I
    move-wide v10, v15

    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4431
    add-int/lit8 v11, v18, 0x1

    move/from16 v10, v17

    .end local v18    # "i":I
    .restart local v11    # "i":I
    goto :goto_0

    .end local v17    # "N":I
    .restart local v10    # "N":I
    :cond_0
    move/from16 v17, v10

    move/from16 v18, v11

    .line 4436
    .end local v10    # "N":I
    .end local v11    # "i":I
    .restart local v17    # "N":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v10

    .line 4437
    .local v10, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v10, :cond_2

    .line 4438
    const/4 v0, 0x0

    move v11, v0

    .restart local v11    # "i":I
    :goto_1
    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v0

    if-ge v11, v0, :cond_1

    .line 4439
    invoke-interface {v10, v11}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v18, v0

    check-cast v18, Landroid/os/WorkSource$WorkChain;

    .line 4440
    .local v18, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual/range {v18 .. v18}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v3, v18

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move/from16 v7, p6

    move-wide v8, v13

    move-object/from16 v19, v10

    move/from16 v20, v11

    .end local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v11    # "i":I
    .local v19, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v20, "i":I
    move-wide v10, v15

    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4438
    .end local v18    # "wc":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v11, v20, 0x1

    move-object/from16 v10, v19

    .end local v20    # "i":I
    .restart local v11    # "i":I
    goto :goto_1

    .end local v19    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_1
    move-object/from16 v19, v10

    move/from16 v20, v11

    .end local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v11    # "i":I
    .restart local v19    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v20    # "i":I
    goto :goto_2

    .line 4437
    .end local v19    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v20    # "i":I
    .restart local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_2
    move-object/from16 v19, v10

    .line 4444
    .end local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v19    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :goto_2
    return-void
.end method

.method public greylist-max-o noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V
    .locals 16
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "wc"    # Landroid/os/WorkSource$WorkChain;
    .param p4, "name"    # Ljava/lang/String;
    .param p5, "historyName"    # Ljava/lang/String;
    .param p6, "type"    # I
    .param p7, "unimportantForLogging"    # Z
    .param p8, "elapsedRealtime"    # J
    .param p10, "uptime"    # J

    .line 4288
    move-object/from16 v8, p0

    move/from16 v9, p6

    move-wide/from16 v10, p8

    move-wide/from16 v12, p10

    invoke-virtual/range {p0 .. p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v14

    .line 4289
    .end local p1    # "uid":I
    .local v14, "uid":I
    if-nez v9, :cond_5

    .line 4292
    invoke-virtual {v8, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->aggregateLastWakeupUptimeLocked(J)V

    .line 4293
    if-nez p5, :cond_0

    .line 4294
    move-object/from16 v0, p4

    move-object v15, v0

    .end local p5    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    goto :goto_0

    .line 4293
    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v15, p5

    .line 4296
    .end local p5    # "historyName":Ljava/lang/String;
    .local v15, "historyName":Ljava/lang/String;
    :goto_0
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-eqz v0, :cond_1

    .line 4297
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8005

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v15, v14, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 4299
    const v5, 0x8005

    move-object/from16 v0, p0

    move-wide/from16 v1, p8

    move-wide/from16 v3, p10

    move-object v6, v15

    move v7, v14

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4303
    :cond_1
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    const/4 v1, 0x1

    if-nez v0, :cond_2

    .line 4304
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x40000000    # 2.0f

    or-int/2addr v2, v3

    iput v2, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4307
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4308
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v15, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    iput-object v15, v0, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 4309
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput v14, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    iput v14, v0, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 4310
    xor-int/lit8 v0, p7, 0x1

    iput-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockImportant:Z

    .line 4311
    invoke-virtual {v8, v10, v11, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    goto :goto_1

    .line 4312
    :cond_2
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockImportant:Z

    if-nez v0, :cond_4

    if-nez p7, :cond_4

    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    if-nez v0, :cond_4

    .line 4314
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v0, :cond_3

    .line 4316
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    const/4 v2, 0x0

    iput-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4317
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4318
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v15, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    iput-object v15, v0, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 4319
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput v14, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    iput v14, v0, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 4320
    invoke-virtual {v8, v10, v11, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4322
    :cond_3
    iput-boolean v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockImportant:Z

    .line 4324
    :cond_4
    :goto_1
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    add-int/2addr v0, v1

    iput v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    goto :goto_2

    .line 4289
    .end local v15    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_5
    move-object/from16 v15, p5

    .line 4326
    .end local p5    # "historyName":Ljava/lang/String;
    .restart local v15    # "historyName":Ljava/lang/String;
    :goto_2
    if-ltz v14, :cond_8

    .line 4327
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    if-eqz v0, :cond_6

    .line 4333
    invoke-direct/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->requestWakelockCpuUpdate()V

    .line 4336
    :cond_6
    invoke-virtual {v8, v14}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    move/from16 v1, p2

    move-object/from16 v2, p4

    move/from16 v3, p6

    move-wide/from16 v4, p8

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartWakeLocked(ILjava/lang/String;IJ)V

    .line 4338
    if-eqz p3, :cond_7

    .line 4339
    const/16 v0, 0xa

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v1

    .line 4340
    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v2

    invoke-direct {v8, v9}, Lcom/android/internal/os/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v3

    const/4 v5, 0x1

    .line 4339
    move-object/from16 v4, p4

    invoke-static/range {v0 .. v5}, Lcom/android/internal/util/FrameworkStatsLog;->write(I[I[Ljava/lang/String;ILjava/lang/String;I)V

    goto :goto_3

    .line 4343
    :cond_7
    const/16 v0, 0xa

    const/4 v2, 0x0

    .line 4344
    invoke-direct {v8, v9}, Lcom/android/internal/os/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v3

    const/4 v5, 0x1

    .line 4343
    move v1, v14

    move-object/from16 v4, p4

    invoke-static/range {v0 .. v5}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;ILjava/lang/String;I)V

    .line 4348
    :cond_8
    :goto_3
    return-void
.end method

.method public greylist-max-o noteStopSensorLocked(II)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "sensor"    # I

    .line 4680
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4681
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4682
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4683
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    .line 4684
    if-nez v4, :cond_0

    .line 4685
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x800001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4688
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4690
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopSensor(IJ)V

    .line 4691
    return-void
.end method

.method public greylist-max-o noteStopWakeFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;I)V
    .locals 20
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I

    .line 4496
    move-object/from16 v11, p0

    iget-object v0, v11, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v12

    .line 4497
    .local v12, "elapsedRealtime":J
    iget-object v0, v11, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v14

    .line 4498
    .local v14, "uptime":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v9

    .line 4499
    .local v9, "N":I
    const/4 v0, 0x0

    move v10, v0

    .local v10, "i":I
    :goto_0
    if-ge v10, v9, :cond_0

    .line 4500
    move-object/from16 v7, p1

    invoke-virtual {v7, v10}, Landroid/os/WorkSource;->getUid(I)I

    move-result v1

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-wide v7, v12

    move/from16 v16, v9

    move/from16 v17, v10

    .end local v9    # "N":I
    .end local v10    # "i":I
    .local v16, "N":I
    .local v17, "i":I
    move-wide v9, v14

    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4499
    add-int/lit8 v10, v17, 0x1

    move/from16 v9, v16

    .end local v17    # "i":I
    .restart local v10    # "i":I
    goto :goto_0

    .end local v16    # "N":I
    .restart local v9    # "N":I
    :cond_0
    move/from16 v16, v9

    move/from16 v17, v10

    .line 4504
    .end local v9    # "N":I
    .end local v10    # "i":I
    .restart local v16    # "N":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v9

    .line 4505
    .local v9, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v9, :cond_2

    .line 4506
    const/4 v0, 0x0

    move v10, v0

    .restart local v10    # "i":I
    :goto_1
    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v0

    if-ge v10, v0, :cond_1

    .line 4507
    invoke-interface {v9, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v17, v0

    check-cast v17, Landroid/os/WorkSource$WorkChain;

    .line 4508
    .local v17, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual/range {v17 .. v17}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object/from16 v0, p0

    move/from16 v2, p2

    move-object/from16 v3, v17

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-wide v7, v12

    move-object/from16 v18, v9

    move/from16 v19, v10

    .end local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v10    # "i":I
    .local v18, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v19, "i":I
    move-wide v9, v14

    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4506
    .end local v17    # "wc":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v10, v19, 0x1

    move-object/from16 v9, v18

    .end local v19    # "i":I
    .restart local v10    # "i":I
    goto :goto_1

    .end local v18    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_1
    move-object/from16 v18, v9

    move/from16 v19, v10

    .end local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v10    # "i":I
    .restart local v18    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v19    # "i":I
    goto :goto_2

    .line 4505
    .end local v18    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v19    # "i":I
    .restart local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_2
    move-object/from16 v18, v9

    .line 4512
    .end local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v18    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :goto_2
    return-void
.end method

.method public greylist-max-o noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V
    .locals 14
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "wc"    # Landroid/os/WorkSource$WorkChain;
    .param p4, "name"    # Ljava/lang/String;
    .param p5, "historyName"    # Ljava/lang/String;
    .param p6, "type"    # I
    .param p7, "elapsedRealtime"    # J
    .param p9, "uptime"    # J

    .line 4352
    move-object v8, p0

    move/from16 v9, p6

    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v10

    .line 4353
    .end local p1    # "uid":I
    .local v10, "uid":I
    if-nez v9, :cond_4

    .line 4354
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    .line 4355
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-eqz v0, :cond_1

    .line 4356
    if-nez p5, :cond_0

    .line 4357
    move-object/from16 v0, p4

    move-object v11, v0

    .end local p5    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    goto :goto_0

    .line 4356
    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v11, p5

    .line 4359
    .end local p5    # "historyName":Ljava/lang/String;
    .local v11, "historyName":Ljava/lang/String;
    :goto_0
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4005

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v11, v10, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 4361
    const/16 v5, 0x4005

    move-object v0, p0

    move-wide/from16 v1, p7

    move-wide/from16 v3, p9

    move-object v6, v11

    move v7, v10

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_1

    .line 4355
    .end local v11    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_1
    move-object/from16 v11, p5

    .line 4365
    .end local p5    # "historyName":Ljava/lang/String;
    .restart local v11    # "historyName":Ljava/lang/String;
    :cond_2
    :goto_1
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    if-nez v0, :cond_3

    .line 4366
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v2, -0x40000001    # -1.9999999f

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4369
    const/4 v0, 0x0

    iput-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    .line 4370
    const/4 v0, -0x1

    iput v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 4371
    move-wide/from16 v6, p7

    move-wide/from16 v12, p9

    invoke-virtual {p0, v6, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    goto :goto_2

    .line 4365
    :cond_3
    move-wide/from16 v6, p7

    move-wide/from16 v12, p9

    goto :goto_2

    .line 4353
    .end local v11    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_4
    move-wide/from16 v6, p7

    move-wide/from16 v12, p9

    move-object/from16 v11, p5

    .line 4374
    .end local p5    # "historyName":Ljava/lang/String;
    .restart local v11    # "historyName":Ljava/lang/String;
    :goto_2
    if-ltz v10, :cond_7

    .line 4375
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    if-eqz v0, :cond_5

    .line 4379
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->requestWakelockCpuUpdate()V

    .line 4382
    :cond_5
    invoke-virtual {p0, v10}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    move/from16 v1, p2

    move-object/from16 v2, p4

    move/from16 v3, p6

    move-wide/from16 v4, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopWakeLocked(ILjava/lang/String;IJ)V

    .line 4383
    if-eqz p3, :cond_6

    .line 4384
    const/16 v0, 0xa

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v1

    .line 4385
    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v9}, Lcom/android/internal/os/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v3

    const/4 v5, 0x0

    .line 4384
    move-object/from16 v4, p4

    invoke-static/range {v0 .. v5}, Lcom/android/internal/util/FrameworkStatsLog;->write(I[I[Ljava/lang/String;ILjava/lang/String;I)V

    goto :goto_3

    .line 4388
    :cond_6
    const/16 v0, 0xa

    const/4 v2, 0x0

    .line 4389
    invoke-direct {p0, v9}, Lcom/android/internal/os/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v3

    const/4 v5, 0x0

    .line 4388
    move v1, v10

    move-object/from16 v4, p4

    invoke-static/range {v0 .. v5}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;ILjava/lang/String;I)V

    .line 4393
    :cond_7
    :goto_3
    return-void
.end method

.method public greylist-max-o noteSyncFinishLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4099
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4100
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4101
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4102
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopSyncLocked(Ljava/lang/String;J)V

    .line 4103
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4004

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4104
    return-void

    .line 4106
    :cond_0
    const/16 v5, 0x4004

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4109
    const-string/jumbo v6, "null"

    move-object v1, p0

    move-wide v2, v8

    move-wide v4, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalnetSyncProc(JJLjava/lang/String;)V

    .line 4111
    return-void
.end method

.method public greylist-max-o noteSyncStartLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4084
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4085
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4086
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4087
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartSyncLocked(Ljava/lang/String;J)V

    .line 4088
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8004

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4089
    return-void

    .line 4091
    :cond_0
    const v5, 0x8004

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4094
    move-object v1, p0

    move-wide v2, v8

    move-wide v4, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalnetSyncProc(JJLjava/lang/String;)V

    .line 4096
    return-void
.end method

.method public greylist-max-o noteUidProcessStateLocked(II)V
    .locals 3
    .param p1, "uid"    # I
    .param p2, "state"    # I

    .line 4056
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v0

    .line 4057
    .local v0, "parentUid":I
    if-eq p1, v0, :cond_0

    .line 4060
    return-void

    .line 4065
    :cond_0
    const/16 v1, 0x1b

    .line 4066
    invoke-static {p2}, Landroid/app/ActivityManager;->processStateAmToProto(I)I

    move-result v2

    .line 4065
    invoke-static {v1, p1, v2}, Lcom/android/internal/util/FrameworkStatsLog;->write(III)V

    .line 4067
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v1

    invoke-virtual {v1, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->updateUidProcessStateLocked(I)V

    .line 4068
    return-void
.end method

.method public greylist noteUserActivityLocked(II)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "event"    # I

    .line 4953
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_0

    .line 4954
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4955
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteUserActivityLocked(I)V

    .line 4957
    :cond_0
    return-void
.end method

.method public greylist-max-o noteVibratorOffLocked(I)V
    .locals 1
    .param p1, "uid"    # I

    .line 5665
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5666
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVibratorOffLocked()V

    .line 5667
    return-void
.end method

.method public greylist-max-o noteVibratorOnLocked(IJ)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "durationMillis"    # J

    .line 5660
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5661
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVibratorOnLocked(J)V

    .line 5662
    return-void
.end method

.method public greylist noteVideoOffLocked(I)V
    .locals 13
    .param p1, "uid"    # I

    .line 5559
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    if-nez v0, :cond_0

    .line 5560
    return-void

    .line 5562
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5563
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 5564
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 5565
    .local v11, "uptime":J
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    if-nez v0, :cond_1

    .line 5566
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x40000001    # -1.9999999f

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5569
    invoke-virtual {p0, v9, v10, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5572
    const/4 v2, 0x4

    const/4 v7, 0x0

    move-object v1, p0

    move-wide v3, v9

    move-wide v5, v11

    move v8, p1

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZI)V

    .line 5575
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5577
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVideoTurnedOffLocked(J)V

    .line 5578
    return-void
.end method

.method public greylist noteVideoOnLocked(I)V
    .locals 12
    .param p1, "uid"    # I

    .line 5538
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5539
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 5540
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 5541
    .local v10, "uptime":J
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    if-nez v0, :cond_0

    .line 5542
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v2, 0x40000000    # 2.0f

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5545
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5548
    const/4 v1, 0x4

    const/4 v6, 0x1

    move-object v0, p0

    move-wide v2, v8

    move-wide v4, v10

    move v7, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalOnOffEvent(IJJZI)V

    .line 5551
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5553
    :cond_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    .line 5554
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVideoTurnedOnLocked(J)V

    .line 5555
    return-void
.end method

.method public greylist-max-o noteWakeUpLocked(Ljava/lang/String;I)V
    .locals 13
    .param p1, "reason"    # Ljava/lang/String;
    .param p2, "reasonUid"    # I

    .line 4960
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4961
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4962
    .local v11, "uptime":J
    const/16 v6, 0x12

    move-object v1, p0

    move-wide v2, v9

    move-wide v4, v11

    move-object v7, p1

    move v8, p2

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4964
    return-void
.end method

.method public greylist-max-o noteWakeupReasonLocked(Ljava/lang/String;)V
    .locals 6
    .param p1, "reason"    # Ljava/lang/String;

    .line 4600
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4601
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4604
    .local v2, "uptime":J
    invoke-virtual {p0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->aggregateLastWakeupUptimeLocked(J)V

    .line 4605
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v5, v4, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v5, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4606
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object p1, v4, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 4607
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    const/4 v5, 0x0

    iput v5, v4, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 4608
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 4609
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 4610
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4611
    return-void
.end method

.method public greylist-max-o noteWakupAlarmLocked(Ljava/lang/String;ILandroid/os/WorkSource;Ljava/lang/String;)V
    .locals 4
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "workSource"    # Landroid/os/WorkSource;
    .param p4, "tag"    # Ljava/lang/String;

    .line 4193
    if-eqz p3, :cond_5

    .line 4194
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    invoke-virtual {p3}, Landroid/os/WorkSource;->size()I

    move-result v1

    if-ge v0, v1, :cond_2

    .line 4195
    invoke-virtual {p3, v0}, Landroid/os/WorkSource;->getUid(I)I

    move-result p2

    .line 4196
    invoke-virtual {p3, v0}, Landroid/os/WorkSource;->getPackageName(I)Ljava/lang/String;

    move-result-object v1

    .line 4198
    .local v1, "workSourceName":Ljava/lang/String;
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 4199
    nop

    .line 4200
    if-eqz v1, :cond_0

    move-object v2, v1

    goto :goto_1

    :cond_0
    move-object v2, p1

    .line 4199
    :goto_1
    invoke-virtual {p0, p2, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v2

    .line 4201
    .local v2, "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v2, p4}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    .line 4194
    .end local v1    # "workSourceName":Ljava/lang/String;
    .end local v2    # "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    :cond_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 4205
    .end local v0    # "i":I
    :cond_2
    invoke-virtual {p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    .line 4206
    .local v0, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v0, :cond_4

    .line 4207
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_2
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_4

    .line 4208
    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/WorkSource$WorkChain;

    .line 4209
    .local v2, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result p2

    .line 4211
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v3

    if-eqz v3, :cond_3

    .line 4212
    invoke-virtual {p0, p2, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v3

    .line 4213
    .local v3, "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v3, p4}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    .line 4207
    .end local v2    # "wc":Landroid/os/WorkSource$WorkChain;
    .end local v3    # "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    :cond_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 4217
    .end local v0    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v1    # "i":I
    :cond_4
    goto :goto_3

    .line 4218
    :cond_5
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_6

    .line 4219
    invoke-virtual {p0, p2, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v0

    .line 4220
    .local v0, "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v0, p4}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    .line 4223
    .end local v0    # "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    :cond_6
    :goto_3
    return-void
.end method

.method public greylist-max-o noteWifiBatchedScanStartedFromSourceLocked(Landroid/os/WorkSource;I)V
    .locals 4
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "csph"    # I

    .line 6295
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6296
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6297
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v2

    invoke-virtual {p0, v2, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiBatchedScanStartedLocked(II)V

    .line 6296
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6300
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6301
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6302
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6303
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v3

    invoke-virtual {p0, v3, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiBatchedScanStartedLocked(II)V

    .line 6302
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6306
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist-max-o noteWifiBatchedScanStartedLocked(II)V
    .locals 3
    .param p1, "uid"    # I
    .param p2, "csph"    # I

    .line 6171
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6172
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6173
    .local v0, "elapsedRealtime":J
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v2

    invoke-virtual {v2, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiBatchedScanStartedLocked(IJ)V

    .line 6174
    return-void
.end method

.method public greylist-max-o noteWifiBatchedScanStoppedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 4
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6309
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6310
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6311
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiBatchedScanStoppedLocked(I)V

    .line 6310
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6314
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6315
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6316
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6317
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiBatchedScanStoppedLocked(I)V

    .line 6316
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6320
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist-max-o noteWifiBatchedScanStoppedLocked(I)V
    .locals 3
    .param p1, "uid"    # I

    .line 6177
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6178
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6179
    .local v0, "elapsedRealtime":J
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v2

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiBatchedScanStoppedLocked(J)V

    .line 6180
    return-void
.end method

.method public greylist noteWifiMulticastDisabledLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6207
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6208
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6209
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6210
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    .line 6211
    if-nez v4, :cond_0

    .line 6212
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x10001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6215
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6218
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 6220
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 6223
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiMulticastDisabledLocked(J)V

    .line 6224
    return-void
.end method

.method public greylist noteWifiMulticastEnabledLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6186
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6187
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6188
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6189
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    if-nez v4, :cond_0

    .line 6190
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x10000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6193
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6196
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v4

    if-nez v4, :cond_0

    .line 6198
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 6201
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    .line 6202
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiMulticastEnabledLocked(J)V

    .line 6203
    return-void
.end method

.method public greylist-max-o noteWifiOffLocked()V
    .locals 11

    .line 5475
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v7

    .line 5476
    .local v7, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v9

    .line 5477
    .local v9, "uptime":J
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    if-eqz v0, :cond_0

    .line 5478
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x10000001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5481
    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5482
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    .line 5483
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5486
    const/4 v6, 0x0

    move-object v1, p0

    move-wide v2, v7

    move-wide v4, v9

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalWifiStatus(JJI)V

    .line 5488
    const/4 v0, 0x2

    const-string/jumbo v1, "wifi-on"

    invoke-direct {p0, v1, v0}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5490
    :cond_0
    return-void
.end method

.method public greylist-max-o noteWifiOnLocked()V
    .locals 11

    .line 5457
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    if-nez v0, :cond_0

    .line 5458
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v7

    .line 5459
    .local v7, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v9

    .line 5460
    .local v9, "uptime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v2, 0x10000000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5463
    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5464
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    .line 5465
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5468
    const/4 v6, 0x1

    move-object v1, p0

    move-wide v2, v7

    move-wide v4, v9

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalWifiStatus(JJI)V

    .line 5470
    const/4 v0, 0x2

    const-string/jumbo v1, "wifi-off"

    invoke-direct {p0, v1, v0}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5472
    .end local v7    # "elapsedRealtime":J
    .end local v9    # "uptime":J
    :cond_0
    return-void
.end method

.method public greylist-max-o noteWifiRadioPowerState(IJI)V
    .locals 11
    .param p1, "powerState"    # I
    .param p2, "timestampNs"    # J
    .param p4, "uid"    # I

    .line 5906
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v7

    .line 5907
    .local v7, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v9

    .line 5908
    .local v9, "uptime":J
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    if-eq v0, p1, :cond_4

    .line 5909
    const/4 v0, 0x2

    if-eq p1, v0, :cond_1

    const/4 v0, 0x3

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    .line 5912
    .local v0, "active":Z
    :goto_1
    if-eqz v0, :cond_3

    .line 5913
    if-lez p4, :cond_2

    .line 5914
    move-object v1, p0

    move-wide v2, v7

    move-wide v4, v9

    move v6, p4

    invoke-direct/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiRadioApWakeupLocked(JJI)V

    .line 5916
    :cond_2
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x4000000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5917
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_2

    .line 5919
    :cond_3
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, -0x4000001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5920
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    const-wide/32 v2, 0xf4240

    div-long v2, p2, v2

    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5925
    :goto_2
    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5926
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 5928
    .end local v0    # "active":Z
    :cond_4
    return-void
.end method

.method public greylist-max-o noteWifiRssiChangedLocked(I)V
    .locals 12
    .param p1, "newRssi"    # I

    .line 6078
    const/4 v0, 0x5

    invoke-static {p1, v0}, Landroid/net/wifi/WifiManager;->calculateSignalLevel(II)I

    move-result v0

    .line 6080
    .local v0, "strengthBin":I
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    if-eq v1, v0, :cond_3

    .line 6081
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 6082
    .local v8, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 6083
    .local v10, "uptime":J
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    if-ltz v1, :cond_0

    .line 6084
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v2, v1

    invoke-virtual {v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 6087
    :cond_0
    if-ltz v0, :cond_2

    .line 6088
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v1

    if-nez v1, :cond_1

    .line 6089
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 6091
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    and-int/lit8 v2, v2, -0x71

    shl-int/lit8 v3, v0, 0x4

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 6096
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6099
    move-object v2, p0

    move-wide v3, v8

    move-wide v5, v10

    move v7, p1

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalWifiRssi(JJI)V

    goto :goto_0

    .line 6102
    :cond_2
    const/4 v1, -0x1

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->stopAllWifiSignalStrengthTimersLocked(I)V

    .line 6105
    const/4 v7, 0x0

    move-object v2, p0

    move-wide v3, v8

    move-wide v5, v10

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalWifiRssi(JJI)V

    .line 6108
    :goto_0
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 6110
    .end local v8    # "elapsedRealtime":J
    .end local v10    # "uptime":J
    :cond_3
    return-void
.end method

.method public greylist-max-o noteWifiRunningChangedLocked(Landroid/os/WorkSource;Landroid/os/WorkSource;)V
    .locals 7
    .param p1, "oldWs"    # Landroid/os/WorkSource;
    .param p2, "newWs"    # Landroid/os/WorkSource;

    .line 5965
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    if-eqz v0, :cond_4

    .line 5966
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5967
    .local v0, "elapsedRealtime":J
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v2

    .line 5968
    .local v2, "N":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_0
    if-ge v3, v2, :cond_0

    .line 5969
    invoke-virtual {p1, v3}, Landroid/os/WorkSource;->getUid(I)I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 5970
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v5

    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 5968
    .end local v4    # "uid":I
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 5973
    .end local v3    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v3

    .line 5974
    .local v3, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v3, :cond_1

    .line 5975
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_1
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v5

    if-ge v4, v5, :cond_1

    .line 5976
    invoke-interface {v3, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v5

    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 5977
    .local v5, "uid":I
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v6

    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 5975
    .end local v5    # "uid":I
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 5981
    .end local v4    # "i":I
    :cond_1
    invoke-virtual {p2}, Landroid/os/WorkSource;->size()I

    move-result v2

    .line 5982
    const/4 v4, 0x0

    .restart local v4    # "i":I
    :goto_2
    if-ge v4, v2, :cond_2

    .line 5983
    invoke-virtual {p2, v4}, Landroid/os/WorkSource;->getUid(I)I

    move-result v5

    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 5984
    .restart local v5    # "uid":I
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v6

    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5982
    .end local v5    # "uid":I
    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    .line 5987
    .end local v4    # "i":I
    :cond_2
    invoke-virtual {p2}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v3

    .line 5988
    if-eqz v3, :cond_3

    .line 5989
    const/4 v4, 0x0

    .restart local v4    # "i":I
    :goto_3
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v5

    if-ge v4, v5, :cond_3

    .line 5990
    invoke-interface {v3, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v5

    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 5991
    .restart local v5    # "uid":I
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v6

    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5989
    .end local v5    # "uid":I
    add-int/lit8 v4, v4, 0x1

    goto :goto_3

    .line 5994
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "N":I
    .end local v3    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v4    # "i":I
    :cond_3
    goto :goto_4

    .line 5995
    :cond_4
    const-string v0, "BatteryStatsImpl"

    const-string/jumbo v1, "noteWifiRunningChangedLocked -- called while WIFI not running"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5997
    :goto_4
    return-void
.end method

.method public greylist-max-o noteWifiRunningLocked(Landroid/os/WorkSource;)V
    .locals 12
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 5931
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    if-nez v0, :cond_2

    .line 5932
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v7

    .line 5933
    .local v7, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v9

    .line 5934
    .local v9, "uptime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v2, 0x20000000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5937
    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5938
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 5939
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5940
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 5941
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 5942
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 5943
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v3

    invoke-virtual {v3, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5941
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 5946
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v11

    .line 5947
    .local v11, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v11, :cond_1

    .line 5948
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_1
    invoke-interface {v11}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    .line 5949
    invoke-interface {v11, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 5950
    .restart local v2    # "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v3

    invoke-virtual {v3, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5948
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 5955
    .end local v1    # "i":I
    :cond_1
    const/4 v6, 0x2

    move-object v1, p0

    move-wide v2, v7

    move-wide v4, v9

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalWifiStatus(JJI)V

    .line 5958
    const/4 v1, 0x2

    const-string/jumbo v2, "wifi-running"

    invoke-direct {p0, v2, v1}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5959
    .end local v0    # "N":I
    .end local v7    # "elapsedRealtime":J
    .end local v9    # "uptime":J
    .end local v11    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    goto :goto_2

    .line 5960
    :cond_2
    const-string v0, "BatteryStatsImpl"

    const-string/jumbo v1, "noteWifiRunningLocked -- called while WIFI running"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5962
    :goto_2
    return-void
.end method

.method public greylist-max-o noteWifiScanStartedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6261
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6262
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6263
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 6264
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiScanStartedLocked(I)V

    .line 6262
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6267
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6268
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6269
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6270
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 6271
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 6272
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiScanStartedLocked(I)V

    .line 6269
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6275
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist-max-o noteWifiScanStartedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6145
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6146
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6147
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    if-nez v4, :cond_0

    .line 6148
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x8000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6151
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6153
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    .line 6154
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiScanStartedLocked(J)V

    .line 6155
    return-void
.end method

.method public greylist-max-o noteWifiScanStoppedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6278
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6279
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6280
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 6281
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiScanStoppedLocked(I)V

    .line 6279
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6284
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v1

    .line 6285
    .local v1, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_1

    .line 6286
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 6287
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 6288
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 6289
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiScanStoppedLocked(I)V

    .line 6286
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 6292
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method public greylist-max-o noteWifiScanStoppedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6158
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6159
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6160
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    .line 6161
    if-nez v4, :cond_0

    .line 6162
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x8000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6165
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6167
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiScanStoppedLocked(J)V

    .line 6168
    return-void
.end method

.method public greylist-max-o noteWifiStateLocked(ILjava/lang/String;)V
    .locals 4
    .param p1, "wifiState"    # I
    .param p2, "accessPoint"    # Ljava/lang/String;

    .line 6035
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    if-eq v0, p1, :cond_1

    .line 6036
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6037
    .local v0, "elapsedRealtime":J
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    if-ltz v2, :cond_0

    .line 6038
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v3, v2

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 6040
    :cond_0
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    .line 6041
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, p1

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 6042
    const/4 v2, 0x2

    const-string/jumbo v3, "wifi-state"

    invoke-direct {p0, v3, v2}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 6044
    .end local v0    # "elapsedRealtime":J
    :cond_1
    return-void
.end method

.method public greylist-max-o noteWifiStoppedLocked(Landroid/os/WorkSource;)V
    .locals 12
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6000
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    if-eqz v0, :cond_2

    .line 6001
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v7

    .line 6002
    .local v7, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v9

    .line 6003
    .local v9, "uptime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x20000001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 6006
    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6007
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 6008
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 6009
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6010
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 6011
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 6012
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v3

    invoke-virtual {v3, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 6010
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 6015
    .end local v1    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v11

    .line 6016
    .local v11, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v11, :cond_1

    .line 6017
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_1
    invoke-interface {v11}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    .line 6018
    invoke-interface {v11, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    .line 6019
    .restart local v2    # "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v3

    invoke-virtual {v3, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 6017
    .end local v2    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 6024
    .end local v1    # "i":I
    :cond_1
    const/4 v6, 0x3

    move-object v1, p0

    move-wide v2, v7

    move-wide v4, v9

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->addThermalWifiStatus(JJI)V

    .line 6027
    const/4 v1, 0x2

    const-string/jumbo v2, "wifi-stopped"

    invoke-direct {p0, v2, v1}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 6028
    .end local v0    # "N":I
    .end local v7    # "elapsedRealtime":J
    .end local v9    # "uptime":J
    .end local v11    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    goto :goto_2

    .line 6029
    :cond_2
    const-string v0, "BatteryStatsImpl"

    const-string/jumbo v1, "noteWifiStoppedLocked -- called while WIFI not running"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6031
    :goto_2
    return-void
.end method

.method public greylist-max-o noteWifiSupplicantStateChangedLocked(IZ)V
    .locals 7
    .param p1, "supplState"    # I
    .param p2, "failedAuth"    # Z

    .line 6048
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    if-eq v0, p1, :cond_1

    .line 6049
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6050
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6051
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    if-ltz v4, :cond_0

    .line 6052
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v4, v5, v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 6054
    :cond_0
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    .line 6055
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, p1

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 6056
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    and-int/lit8 v5, v5, -0x10

    shl-int/lit8 v6, p1, 0x0

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 6061
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6063
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_1
    return-void
.end method

.method protected blacklist onBatterySendBroadcast(Landroid/content/Intent;)V
    .locals 1
    .param p1, "statusIntent"    # Landroid/content/Intent;

    .line 15471
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCallback:Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

    if-eqz v0, :cond_0

    invoke-interface {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;->batterySendBroadcast(Landroid/content/Intent;)V

    .line 15472
    :cond_0
    return-void
.end method

.method public greylist-max-o onCleanupUserLocked(I)V
    .locals 10
    .param p1, "userId"    # I

    .line 13256
    const/4 v0, 0x0

    invoke-static {p1, v0}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    .line 13257
    .local v0, "firstUidForUser":I
    const v1, 0x1869f

    invoke-static {p1, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v7

    .line 13258
    .local v7, "lastUidForUser":I
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v9, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 13259
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v5

    move-object v1, v9

    move-object v2, p0

    move v3, v0

    move v4, v7

    invoke-direct/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;-><init>(Lcom/android/internal/os/BatteryStatsImpl;IIJ)V

    .line 13258
    invoke-interface {v8, v9}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    .line 13260
    return-void
.end method

.method protected blacklist onNoteActivityResumed(I)V
    .locals 0
    .param p1, "uid"    # I

    .line 15461
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->noteActivityResumedLocked(I)V

    .line 15462
    return-void
.end method

.method protected blacklist onSchedulerUpdateCpu(J)V
    .locals 2
    .param p1, "delay"    # J

    .line 15476
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 15477
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1, p1, p2}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 15479
    :cond_0
    return-void
.end method

.method public greylist-max-o onUserRemovedLocked(I)V
    .locals 6
    .param p1, "userId"    # I

    .line 13263
    const/4 v0, 0x0

    invoke-static {p1, v0}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    .line 13264
    .local v0, "firstUidForUser":I
    const v1, 0x1869f

    invoke-static {p1, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v1

    .line 13265
    .local v1, "lastUidForUser":I
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    const/4 v3, 0x0

    invoke-virtual {v2, v0, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13266
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13267
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v2

    .line 13268
    .local v2, "firstIndex":I
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v3

    .line 13269
    .local v3, "lastIndex":I
    move v4, v2

    .local v4, "i":I
    :goto_0
    if-gt v4, v3, :cond_1

    .line 13270
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 13271
    .local v5, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-eqz v5, :cond_0

    .line 13272
    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->detachFromTimeBase()V

    .line 13269
    .end local v5    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 13275
    .end local v4    # "i":I
    :cond_1
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    sub-int v5, v3, v2

    add-int/lit8 v5, v5, 0x1

    invoke-virtual {v4, v2, v5}, Landroid/util/SparseArray;->removeAtRange(II)V

    .line 13276
    return-void
.end method

.method protected blacklist onWriteSummaryToParcel(Landroid/os/Parcel;Z)V
    .locals 0
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclHistory"    # Z

    .line 15483
    invoke-virtual {p0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl;->writeSummaryToParcel(Landroid/os/Parcel;Z)V

    .line 15484
    return-void
.end method

.method public greylist-max-o postBatteryNeedsCpuUpdateMsg()V
    .locals 2

    .line 454
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 455
    return-void
.end method

.method public greylist-max-o prepareForDumpLocked()V
    .locals 0

    .line 15359
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 15363
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getStartClockTime()J

    .line 15364
    return-void
.end method

.method public greylist-max-o pullPendingStateUpdatesLocked()V
    .locals 1

    .line 10999
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_0

    .line 11000
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    .line 11002
    :cond_0
    return-void
.end method

.method greylist-max-o readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V
    .locals 11
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;
    .param p2, "dit"    # Landroid/os/BatteryStats$DailyItem;
    .param p3, "isCharge"    # Z
    .param p4, "tag"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/NumberFormatException;,
            Lorg/xmlpull/v1/XmlPullParserException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 10511
    const/4 v0, 0x0

    const-string/jumbo v1, "n"

    invoke-interface {p1, v0, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 10512
    .local v1, "numAttr":Ljava/lang/String;
    const-string v2, "BatteryStatsImpl"

    if-nez v1, :cond_0

    .line 10513
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Missing \'n\' attribute at "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getPositionDescription()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10514
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10515
    return-void

    .line 10517
    :cond_0
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v3

    .line 10518
    .local v3, "num":I
    new-instance v4, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v4, v3}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    .line 10519
    .local v4, "steps":Landroid/os/BatteryStats$LevelStepTracker;
    if-eqz p3, :cond_1

    .line 10520
    iput-object v4, p2, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    goto :goto_0

    .line 10522
    :cond_1
    iput-object v4, p2, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    .line 10524
    :goto_0
    const/4 v5, 0x0

    .line 10525
    .local v5, "i":I
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v6

    .line 10527
    .local v6, "outerDepth":I
    :cond_2
    :goto_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v7

    move v8, v7

    .local v8, "type":I
    const/4 v9, 0x1

    if-eq v7, v9, :cond_8

    const/4 v7, 0x3

    if-ne v8, v7, :cond_3

    .line 10528
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v9

    if-le v9, v6, :cond_8

    .line 10529
    :cond_3
    if-eq v8, v7, :cond_2

    const/4 v7, 0x4

    if-ne v8, v7, :cond_4

    .line 10530
    goto :goto_1

    .line 10533
    :cond_4
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v7

    .line 10534
    .local v7, "tagName":Ljava/lang/String;
    const-string/jumbo v9, "s"

    invoke-virtual {v9, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_6

    .line 10535
    if-ge v5, v3, :cond_7

    .line 10536
    const-string/jumbo v9, "v"

    invoke-interface {p1, v0, v9}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v9

    .line 10537
    .local v9, "valueAttr":Ljava/lang/String;
    if-eqz v9, :cond_5

    .line 10538
    invoke-virtual {v4, v5, v9}, Landroid/os/BatteryStats$LevelStepTracker;->decodeEntryAt(ILjava/lang/String;)V

    .line 10539
    add-int/lit8 v5, v5, 0x1

    .line 10541
    .end local v9    # "valueAttr":Ljava/lang/String;
    :cond_5
    goto :goto_2

    .line 10543
    :cond_6
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Unknown element under <"

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, ">: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10544
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    .line 10543
    invoke-static {v2, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10545
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10547
    .end local v7    # "tagName":Ljava/lang/String;
    :cond_7
    :goto_2
    goto :goto_1

    .line 10548
    :cond_8
    iput v5, v4, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    .line 10549
    return-void
.end method

.method greylist-max-o readDailyItemTagLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    .locals 10
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/NumberFormatException;,
            Lorg/xmlpull/v1/XmlPullParserException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 10457
    new-instance v0, Landroid/os/BatteryStats$DailyItem;

    invoke-direct {v0}, Landroid/os/BatteryStats$DailyItem;-><init>()V

    .line 10458
    .local v0, "dit":Landroid/os/BatteryStats$DailyItem;
    const/4 v1, 0x0

    const-string/jumbo v2, "start"

    invoke-interface {p1, v1, v2}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 10459
    .local v2, "attr":Ljava/lang/String;
    if-eqz v2, :cond_0

    .line 10460
    invoke-static {v2}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v3

    iput-wide v3, v0, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    .line 10462
    :cond_0
    const-string v3, "end"

    invoke-interface {p1, v1, v3}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 10463
    if-eqz v2, :cond_1

    .line 10464
    invoke-static {v2}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v3

    iput-wide v3, v0, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    .line 10466
    :cond_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v3

    .line 10468
    .local v3, "outerDepth":I
    :cond_2
    :goto_0
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v4

    move v5, v4

    .local v5, "type":I
    const/4 v6, 0x1

    if-eq v4, v6, :cond_c

    const/4 v4, 0x3

    if-ne v5, v4, :cond_3

    .line 10469
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v7

    if-le v7, v3, :cond_c

    .line 10470
    :cond_3
    if-eq v5, v4, :cond_2

    const/4 v4, 0x4

    if-ne v5, v4, :cond_4

    .line 10471
    goto :goto_0

    .line 10474
    :cond_4
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v4

    .line 10475
    .local v4, "tagName":Ljava/lang/String;
    const-string v7, "dis"

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    const/4 v9, 0x0

    if-eqz v8, :cond_5

    .line 10476
    invoke-virtual {p0, p1, v0, v9, v7}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V

    goto/16 :goto_2

    .line 10477
    :cond_5
    const-string v7, "chg"

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_6

    .line 10478
    invoke-virtual {p0, p1, v0, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V

    goto/16 :goto_2

    .line 10479
    :cond_6
    const-string/jumbo v7, "upd"

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    const-string/jumbo v8, "pkg"

    if-eqz v7, :cond_9

    .line 10480
    iget-object v7, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-nez v7, :cond_7

    .line 10481
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V

    iput-object v7, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    .line 10483
    :cond_7
    new-instance v7, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v7}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 10484
    .local v7, "pc":Landroid/os/BatteryStats$PackageChange;
    iput-boolean v6, v7, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 10485
    invoke-interface {p1, v1, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    iput-object v6, v7, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 10486
    const-string/jumbo v6, "ver"

    invoke-interface {p1, v1, v6}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    .line 10487
    .local v6, "verStr":Ljava/lang/String;
    if-eqz v6, :cond_8

    invoke-static {v6}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v8

    goto :goto_1

    :cond_8
    const-wide/16 v8, 0x0

    :goto_1
    iput-wide v8, v7, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    .line 10488
    iget-object v8, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v8, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10489
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10490
    .end local v6    # "verStr":Ljava/lang/String;
    .end local v7    # "pc":Landroid/os/BatteryStats$PackageChange;
    goto :goto_2

    :cond_9
    const-string/jumbo v6, "rem"

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_b

    .line 10491
    iget-object v6, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-nez v6, :cond_a

    .line 10492
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    iput-object v6, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    .line 10494
    :cond_a
    new-instance v6, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v6}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 10495
    .local v6, "pc":Landroid/os/BatteryStats$PackageChange;
    iput-boolean v9, v6, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 10496
    invoke-interface {p1, v1, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    iput-object v7, v6, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 10497
    iget-object v7, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10498
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10499
    .end local v6    # "pc":Landroid/os/BatteryStats$PackageChange;
    goto :goto_2

    .line 10500
    :cond_b
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Unknown element under <item>: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10501
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 10500
    const-string v7, "BatteryStatsImpl"

    invoke-static {v7, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10502
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10504
    .end local v4    # "tagName":Ljava/lang/String;
    :goto_2
    goto/16 :goto_0

    .line 10505
    :cond_c
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10506
    return-void
.end method

.method public greylist-max-o readDailyStatsLocked()V
    .locals 3

    .line 10390
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Reading daily items from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    invoke-virtual {v1}, Landroid/util/AtomicFile;->getBaseFile()Ljava/io/File;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "BatteryStatsImpl"

    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10391
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 10394
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    invoke-virtual {v0}, Landroid/util/AtomicFile;->openRead()Ljava/io/FileInputStream;

    move-result-object v0
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_3

    .line 10397
    .local v0, "stream":Ljava/io/FileInputStream;
    nop

    .line 10399
    :try_start_1
    invoke-static {}, Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;

    move-result-object v1

    .line 10400
    .local v1, "parser":Lorg/xmlpull/v1/XmlPullParser;
    sget-object v2, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v2}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v2

    invoke-interface {v1, v0, v2}, Lorg/xmlpull/v1/XmlPullParser;->setInput(Ljava/io/InputStream;Ljava/lang/String;)V

    .line 10401
    invoke-direct {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemsLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    :try_end_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10405
    .end local v1    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    :try_start_2
    invoke-virtual {v0}, Ljava/io/FileInputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2

    goto :goto_1

    .line 10404
    :catchall_0
    move-exception v1

    .line 10405
    :try_start_3
    invoke-virtual {v0}, Ljava/io/FileInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    .line 10407
    goto :goto_0

    .line 10406
    :catch_0
    move-exception v2

    .line 10408
    :goto_0
    throw v1

    .line 10402
    :catch_1
    move-exception v1

    .line 10405
    :try_start_4
    invoke-virtual {v0}, Ljava/io/FileInputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    .line 10407
    :goto_1
    goto :goto_2

    .line 10406
    :catch_2
    move-exception v1

    .line 10408
    nop

    .line 10409
    :goto_2
    return-void

    .line 10395
    .end local v0    # "stream":Ljava/io/FileInputStream;
    :catch_3
    move-exception v0

    .line 10396
    .local v0, "e":Ljava/io/FileNotFoundException;
    return-void
.end method

.method public greylist-max-o readFromParcel(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "in"    # Landroid/os/Parcel;

    .line 14934
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readFromParcelLocked(Landroid/os/Parcel;)V

    .line 14935
    return-void
.end method

.method greylist-max-o readFromParcelLocked(Landroid/os/Parcel;)V
    .locals 17
    .param p1, "in"    # Landroid/os/Parcel;

    .line 14938
    move-object/from16 v0, p0

    move-object/from16 v8, p1

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    .line 14939
    .local v9, "magic":I
    const v1, -0x458a8b8b

    if-ne v9, v1, :cond_17

    .line 14943
    const/4 v10, 0x0

    invoke-virtual {v0, v8, v10}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryBuffer(Landroid/os/Parcel;Z)V

    .line 14944
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v1, v8}, Lcom/android/internal/os/BatteryStatsHistory;->readFromParcel(Landroid/os/Parcel;)V

    .line 14946
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    .line 14947
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    .line 14948
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    .line 14949
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    .line 14950
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    .line 14951
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    .line 14952
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    .line 14953
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    .line 14954
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    const/4 v11, 0x1

    if-eqz v1, :cond_0

    move v1, v11

    goto :goto_0

    :cond_0
    move v1, v10

    :goto_0
    iput-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    .line 14955
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 14956
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 14957
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 14958
    iput-boolean v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    .line 14959
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v8}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readFromParcel(Landroid/os/Parcel;)V

    .line 14960
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v8}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readFromParcel(Landroid/os/Parcel;)V

    .line 14962
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 14963
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/4 v4, -0x1

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14964
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14965
    const/4 v1, 0x0

    move v12, v1

    .local v12, "i":I
    :goto_1
    const/4 v13, 0x5

    if-ge v12, v13, :cond_1

    .line 14966
    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v14, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int/lit8 v4, v12, -0x64

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v14

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v14, v13, v12

    .line 14965
    add-int/lit8 v12, v12, 0x1

    goto :goto_1

    .line 14969
    .end local v12    # "i":I
    :cond_1
    iput-boolean v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    .line 14970
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0xa

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14971
    iput-boolean v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    .line 14972
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v4, -0x2

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14974
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    .line 14975
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    .line 14976
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xe

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14978
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xb

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14980
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xf

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14982
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xc

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14983
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v4, -0x3

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14984
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_2
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v1

    if-ge v12, v1, :cond_2

    .line 14985
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0xc8

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14984
    add-int/lit8 v12, v12, 0x1

    goto :goto_2

    .line 14988
    .end local v12    # "i":I
    :cond_2
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0xc7

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14990
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_3
    sget v1, Lcom/android/internal/os/BatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v12, v1, :cond_3

    .line 14991
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x12c

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14990
    add-int/lit8 v12, v12, 0x1

    goto :goto_3

    .line 14994
    .end local v12    # "i":I
    :cond_3
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_4
    const/16 v2, 0xa

    if-ge v1, v2, :cond_4

    .line 14995
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v3, v2, v1

    .line 14996
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v3, v2, v1

    .line 14994
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 14998
    .end local v1    # "i":I
    :cond_4
    iput v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 14999
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0x190

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 15001
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0x191

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 15003
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 15004
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 15005
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 15006
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v4, -0x4

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 15008
    iput v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 15009
    iput-boolean v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    .line 15010
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 15011
    iput-boolean v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 15012
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v4, -0x5

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 15014
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_5
    const/16 v1, 0x8

    if-ge v12, v1, :cond_5

    .line 15015
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x258

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 15014
    add-int/lit8 v12, v12, 0x1

    goto :goto_5

    .line 15018
    .end local v12    # "i":I
    :cond_5
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_6
    const/16 v1, 0xd

    if-ge v12, v1, :cond_6

    .line 15019
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x2bc

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 15018
    add-int/lit8 v12, v12, 0x1

    goto :goto_6

    .line 15022
    .end local v12    # "i":I
    :cond_6
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_7
    if-ge v12, v13, :cond_7

    .line 15023
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x320

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 15022
    add-int/lit8 v12, v12, 0x1

    goto :goto_7

    .line 15026
    .end local v12    # "i":I
    :cond_7
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0x384

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 15028
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v11, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 15030
    const/4 v1, 0x0

    move v12, v1

    .restart local v12    # "i":I
    :goto_8
    const/4 v1, 0x2

    if-ge v12, v1, :cond_8

    .line 15031
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x3e8

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 15030
    add-int/lit8 v12, v12, 0x1

    goto :goto_8

    .line 15034
    .end local v12    # "i":I
    :cond_8
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v11, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 15036
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v13, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 15038
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    if-eqz v1, :cond_9

    move v1, v11

    goto :goto_9

    :cond_9
    move v1, v10

    :goto_9
    iput-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 15039
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    if-eqz v1, :cond_a

    move v1, v11

    goto :goto_a

    :cond_a
    move v1, v10

    :goto_a
    iput-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 15040
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    if-eqz v1, :cond_b

    goto :goto_b

    :cond_b
    move v11, v10

    :goto_b
    iput-boolean v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 15042
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    .line 15043
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    .line 15045
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v4, 0x0

    const/4 v5, -0x7

    const/4 v6, 0x0

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v2, v1

    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 15046
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    .line 15047
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v13, 0x0

    const/4 v14, -0x8

    const/4 v15, 0x0

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v11, v1

    move-object/from16 v16, v2

    invoke-direct/range {v11 .. v16}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 15048
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    .line 15049
    new-instance v11, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0x9

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v11

    move-object/from16 v7, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 15050
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    .line 15051
    new-instance v11, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xd

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v11

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 15052
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    .line 15053
    new-instance v10, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xe

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v10

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 15054
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    .line 15055
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    .line 15056
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 15057
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 15058
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 15059
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 15060
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 15061
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 15062
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 15063
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 15064
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 15065
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 15066
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v8}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 15067
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v8}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 15068
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 15069
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 15070
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 15071
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 15072
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 15073
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    .line 15075
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->clear()V

    .line 15076
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    .line 15077
    .local v1, "NRPMS":I
    const/4 v2, 0x0

    .local v2, "irpm":I
    :goto_c
    if-ge v2, v1, :cond_d

    .line 15078
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    if-eqz v3, :cond_c

    .line 15079
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v3

    .line 15080
    .local v3, "rpmName":Ljava/lang/String;
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v4, v5, v6, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15081
    .local v4, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5, v3, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15077
    .end local v3    # "rpmName":Ljava/lang/String;
    .end local v4    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_c
    add-int/lit8 v2, v2, 0x1

    goto :goto_c

    .line 15084
    .end local v2    # "irpm":I
    :cond_d
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->clear()V

    .line 15085
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 15086
    .local v2, "NSORPMS":I
    const/4 v3, 0x0

    .local v3, "irpm":I
    :goto_d
    if-ge v3, v2, :cond_f

    .line 15087
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    if-eqz v4, :cond_e

    .line 15088
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v4

    .line 15089
    .local v4, "rpmName":Ljava/lang/String;
    new-instance v5, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v5, v6, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15090
    .local v5, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v6, v4, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15086
    .end local v4    # "rpmName":Ljava/lang/String;
    .end local v5    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_e
    add-int/lit8 v3, v3, 0x1

    goto :goto_d

    .line 15094
    .end local v3    # "irpm":I
    :cond_f
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->clear()V

    .line 15095
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    .line 15096
    .local v3, "NKW":I
    const/4 v4, 0x0

    .local v4, "ikw":I
    :goto_e
    if-ge v4, v3, :cond_11

    .line 15097
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-eqz v5, :cond_10

    .line 15098
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v5

    .line 15099
    .local v5, "wakelockName":Ljava/lang/String;
    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7, v10, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15100
    .local v6, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v7, v5, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15096
    .end local v5    # "wakelockName":Ljava/lang/String;
    .end local v6    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_10
    add-int/lit8 v4, v4, 0x1

    goto :goto_e

    .line 15104
    .end local v4    # "ikw":I
    :cond_11
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->clear()V

    .line 15105
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 15106
    .local v4, "NWR":I
    const/4 v5, 0x0

    .local v5, "iwr":I
    :goto_f
    if-ge v5, v4, :cond_13

    .line 15107
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    if-eqz v6, :cond_12

    .line 15108
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v6

    .line 15109
    .local v6, "reasonName":Ljava/lang/String;
    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v7, v10, v11, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15110
    .local v7, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v10, v6, v7}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15106
    .end local v6    # "reasonName":Ljava/lang/String;
    .end local v7    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_12
    add-int/lit8 v5, v5, 0x1

    goto :goto_f

    .line 15114
    .end local v5    # "iwr":I
    :cond_13
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v5}, Landroid/util/LongSparseArray;->clear()V

    .line 15115
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 15116
    .local v5, "nmt":I
    const/4 v6, 0x0

    .local v6, "imt":I
    :goto_10
    if-ge v6, v5, :cond_15

    .line 15117
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    if-eqz v7, :cond_14

    .line 15118
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v10

    invoke-static {v10, v11}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v7

    .line 15119
    .local v7, "bucket":Ljava/lang/Long;
    new-instance v10, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v10, v11, v12, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15120
    .local v10, "kmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v7}, Ljava/lang/Long;->longValue()J

    move-result-wide v12

    invoke-virtual {v11, v12, v13, v10}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    .line 15116
    .end local v7    # "bucket":Ljava/lang/Long;
    .end local v10    # "kmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_14
    add-int/lit8 v6, v6, 0x1

    goto :goto_10

    .line 15124
    .end local v6    # "imt":I
    :cond_15
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15125
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15126
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15127
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15128
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15129
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15130
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->clear()V

    .line 15131
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15132
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15133
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15134
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15135
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 15138
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 15139
    .local v6, "numUids":I
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->clear()V

    .line 15140
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_11
    if-ge v7, v6, :cond_16

    .line 15141
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    .line 15142
    .local v10, "uid":I
    new-instance v11, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-direct {v11, v0, v10}, Lcom/android/internal/os/BatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/BatteryStatsImpl;I)V

    .line 15143
    .local v11, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v11, v12, v13, v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readFromParcelLocked(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 15144
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v10, v11}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 15140
    .end local v10    # "uid":I
    .end local v11    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v7, v7, 0x1

    goto :goto_11

    .line 15146
    .end local v7    # "i":I
    :cond_16
    return-void

    .line 14940
    .end local v1    # "NRPMS":I
    .end local v2    # "NSORPMS":I
    .end local v3    # "NKW":I
    .end local v4    # "NWR":I
    .end local v5    # "nmt":I
    .end local v6    # "numUids":I
    :cond_17
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Bad magic number: #"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v9}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method blacklist readHistoryBuffer(Landroid/os/Parcel;Z)V
    .locals 11
    .param p1, "in"    # Landroid/os/Parcel;
    .param p2, "andOldHistory"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/ParcelFormatException;
        }
    .end annotation

    .line 13797
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    .line 13798
    .local v0, "version":I
    const/16 v1, 0xba

    if-eq v0, v1, :cond_0

    .line 13799
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "readHistoryBuffer: version got "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", expected "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, "; erasing old stats"

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "BatteryStats"

    invoke-static {v2, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13801
    return-void

    .line 13804
    :cond_0
    invoke-virtual {p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    .line 13806
    .local v1, "historyBaseTime":J
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Landroid/os/Parcel;->setDataSize(I)V

    .line 13807
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v3, v4}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 13809
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    .line 13810
    .local v3, "bufSize":I
    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I

    move-result v4

    .line 13811
    .local v4, "curPos":I
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget v5, v5, Lcom/android/internal/os/BatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    mul-int/lit8 v5, v5, 0x64

    if-ge v3, v5, :cond_4

    .line 13814
    and-int/lit8 v5, v3, -0x4

    if-ne v5, v3, :cond_3

    .line 13820
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v5, p1, v4, v3}, Landroid/os/Parcel;->appendFrom(Landroid/os/Parcel;II)V

    .line 13821
    add-int v5, v4, v3

    invoke-virtual {p1, v5}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 13824
    if-eqz p2, :cond_1

    .line 13825
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readOldHistory(Landroid/os/Parcel;)V

    .line 13834
    :cond_1
    iput-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    .line 13844
    const-wide/16 v5, 0x0

    cmp-long v5, v1, v5

    if-lez v5, :cond_2

    .line 13845
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v5}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v5

    .line 13846
    .local v5, "oldnow":J
    iget-wide v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    sub-long/2addr v7, v5

    const-wide/16 v9, 0x1

    add-long/2addr v7, v9

    iput-wide v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    .line 13854
    .end local v5    # "oldnow":J
    :cond_2
    return-void

    .line 13815
    :cond_3
    new-instance v5, Landroid/os/ParcelFormatException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "File corrupt: history data buffer not aligned "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 13812
    :cond_4
    new-instance v5, Landroid/os/ParcelFormatException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "File corrupt: history data buffer too large "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v5
.end method

.method public greylist-max-o readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V
    .locals 11
    .param p1, "src"    # Landroid/os/Parcel;
    .param p2, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3522
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    .line 3523
    .local v0, "firstToken":I
    const v1, 0x7ffff

    and-int/2addr v1, v0

    .line 3524
    .local v1, "deltaTimeToken":I
    const/4 v2, 0x0

    iput-byte v2, p2, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    .line 3525
    const/4 v3, 0x1

    iput v3, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3529
    const v4, 0x7fffd

    const/4 v5, 0x2

    if-ge v1, v4, :cond_0

    .line 3530
    iget-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    int-to-long v8, v1

    add-long/2addr v6, v8

    iput-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    goto :goto_0

    .line 3531
    :cond_0
    if-ne v1, v4, :cond_1

    .line 3532
    invoke-virtual {p2, p1}, Landroid/os/BatteryStats$HistoryItem;->readFromParcel(Landroid/os/Parcel;)V

    .line 3534
    return-void

    .line 3535
    :cond_1
    const v4, 0x7fffe

    if-ne v1, v4, :cond_2

    .line 3536
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 3537
    .local v4, "delta":I
    iget-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    int-to-long v8, v4

    add-long/2addr v6, v8

    iput-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    .line 3538
    iget v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v6, v3

    iput v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3540
    .end local v4    # "delta":I
    goto :goto_0

    .line 3541
    :cond_2
    invoke-virtual {p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v6

    .line 3543
    .local v6, "delta":J
    iget-wide v8, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    add-long/2addr v8, v6

    iput-wide v8, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    .line 3544
    iget v4, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v4, v5

    iput v4, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3548
    .end local v6    # "delta":J
    :goto_0
    const/high16 v4, 0x80000

    and-int/2addr v4, v0

    if-eqz v4, :cond_3

    .line 3549
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 3550
    .local v4, "batteryLevelInt":I
    invoke-direct {p0, v4, p2}, Lcom/android/internal/os/BatteryStatsImpl;->readBatteryLevelInt(ILandroid/os/BatteryStats$HistoryItem;)V

    .line 3551
    iget v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v6, v3

    iput v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    goto :goto_1

    .line 3558
    .end local v4    # "batteryLevelInt":I
    :cond_3
    const/4 v4, 0x0

    .line 3561
    .restart local v4    # "batteryLevelInt":I
    :goto_1
    const/high16 v6, 0x100000

    and-int/2addr v6, v0

    const v7, 0xffffff

    const/high16 v8, -0x2000000

    if-eqz v6, :cond_7

    .line 3562
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 3563
    .local v6, "stateInt":I
    and-int/2addr v8, v0

    and-int/2addr v7, v6

    or-int/2addr v7, v8

    iput v7, p2, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3564
    shr-int/lit8 v7, v6, 0x1d

    and-int/lit8 v7, v7, 0x7

    int-to-byte v7, v7

    iput-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 3566
    shr-int/lit8 v7, v6, 0x1a

    and-int/lit8 v7, v7, 0x7

    int-to-byte v7, v7

    iput-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    .line 3568
    shr-int/lit8 v7, v6, 0x18

    const/4 v8, 0x3

    and-int/2addr v7, v8

    int-to-byte v7, v7

    iput-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 3570
    iget-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    if-eq v7, v3, :cond_6

    if-eq v7, v5, :cond_5

    if-eq v7, v8, :cond_4

    goto :goto_2

    .line 3578
    :cond_4
    const/4 v5, 0x4

    iput-byte v5, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    goto :goto_2

    .line 3575
    :cond_5
    iput-byte v5, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 3576
    goto :goto_2

    .line 3572
    :cond_6
    iput-byte v3, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 3573
    nop

    .line 3581
    :goto_2
    iget v5, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v5, v3

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3588
    .end local v6    # "stateInt":I
    goto :goto_3

    .line 3589
    :cond_7
    and-int v5, v0, v8

    iget v6, p2, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/2addr v6, v7

    or-int/2addr v5, v6

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3592
    :goto_3
    const/high16 v5, 0x200000

    and-int/2addr v5, v0

    if-eqz v5, :cond_8

    .line 3593
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 3598
    :cond_8
    const/high16 v5, 0x400000

    and-int/2addr v5, v0

    const/4 v6, 0x0

    const v7, 0xffff

    if-eqz v5, :cond_b

    .line 3599
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 3600
    .local v5, "indexes":I
    and-int v8, v5, v7

    .line 3601
    .local v8, "wakeLockIndex":I
    shr-int/lit8 v9, v5, 0x10

    and-int/2addr v9, v7

    .line 3602
    .local v9, "wakeReasonIndex":I
    if-eq v8, v7, :cond_9

    .line 3603
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3604
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {p0, v8, v10}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    goto :goto_4

    .line 3608
    :cond_9
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3610
    :goto_4
    if-eq v9, v7, :cond_a

    .line 3611
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3612
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {p0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    goto :goto_5

    .line 3616
    :cond_a
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3618
    :goto_5
    iget v10, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v10, v3

    iput v10, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3619
    .end local v5    # "indexes":I
    .end local v8    # "wakeLockIndex":I
    .end local v9    # "wakeReasonIndex":I
    goto :goto_6

    .line 3620
    :cond_b
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3621
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3624
    :goto_6
    const/high16 v5, 0x800000

    and-int/2addr v5, v0

    if-eqz v5, :cond_c

    .line 3625
    iget-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3626
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 3627
    .local v2, "codeAndIndex":I
    and-int v5, v2, v7

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3628
    shr-int/lit8 v5, v2, 0x10

    and-int/2addr v5, v7

    .line 3629
    .local v5, "index":I
    iget-object v7, p2, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {p0, v5, v7}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    .line 3630
    iget v7, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v7, v3

    iput v7, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3634
    .end local v2    # "codeAndIndex":I
    .end local v5    # "index":I
    goto :goto_7

    .line 3635
    :cond_c
    iput v2, p2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3638
    :goto_7
    and-int/lit8 v2, v4, 0x1

    if-eqz v2, :cond_d

    .line 3639
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iput-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3640
    iget-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-virtual {v2, p1}, Landroid/os/BatteryStats$HistoryStepDetails;->readFromParcel(Landroid/os/Parcel;)V

    goto :goto_8

    .line 3642
    :cond_d
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3645
    :goto_8
    const/high16 v2, 0x1000000

    and-int/2addr v2, v0

    if-eqz v2, :cond_e

    .line 3646
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    iput v2, p2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 3648
    :cond_e
    invoke-virtual {p1}, Landroid/os/Parcel;->readDouble()D

    move-result-wide v2

    iput-wide v2, p2, Landroid/os/BatteryStats$HistoryItem;->modemRailChargeMah:D

    .line 3649
    invoke-virtual {p1}, Landroid/os/Parcel;->readDouble()D

    move-result-wide v2

    iput-wide v2, p2, Landroid/os/BatteryStats$HistoryItem;->wifiRailChargeMah:D

    .line 3650
    return-void
.end method

.method public greylist-max-o readKernelUidCpuActiveTimesLocked(Z)V
    .locals 6
    .param p1, "onBattery"    # Z

    .line 12348
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 12349
    .local v0, "startTimeMs":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    new-instance v3, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$_l2oiaRDRhjCXI_PwXPsAhrgegI;

    invoke-direct {v3, p0, p1}, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$_l2oiaRDRhjCXI_PwXPsAhrgegI;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Z)V

    invoke-virtual {v2, v3}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 12365
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    sub-long/2addr v2, v0

    .line 12366
    .local v2, "elapsedTimeMs":J
    const-wide/16 v4, 0x64

    cmp-long v4, v2, v4

    if-ltz v4, :cond_0

    .line 12367
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Reading cpu active times took "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v5, "ms"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "BatteryStatsImpl"

    invoke-static {v5, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12369
    :cond_0
    return-void
.end method

.method public greylist-max-o readKernelUidCpuClusterTimesLocked(Z)V
    .locals 6
    .param p1, "onBattery"    # Z

    .line 12377
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 12378
    .local v0, "startTimeMs":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    new-instance v3, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$Xvt9xdVPtevMWGIjcbxXf0_mr_c;

    invoke-direct {v3, p0, p1}, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$Xvt9xdVPtevMWGIjcbxXf0_mr_c;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Z)V

    invoke-virtual {v2, v3}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 12394
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    sub-long/2addr v2, v0

    .line 12395
    .local v2, "elapsedTimeMs":J
    const-wide/16 v4, 0x64

    cmp-long v4, v2, v4

    if-ltz v4, :cond_0

    .line 12396
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Reading cpu cluster times took "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v5, "ms"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "BatteryStatsImpl"

    invoke-static {v5, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12398
    :cond_0
    return-void
.end method

.method public greylist-max-o readKernelUidCpuFreqTimesLocked(Ljava/util/ArrayList;ZZ)V
    .locals 21
    .param p2, "onBattery"    # Z
    .param p3, "onBatteryScreenOff"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;ZZ)V"
        }
    .end annotation

    .line 12230
    .local p1, "partialTimers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;>;"
    move-object/from16 v7, p0

    move-object/from16 v8, p1

    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    .line 12231
    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->perClusterTimesAvailable()Z

    move-result v9

    .line 12232
    .local v9, "perClusterTimesAvailable":Z
    if-nez v8, :cond_0

    const/4 v0, 0x0

    goto :goto_0

    :cond_0
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v0

    :goto_0
    move v10, v0

    .line 12233
    .local v10, "numWakelocks":I
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v11

    .line 12234
    .local v11, "numClusters":I
    const/4 v0, 0x0

    iput-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    .line 12235
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v12

    .line 12236
    .local v12, "startTimeMs":J
    iget-object v14, v7, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    new-instance v15, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$B-TmZhQb712ePnuJTxvMe7P-YwQ;

    move-object v0, v15

    move-object/from16 v1, p0

    move/from16 v2, p2

    move/from16 v3, p3

    move v4, v9

    move v5, v11

    move v6, v10

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$B-TmZhQb712ePnuJTxvMe7P-YwQ;-><init>(Lcom/android/internal/os/BatteryStatsImpl;ZZZII)V

    invoke-virtual {v14, v15}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 12305
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    sub-long/2addr v0, v12

    .line 12306
    .local v0, "elapsedTimeMs":J
    const-wide/16 v2, 0x64

    cmp-long v2, v0, v2

    if-ltz v2, :cond_1

    .line 12307
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Reading cpu freq times took "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v3, "ms"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "BatteryStatsImpl"

    invoke-static {v3, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12310
    :cond_1
    iget-object v2, v7, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    if-eqz v2, :cond_a

    .line 12311
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v10, :cond_9

    .line 12312
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v3, v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 12313
    .local v3, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v4, :cond_2

    iget-object v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v4, v4

    if-eq v4, v11, :cond_3

    .line 12315
    :cond_2
    iget-object v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-static {v4}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 12316
    new-array v4, v11, [[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 12319
    :cond_3
    const/4 v4, 0x0

    .local v4, "cluster":I
    :goto_2
    if-ge v4, v11, :cond_8

    .line 12320
    iget-object v5, v7, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v5, v4}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v5

    .line 12321
    .local v5, "speedsInCluster":I
    iget-object v6, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    if-eqz v6, :cond_4

    iget-object v6, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    array-length v6, v6

    if-eq v6, v5, :cond_5

    .line 12323
    :cond_4
    iget-object v6, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    invoke-static {v6}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 12324
    iget-object v6, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-array v14, v5, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aput-object v14, v6, v4

    .line 12327
    :cond_5
    iget-object v6, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    .line 12328
    .local v6, "cpuTimeUs":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    const/4 v14, 0x0

    .local v14, "speed":I
    :goto_3
    if-ge v14, v5, :cond_7

    .line 12329
    aget-object v15, v6, v14

    if-nez v15, :cond_6

    .line 12330
    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-wide/from16 v16, v0

    .end local v0    # "elapsedTimeMs":J
    .local v16, "elapsedTimeMs":J
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v15, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v15, v6, v14

    goto :goto_4

    .line 12329
    .end local v16    # "elapsedTimeMs":J
    .restart local v0    # "elapsedTimeMs":J
    :cond_6
    move-wide/from16 v16, v0

    .line 12332
    .end local v0    # "elapsedTimeMs":J
    .restart local v16    # "elapsedTimeMs":J
    :goto_4
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v0, v0, v4

    aget-wide v0, v0, v14

    sub-int v15, v10, v2

    move/from16 v18, v9

    .end local v9    # "perClusterTimesAvailable":Z
    .local v18, "perClusterTimesAvailable":Z
    int-to-long v8, v15

    div-long/2addr v0, v8

    .line 12334
    .local v0, "allocationUs":J
    aget-object v8, v6, v14

    move/from16 v9, p2

    invoke-virtual {v8, v0, v1, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12335
    iget-object v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v8, v8, v4

    aget-wide v19, v8, v14

    sub-long v19, v19, v0

    aput-wide v19, v8, v14

    .line 12328
    .end local v0    # "allocationUs":J
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v8, p1

    move-wide/from16 v0, v16

    move/from16 v9, v18

    goto :goto_3

    .end local v16    # "elapsedTimeMs":J
    .end local v18    # "perClusterTimesAvailable":Z
    .local v0, "elapsedTimeMs":J
    .restart local v9    # "perClusterTimesAvailable":Z
    :cond_7
    move-wide/from16 v16, v0

    move/from16 v18, v9

    move/from16 v9, p2

    .line 12319
    .end local v0    # "elapsedTimeMs":J
    .end local v5    # "speedsInCluster":I
    .end local v6    # "cpuTimeUs":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    .end local v9    # "perClusterTimesAvailable":Z
    .end local v14    # "speed":I
    .restart local v16    # "elapsedTimeMs":J
    .restart local v18    # "perClusterTimesAvailable":Z
    add-int/lit8 v4, v4, 0x1

    move-object/from16 v8, p1

    move/from16 v9, v18

    goto :goto_2

    .end local v16    # "elapsedTimeMs":J
    .end local v18    # "perClusterTimesAvailable":Z
    .restart local v0    # "elapsedTimeMs":J
    .restart local v9    # "perClusterTimesAvailable":Z
    :cond_8
    move-wide/from16 v16, v0

    move/from16 v18, v9

    move/from16 v9, p2

    .line 12311
    .end local v0    # "elapsedTimeMs":J
    .end local v3    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v4    # "cluster":I
    .end local v9    # "perClusterTimesAvailable":Z
    .restart local v16    # "elapsedTimeMs":J
    .restart local v18    # "perClusterTimesAvailable":Z
    add-int/lit8 v2, v2, 0x1

    move-object/from16 v8, p1

    move/from16 v9, v18

    goto/16 :goto_1

    .end local v16    # "elapsedTimeMs":J
    .end local v18    # "perClusterTimesAvailable":Z
    .restart local v0    # "elapsedTimeMs":J
    .restart local v9    # "perClusterTimesAvailable":Z
    :cond_9
    move-wide/from16 v16, v0

    move/from16 v18, v9

    move/from16 v9, p2

    .end local v0    # "elapsedTimeMs":J
    .end local v9    # "perClusterTimesAvailable":Z
    .restart local v16    # "elapsedTimeMs":J
    .restart local v18    # "perClusterTimesAvailable":Z
    goto :goto_5

    .line 12310
    .end local v2    # "i":I
    .end local v16    # "elapsedTimeMs":J
    .end local v18    # "perClusterTimesAvailable":Z
    .restart local v0    # "elapsedTimeMs":J
    .restart local v9    # "perClusterTimesAvailable":Z
    :cond_a
    move-wide/from16 v16, v0

    move/from16 v18, v9

    move/from16 v9, p2

    .line 12340
    .end local v0    # "elapsedTimeMs":J
    .end local v9    # "perClusterTimesAvailable":Z
    .restart local v16    # "elapsedTimeMs":J
    .restart local v18    # "perClusterTimesAvailable":Z
    :goto_5
    return-void
.end method

.method public greylist-max-o readKernelUidCpuTimesLocked(Ljava/util/ArrayList;Landroid/util/SparseLongArray;Z)V
    .locals 18
    .param p2, "updatedUids"    # Landroid/util/SparseLongArray;
    .param p3, "onBattery"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;",
            "Landroid/util/SparseLongArray;",
            "Z)V"
        }
    .end annotation

    .line 12120
    .local p1, "partialTimers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;>;"
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    const-wide/16 v4, 0x0

    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12121
    if-nez v1, :cond_0

    const/4 v6, 0x0

    goto :goto_0

    :cond_0
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v6

    .line 12122
    .local v6, "numWakelocks":I
    :goto_0
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v7}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v7

    .line 12124
    .local v7, "startTimeMs":J
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    new-instance v10, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$7bfIWpn8X2h-hSzLD6dcuK4Ljuw;

    invoke-direct {v10, v0, v6, v3, v2}, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$7bfIWpn8X2h-hSzLD6dcuK4Ljuw;-><init>(Lcom/android/internal/os/BatteryStatsImpl;IZLandroid/util/SparseLongArray;)V

    invoke-virtual {v9, v10}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 12179
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v9}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v9

    sub-long/2addr v9, v7

    .line 12180
    .local v9, "elapsedTimeMs":J
    const-wide/16 v11, 0x64

    cmp-long v13, v9, v11

    if-ltz v13, :cond_1

    .line 12181
    new-instance v13, Ljava/lang/StringBuilder;

    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    const-string v14, "Reading cpu stats took "

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v13, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v14, "ms"

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    const-string v14, "BatteryStatsImpl"

    invoke-static {v14, v13}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12184
    :cond_1
    if-lez v6, :cond_4

    .line 12186
    iget-wide v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    const-wide/16 v15, 0x32

    mul-long/2addr v13, v15

    div-long/2addr v13, v11

    iput-wide v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12187
    iget-wide v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    mul-long/2addr v13, v15

    div-long/2addr v13, v11

    iput-wide v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    .line 12190
    const/4 v11, 0x0

    .local v11, "i":I
    :goto_1
    if-ge v11, v6, :cond_3

    .line 12191
    invoke-virtual {v1, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 12192
    .local v12, "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    iget-wide v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    sub-int v15, v6, v11

    int-to-long v4, v15

    div-long/2addr v13, v4

    long-to-int v4, v13

    .line 12193
    .local v4, "userTimeUs":I
    iget-wide v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    sub-int v5, v6, v11

    move v15, v6

    .end local v6    # "numWakelocks":I
    .local v15, "numWakelocks":I
    int-to-long v5, v5

    div-long/2addr v13, v5

    long-to-int v5, v13

    .line 12205
    .local v5, "systemTimeUs":I
    iget-object v6, v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    iget-object v6, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    int-to-long v13, v4

    invoke-virtual {v6, v13, v14, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12206
    iget-object v6, v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    iget-object v6, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    int-to-long v13, v5

    invoke-virtual {v6, v13, v14, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12207
    if-eqz v2, :cond_2

    .line 12208
    iget-object v6, v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUid()I

    move-result v6

    .line 12209
    .local v6, "uid":I
    const-wide/16 v13, 0x0

    invoke-virtual {v2, v6, v13, v14}, Landroid/util/SparseLongArray;->get(IJ)J

    move-result-wide v16

    int-to-long v13, v4

    add-long v16, v16, v13

    int-to-long v13, v5

    add-long v13, v16, v13

    invoke-virtual {v2, v6, v13, v14}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 12212
    .end local v6    # "uid":I
    :cond_2
    iget-object v6, v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    const-string v13, "*wakelock*"

    invoke-virtual {v6, v13}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v6

    .line 12213
    .local v6, "proc":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    div-int/lit16 v13, v4, 0x3e8

    div-int/lit16 v14, v5, 0x3e8

    invoke-virtual {v6, v13, v14, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(IIZ)V

    .line 12215
    iget-wide v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    int-to-long v1, v4

    sub-long/2addr v13, v1

    iput-wide v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12216
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    int-to-long v13, v5

    sub-long/2addr v1, v13

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    .line 12190
    .end local v4    # "userTimeUs":I
    .end local v5    # "systemTimeUs":I
    .end local v6    # "proc":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v12    # "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    add-int/lit8 v11, v11, 0x1

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move v6, v15

    const-wide/16 v4, 0x0

    goto :goto_1

    .end local v15    # "numWakelocks":I
    .local v6, "numWakelocks":I
    :cond_3
    move v15, v6

    .end local v6    # "numWakelocks":I
    .restart local v15    # "numWakelocks":I
    goto :goto_2

    .line 12184
    .end local v11    # "i":I
    .end local v15    # "numWakelocks":I
    .restart local v6    # "numWakelocks":I
    :cond_4
    move v15, v6

    .line 12219
    .end local v6    # "numWakelocks":I
    .restart local v15    # "numWakelocks":I
    :goto_2
    return-void
.end method

.method public greylist readLocked()V
    .locals 17

    .line 13694
    move-object/from16 v7, p0

    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    if-eqz v0, :cond_0

    .line 13695
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyStatsLocked()V

    .line 13707
    :cond_0
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->getActiveFile()Landroid/util/AtomicFile;

    move-result-object v8

    .line 13715
    .local v8, "activeHistoryFile":Landroid/util/AtomicFile;
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->readThermalRecFile()Z

    move-result v9

    .line 13716
    .local v9, "needReadThermalRecFile":Z
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    const-string v1, "BatteryStatsImpl"

    if-nez v0, :cond_1

    if-nez v9, :cond_1

    .line 13717
    const-string/jumbo v0, "readLocked: no file associated with this instance"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13718
    return-void

    .line 13720
    :cond_1
    if-nez v8, :cond_2

    if-nez v9, :cond_2

    .line 13721
    const-string/jumbo v0, "readLocked: no history file associated with this instance"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13723
    return-void

    .line 13727
    :cond_2
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->clear()V

    .line 13729
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v10

    .line 13731
    .local v10, "stats":Landroid/os/Parcel;
    const/4 v11, 0x0

    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 13732
    .local v2, "start":J
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    invoke-virtual {v0}, Landroid/util/AtomicFile;->exists()Z

    move-result v0

    if-eqz v0, :cond_3

    .line 13733
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    invoke-virtual {v0}, Landroid/util/AtomicFile;->readFully()[B

    move-result-object v0

    .line 13734
    .local v0, "raw":[B
    array-length v4, v0

    invoke-virtual {v10, v0, v11, v4}, Landroid/os/Parcel;->unmarshall([BII)V

    .line 13735
    invoke-virtual {v10, v11}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 13736
    invoke-virtual {v7, v10}, Lcom/android/internal/os/BatteryStatsImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13747
    .end local v0    # "raw":[B
    .end local v2    # "start":J
    :cond_3
    :goto_0
    invoke-virtual {v10}, Landroid/os/Parcel;->recycle()V

    .line 13748
    goto :goto_1

    .line 13747
    :catchall_0
    move-exception v0

    goto/16 :goto_5

    .line 13743
    :catch_0
    move-exception v0

    .line 13744
    .local v0, "e":Ljava/lang/Exception;
    :try_start_1
    const-string v2, "Error reading battery statistics"

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13745
    invoke-direct/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->resetAllStatsLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .end local v0    # "e":Ljava/lang/Exception;
    goto :goto_0

    .line 13750
    :goto_1
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v12

    .line 13752
    .local v12, "history":Landroid/os/Parcel;
    const/4 v2, 0x1

    :try_start_2
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    .line 13753
    .local v3, "start":J
    invoke-virtual {v8}, Landroid/util/AtomicFile;->exists()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 13754
    invoke-virtual {v8}, Landroid/util/AtomicFile;->readFully()[B

    move-result-object v0

    .line 13755
    .local v0, "raw":[B
    array-length v5, v0

    if-lez v5, :cond_4

    .line 13756
    array-length v5, v0

    invoke-virtual {v12, v0, v11, v5}, Landroid/os/Parcel;->unmarshall([BII)V

    .line 13757
    invoke-virtual {v12, v11}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 13758
    invoke-virtual {v7, v12, v2}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryBuffer(Landroid/os/Parcel;Z)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 13772
    .end local v0    # "raw":[B
    .end local v3    # "start":J
    :cond_4
    :goto_2
    invoke-virtual {v12}, Landroid/os/Parcel;->recycle()V

    .line 13773
    goto :goto_3

    .line 13772
    :catchall_1
    move-exception v0

    goto :goto_4

    .line 13767
    :catch_1
    move-exception v0

    .line 13768
    .local v0, "e":Ljava/lang/Exception;
    :try_start_3
    const-string v3, "Error reading battery history"

    invoke-static {v1, v3, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13769
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    .line 13770
    iget-object v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsHistory;->resetAllFiles()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .end local v0    # "e":Ljava/lang/Exception;
    goto :goto_2

    .line 13775
    :goto_3
    sget-object v0, Landroid/os/Build;->ID:Ljava/lang/String;

    iput-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    .line 13777
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataPosition()I

    move-result v0

    if-gtz v0, :cond_5

    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    .line 13778
    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->getFilesNumbers()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    if-le v0, v2, :cond_6

    .line 13779
    :cond_5
    iput-boolean v2, v7, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 13780
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v13

    .line 13781
    .local v13, "elapsedRealtime":J
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v15

    .line 13785
    .local v15, "uptime":J
    const/4 v0, 0x4

    iget-object v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v7, v13, v14, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 13786
    const/4 v6, 0x0

    move-object/from16 v1, p0

    move-wide v2, v13

    move-wide v4, v15

    invoke-direct/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    .line 13789
    .end local v13    # "elapsedRealtime":J
    .end local v15    # "uptime":J
    :cond_6
    invoke-virtual {v7, v11}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(Z)V

    .line 13790
    return-void

    .line 13772
    :goto_4
    invoke-virtual {v12}, Landroid/os/Parcel;->recycle()V

    .line 13773
    throw v0

    .line 13747
    .end local v12    # "history":Landroid/os/Parcel;
    :goto_5
    invoke-virtual {v10}, Landroid/os/Parcel;->recycle()V

    .line 13748
    throw v0
.end method

.method greylist-max-o readOldHistory(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "in"    # Landroid/os/Parcel;

    .line 13858
    return-void
.end method

.method public greylist-max-o readSummaryFromParcel(Landroid/os/Parcel;)V
    .locals 29
    .param p1, "in"    # Landroid/os/Parcel;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/ParcelFormatException;
        }
    .end annotation

    .line 13907
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 13908
    .local v2, "version":I
    const/16 v3, 0xba

    if-eq v2, v3, :cond_0

    .line 13909
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "readFromParcel: version got "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, ", expected "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, "; erasing old stats"

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "BatteryStats"

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13911
    return-void

    .line 13914
    :cond_0
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readBoolean()Z

    move-result v3

    .line 13915
    .local v3, "inclHistory":Z
    const/4 v4, 0x1

    if-eqz v3, :cond_1

    .line 13916
    invoke-virtual {v0, v1, v4}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryBuffer(Landroid/os/Parcel;Z)V

    .line 13917
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v5, v1}, Lcom/android/internal/os/BatteryStatsHistory;->readFromParcel(Landroid/os/Parcel;)V

    .line 13920
    :cond_1
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 13921
    const/4 v5, 0x0

    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 13922
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 13924
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 13925
    .local v6, "numTags":I
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_0
    if-ge v7, v6, :cond_4

    .line 13926
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v8

    .line 13927
    .local v8, "idx":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v9

    .line 13928
    .local v9, "str":Ljava/lang/String;
    if-eqz v9, :cond_3

    .line 13931
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    .line 13932
    .local v10, "uid":I
    new-instance v11, Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v11}, Landroid/os/BatteryStats$HistoryTag;-><init>()V

    .line 13933
    .local v11, "tag":Landroid/os/BatteryStats$HistoryTag;
    iput-object v9, v11, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 13934
    iput v10, v11, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 13935
    iput v8, v11, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    .line 13936
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    invoke-virtual {v12, v11, v13}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13937
    iget v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    if-lt v8, v12, :cond_2

    .line 13938
    add-int/lit8 v12, v8, 0x1

    iput v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 13940
    :cond_2
    iget v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    iget-object v13, v11, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {v13}, Ljava/lang/String;->length()I

    move-result v13

    add-int/2addr v13, v4

    add-int/2addr v12, v13

    iput v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 13925
    .end local v8    # "idx":I
    .end local v9    # "str":Ljava/lang/String;
    .end local v10    # "uid":I
    .end local v11    # "tag":Landroid/os/BatteryStats$HistoryTag;
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 13929
    .restart local v8    # "idx":I
    .restart local v9    # "str":Ljava/lang/String;
    :cond_3
    new-instance v4, Landroid/os/ParcelFormatException;

    const-string/jumbo v5, "null history tag string"

    invoke-direct {v4, v5}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 13943
    .end local v7    # "i":I
    .end local v8    # "idx":I
    .end local v9    # "str":Ljava/lang/String;
    :cond_4
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    .line 13944
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v7

    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    .line 13945
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v7

    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    .line 13946
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v7

    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    .line 13947
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v7

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    .line 13948
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v7

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    .line 13949
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13950
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13951
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    .line 13952
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    .line 13953
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 13954
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 13955
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 13956
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 13957
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 13958
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 13959
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 13960
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 13961
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 13962
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 13963
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v7, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13964
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v7, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13965
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v7, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13966
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v7, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13967
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13968
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13969
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13970
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13971
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13972
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    .line 13973
    .local v7, "NPKG":I
    const/4 v8, 0x0

    if-lez v7, :cond_6

    .line 13974
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9, v7}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 13975
    :goto_1
    if-lez v7, :cond_7

    .line 13976
    add-int/lit8 v7, v7, -0x1

    .line 13977
    new-instance v9, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v9}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 13978
    .local v9, "pc":Landroid/os/BatteryStats$PackageChange;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v10

    iput-object v10, v9, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 13979
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_5

    move v10, v4

    goto :goto_2

    :cond_5
    move v10, v5

    :goto_2
    iput-boolean v10, v9, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 13980
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v10

    iput-wide v10, v9, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    .line 13981
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 13982
    .end local v9    # "pc":Landroid/os/BatteryStats$PackageChange;
    goto :goto_1

    .line 13984
    :cond_6
    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 13986
    :cond_7
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v9

    iput-wide v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    .line 13987
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v9

    iput-wide v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 13988
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v9

    iput-wide v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 13990
    iget v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    add-int/2addr v9, v4

    iput v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    .line 13992
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 13993
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13994
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13995
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_3
    const/4 v10, 0x5

    if-ge v9, v10, :cond_8

    .line 13996
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v10, v10, v9

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13995
    add-int/lit8 v9, v9, 0x1

    goto :goto_3

    .line 13998
    .end local v9    # "i":I
    :cond_8
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    .line 13999
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14000
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    .line 14001
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14002
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v11

    iput-wide v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    .line 14003
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v11

    iput-wide v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    .line 14004
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14005
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14006
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14007
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14008
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14009
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_4
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v11

    if-ge v9, v11, :cond_9

    .line 14010
    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v9

    invoke-virtual {v11, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14009
    add-int/lit8 v9, v9, 0x1

    goto :goto_4

    .line 14012
    .end local v9    # "i":I
    :cond_9
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14013
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_5
    sget v11, Lcom/android/internal/os/BatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v9, v11, :cond_a

    .line 14014
    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v9

    invoke-virtual {v11, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14013
    add-int/lit8 v9, v9, 0x1

    goto :goto_5

    .line 14016
    .end local v9    # "i":I
    :cond_a
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_6
    const/16 v11, 0xa

    if-ge v9, v11, :cond_b

    .line 14017
    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v11, v11, v9

    invoke-virtual {v11, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14018
    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v11, v11, v9

    invoke-virtual {v11, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14016
    add-int/lit8 v9, v9, 0x1

    goto :goto_6

    .line 14020
    .end local v9    # "i":I
    :cond_b
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 14021
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14022
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14023
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14024
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14025
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14026
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14027
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 14028
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    .line 14029
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14030
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 14031
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14032
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_7
    const/16 v12, 0x8

    if-ge v9, v12, :cond_c

    .line 14033
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v12, v12, v9

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14032
    add-int/lit8 v9, v9, 0x1

    goto :goto_7

    .line 14035
    .end local v9    # "i":I
    :cond_c
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_8
    const/16 v12, 0xd

    if-ge v9, v12, :cond_d

    .line 14036
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v12, v12, v9

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14035
    add-int/lit8 v9, v9, 0x1

    goto :goto_8

    .line 14038
    .end local v9    # "i":I
    :cond_d
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_9
    if-ge v9, v10, :cond_e

    .line 14039
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v12, v12, v9

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14038
    add-int/lit8 v9, v9, 0x1

    goto :goto_9

    .line 14041
    .end local v9    # "i":I
    :cond_e
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14042
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 14043
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_a
    const/4 v12, 0x2

    if-ge v9, v12, :cond_f

    .line 14044
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v12, v12, v9

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14043
    add-int/lit8 v9, v9, 0x1

    goto :goto_a

    .line 14046
    .end local v9    # "i":I
    :cond_f
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 14047
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 14048
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    if-eqz v9, :cond_10

    move v9, v4

    goto :goto_b

    :cond_10
    move v9, v5

    :goto_b
    iput-boolean v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 14049
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    if-eqz v9, :cond_11

    move v9, v4

    goto :goto_c

    :cond_11
    move v9, v5

    :goto_c
    iput-boolean v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 14050
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    if-eqz v9, :cond_12

    move v9, v4

    goto :goto_d

    :cond_12
    move v9, v5

    :goto_d
    iput-boolean v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 14052
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    iput v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    .line 14053
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    .line 14054
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14055
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    .line 14056
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14057
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    .line 14058
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14060
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    .line 14061
    .local v9, "NRPMS":I
    const/16 v12, 0x2710

    if-gt v9, v12, :cond_5d

    .line 14064
    const/4 v13, 0x0

    .local v13, "irpm":I
    :goto_e
    if-ge v13, v9, :cond_14

    .line 14065
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v14

    if-eqz v14, :cond_13

    .line 14066
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v14

    .line 14067
    .local v14, "rpmName":Ljava/lang/String;
    invoke-virtual {v0, v14}, Lcom/android/internal/os/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v15

    invoke-virtual {v15, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14064
    .end local v14    # "rpmName":Ljava/lang/String;
    :cond_13
    add-int/lit8 v13, v13, 0x1

    goto :goto_e

    .line 14070
    .end local v13    # "irpm":I
    :cond_14
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v13

    .line 14071
    .local v13, "NSORPMS":I
    if-gt v13, v12, :cond_5c

    .line 14074
    const/4 v14, 0x0

    .local v14, "irpm":I
    :goto_f
    if-ge v14, v13, :cond_16

    .line 14075
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v15

    if-eqz v15, :cond_15

    .line 14076
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v15

    .line 14077
    .local v15, "rpmName":Ljava/lang/String;
    invoke-virtual {v0, v15}, Lcom/android/internal/os/BatteryStatsImpl;->getScreenOffRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v4

    invoke-virtual {v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14074
    .end local v15    # "rpmName":Ljava/lang/String;
    :cond_15
    add-int/lit8 v14, v14, 0x1

    const/4 v4, 0x1

    goto :goto_f

    .line 14081
    .end local v14    # "irpm":I
    :cond_16
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 14082
    .local v4, "NKW":I
    if-gt v4, v12, :cond_5b

    .line 14085
    const/4 v14, 0x0

    .local v14, "ikw":I
    :goto_10
    if-ge v14, v4, :cond_18

    .line 14086
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v15

    if-eqz v15, :cond_17

    .line 14087
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v15

    .line 14088
    .local v15, "kwltName":Ljava/lang/String;
    invoke-virtual {v0, v15}, Lcom/android/internal/os/BatteryStatsImpl;->getKernelWakelockTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v11

    invoke-virtual {v11, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14085
    .end local v15    # "kwltName":Ljava/lang/String;
    :cond_17
    add-int/lit8 v14, v14, 0x1

    const/16 v11, 0xa

    goto :goto_10

    .line 14092
    .end local v14    # "ikw":I
    :cond_18
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v11

    .line 14093
    .local v11, "NWR":I
    if-gt v11, v12, :cond_5a

    .line 14096
    const/4 v14, 0x0

    .local v14, "iwr":I
    :goto_11
    if-ge v14, v11, :cond_1a

    .line 14097
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v15

    if-eqz v15, :cond_19

    .line 14098
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v15

    .line 14099
    .local v15, "reasonName":Ljava/lang/String;
    invoke-virtual {v0, v15}, Lcom/android/internal/os/BatteryStatsImpl;->getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v8

    invoke-virtual {v8, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14096
    .end local v15    # "reasonName":Ljava/lang/String;
    :cond_19
    add-int/lit8 v14, v14, 0x1

    const/4 v8, 0x0

    goto :goto_11

    .line 14103
    .end local v14    # "iwr":I
    :cond_1a
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v8

    .line 14104
    .local v8, "NMS":I
    const/4 v14, 0x0

    .local v14, "ims":I
    :goto_12
    if-ge v14, v8, :cond_1c

    .line 14105
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v15

    if-eqz v15, :cond_1b

    .line 14106
    move/from16 v17, v11

    .end local v11    # "NWR":I
    .local v17, "NWR":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v10

    .line 14107
    .local v10, "kmstName":J
    invoke-virtual {v0, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->getKernelMemoryTimerLocked(J)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v15

    invoke-virtual {v15, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_13

    .line 14105
    .end local v10    # "kmstName":J
    .end local v17    # "NWR":I
    .restart local v11    # "NWR":I
    :cond_1b
    move/from16 v17, v11

    .line 14104
    .end local v11    # "NWR":I
    .restart local v17    # "NWR":I
    :goto_13
    add-int/lit8 v14, v14, 0x1

    move/from16 v11, v17

    const/4 v10, 0x5

    goto :goto_12

    .end local v17    # "NWR":I
    .restart local v11    # "NWR":I
    :cond_1c
    move/from16 v17, v11

    .line 14111
    .end local v11    # "NWR":I
    .end local v14    # "ims":I
    .restart local v17    # "NWR":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    .line 14112
    .local v10, "NU":I
    if-gt v10, v12, :cond_59

    .line 14115
    const/4 v11, 0x0

    .local v11, "iu":I
    :goto_14
    if-ge v11, v10, :cond_58

    .line 14116
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v14

    .line 14117
    .local v14, "uid":I
    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-direct {v15, v0, v14}, Lcom/android/internal/os/BatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/BatteryStatsImpl;I)V

    .line 14118
    .local v15, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v14, v15}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 14120
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mOnBatteryBackgroundTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 14121
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mOnBatteryScreenOffBackgroundTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 14123
    iput-boolean v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunning:Z

    .line 14124
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_1d

    .line 14125
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14127
    :cond_1d
    iput-boolean v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockOut:Z

    .line 14128
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_1e

    .line 14129
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14131
    :cond_1e
    iput-boolean v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanStarted:Z

    .line 14132
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_1f

    .line 14133
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14135
    :cond_1f
    const/4 v12, -0x1

    iput v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanBinStarted:I

    .line 14136
    const/4 v12, 0x0

    .local v12, "i":I
    :goto_15
    const/4 v5, 0x5

    if-ge v12, v5, :cond_21

    .line 14137
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v18

    if-eqz v18, :cond_20

    .line 14138
    const/4 v5, 0x0

    invoke-virtual {v15, v12, v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->makeWifiBatchedScanBin(ILandroid/os/Parcel;)V

    .line 14139
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v12

    invoke-virtual {v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14136
    :cond_20
    add-int/lit8 v12, v12, 0x1

    const/4 v5, 0x0

    goto :goto_15

    .line 14142
    .end local v12    # "i":I
    :cond_21
    const/4 v5, 0x0

    iput v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastWakelockCount:I

    .line 14143
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_22

    .line 14144
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14146
    :cond_22
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_23

    .line 14147
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createAudioTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14149
    :cond_23
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_24

    .line 14150
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createVideoTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14152
    :cond_24
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_25

    .line 14153
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createFlashlightTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14155
    :cond_25
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_26

    .line 14156
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createCameraTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14160
    :cond_26
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_27

    .line 14161
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createForegroundActivityTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14163
    :cond_27
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_28

    .line 14164
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createForegroundServiceTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14166
    :cond_28
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_29

    .line 14167
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createAggregatedPartialWakelockTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14169
    :cond_29
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_2a

    .line 14170
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createBluetoothScanTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14172
    :cond_2a
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_2b

    .line 14173
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createBluetoothUnoptimizedScanTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14175
    :cond_2b
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_2c

    .line 14176
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createBluetoothScanResultCounterLocked()Lcom/android/internal/os/BatteryStatsImpl$Counter;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14178
    :cond_2c
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_2d

    .line 14179
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createBluetoothScanResultBgCounterLocked()Lcom/android/internal/os/BatteryStatsImpl$Counter;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14181
    :cond_2d
    const/16 v12, 0x14

    iput v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessState:I

    .line 14182
    const/4 v12, 0x0

    .restart local v12    # "i":I
    :goto_16
    const/4 v5, 0x7

    if-ge v12, v5, :cond_2f

    .line 14183
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-eqz v5, :cond_2e

    .line 14184
    const/4 v5, 0x0

    invoke-virtual {v15, v12, v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->makeProcessState(ILandroid/os/Parcel;)V

    .line 14185
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v12

    invoke-virtual {v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14182
    :cond_2e
    add-int/lit8 v12, v12, 0x1

    const/4 v5, 0x0

    goto :goto_16

    .line 14190
    .end local v12    # "i":I
    :cond_2f
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_30

    .line 14191
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createVibratorOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;

    move-result-object v12

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14194
    :cond_30
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_32

    .line 14195
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    if-nez v12, :cond_31

    .line 14196
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->initUserActivityLocked()V

    .line 14198
    :cond_31
    const/4 v12, 0x0

    .restart local v12    # "i":I
    :goto_17
    sget v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;->NUM_USER_ACTIVITY_TYPES:I

    if-ge v12, v5, :cond_32

    .line 14199
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    aget-object v5, v5, v12

    invoke-virtual {v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14198
    add-int/lit8 v12, v12, 0x1

    const/4 v5, 0x7

    goto :goto_17

    .line 14203
    .end local v12    # "i":I
    :cond_32
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-eqz v5, :cond_35

    .line 14204
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-nez v5, :cond_33

    .line 14205
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->initNetworkActivityLocked()V

    .line 14207
    :cond_33
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_18
    const/16 v12, 0xa

    if-ge v5, v12, :cond_34

    .line 14208
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v12, v12, v5

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14209
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v12, v12, v5

    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14207
    add-int/lit8 v5, v5, 0x1

    goto :goto_18

    .line 14211
    .end local v5    # "i":I
    :cond_34
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14212
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14215
    :cond_35
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14216
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14218
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-eqz v5, :cond_3e

    .line 14219
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 14220
    .local v5, "numClusters":I
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-eqz v12, :cond_37

    invoke-virtual {v12}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v12

    if-ne v12, v5, :cond_36

    move/from16 v20, v2

    goto :goto_19

    .line 14221
    :cond_36
    new-instance v12, Landroid/os/ParcelFormatException;

    move/from16 v20, v2

    .end local v2    # "version":I
    .local v20, "version":I
    const-string v2, "Incompatible cpu cluster arrangement"

    invoke-direct {v12, v2}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v12

    .line 14220
    .end local v20    # "version":I
    .restart local v2    # "version":I
    :cond_37
    move/from16 v20, v2

    .line 14223
    .end local v2    # "version":I
    .restart local v20    # "version":I
    :goto_19
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-static {v2}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14224
    new-array v2, v5, [[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14225
    const/4 v2, 0x0

    .local v2, "cluster":I
    :goto_1a
    if-ge v2, v5, :cond_3d

    .line 14226
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_3c

    .line 14227
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    .line 14228
    .local v12, "NSB":I
    move/from16 v21, v3

    .end local v3    # "inclHistory":Z
    .local v21, "inclHistory":Z
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-eqz v3, :cond_39

    .line 14229
    invoke-virtual {v3, v2}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v3

    if-ne v3, v12, :cond_38

    move/from16 v22, v5

    move/from16 v23, v6

    goto :goto_1b

    .line 14230
    :cond_38
    new-instance v3, Landroid/os/ParcelFormatException;

    move/from16 v22, v5

    .end local v5    # "numClusters":I
    .local v22, "numClusters":I
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    move/from16 v23, v6

    .end local v6    # "numTags":I
    .local v23, "numTags":I
    const-string v6, "File corrupt: too many speed bins "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v3, v5}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 14228
    .end local v22    # "numClusters":I
    .end local v23    # "numTags":I
    .restart local v5    # "numClusters":I
    .restart local v6    # "numTags":I
    :cond_39
    move/from16 v22, v5

    move/from16 v23, v6

    .line 14234
    .end local v5    # "numClusters":I
    .end local v6    # "numTags":I
    .restart local v22    # "numClusters":I
    .restart local v23    # "numTags":I
    :goto_1b
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-array v5, v12, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aput-object v5, v3, v2

    .line 14235
    const/4 v3, 0x0

    .local v3, "speed":I
    :goto_1c
    if-ge v3, v12, :cond_3b

    .line 14236
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-eqz v5, :cond_3a

    .line 14237
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v5, v5, v2

    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move/from16 v24, v7

    .end local v7    # "NPKG":I
    .local v24, "NPKG":I
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v6, v5, v3

    .line 14239
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v5, v5, v2

    aget-object v5, v5, v3

    invoke-virtual {v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_1d

    .line 14236
    .end local v24    # "NPKG":I
    .restart local v7    # "NPKG":I
    :cond_3a
    move/from16 v24, v7

    .line 14235
    .end local v7    # "NPKG":I
    .restart local v24    # "NPKG":I
    :goto_1d
    add-int/lit8 v3, v3, 0x1

    move/from16 v7, v24

    goto :goto_1c

    .end local v24    # "NPKG":I
    .restart local v7    # "NPKG":I
    :cond_3b
    move/from16 v24, v7

    .line 14242
    .end local v3    # "speed":I
    .end local v7    # "NPKG":I
    .end local v12    # "NSB":I
    .restart local v24    # "NPKG":I
    goto :goto_1e

    .line 14243
    .end local v21    # "inclHistory":Z
    .end local v22    # "numClusters":I
    .end local v23    # "numTags":I
    .end local v24    # "NPKG":I
    .local v3, "inclHistory":Z
    .restart local v5    # "numClusters":I
    .restart local v6    # "numTags":I
    .restart local v7    # "NPKG":I
    :cond_3c
    move/from16 v21, v3

    move/from16 v22, v5

    move/from16 v23, v6

    move/from16 v24, v7

    .end local v3    # "inclHistory":Z
    .end local v5    # "numClusters":I
    .end local v6    # "numTags":I
    .end local v7    # "NPKG":I
    .restart local v21    # "inclHistory":Z
    .restart local v22    # "numClusters":I
    .restart local v23    # "numTags":I
    .restart local v24    # "NPKG":I
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v5, 0x0

    aput-object v5, v3, v2

    .line 14225
    :goto_1e
    add-int/lit8 v2, v2, 0x1

    move/from16 v3, v21

    move/from16 v5, v22

    move/from16 v6, v23

    move/from16 v7, v24

    goto/16 :goto_1a

    .end local v21    # "inclHistory":Z
    .end local v22    # "numClusters":I
    .end local v23    # "numTags":I
    .end local v24    # "NPKG":I
    .restart local v3    # "inclHistory":Z
    .restart local v5    # "numClusters":I
    .restart local v6    # "numTags":I
    .restart local v7    # "NPKG":I
    :cond_3d
    move/from16 v21, v3

    move/from16 v22, v5

    move/from16 v23, v6

    move/from16 v24, v7

    .line 14246
    .end local v2    # "cluster":I
    .end local v3    # "inclHistory":Z
    .end local v5    # "numClusters":I
    .end local v6    # "numTags":I
    .end local v7    # "NPKG":I
    .restart local v21    # "inclHistory":Z
    .restart local v23    # "numTags":I
    .restart local v24    # "NPKG":I
    goto :goto_1f

    .line 14247
    .end local v20    # "version":I
    .end local v21    # "inclHistory":Z
    .end local v23    # "numTags":I
    .end local v24    # "NPKG":I
    .local v2, "version":I
    .restart local v3    # "inclHistory":Z
    .restart local v6    # "numTags":I
    .restart local v7    # "NPKG":I
    :cond_3e
    move/from16 v20, v2

    move/from16 v21, v3

    move/from16 v23, v6

    move/from16 v24, v7

    .end local v2    # "version":I
    .end local v3    # "inclHistory":Z
    .end local v6    # "numTags":I
    .end local v7    # "NPKG":I
    .restart local v20    # "version":I
    .restart local v21    # "inclHistory":Z
    .restart local v23    # "numTags":I
    .restart local v24    # "NPKG":I
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-static {v2}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([[Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14248
    const/4 v2, 0x0

    iput-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14252
    :goto_1f
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v2}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14253
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-static {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v2

    iput-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14255
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v2}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14256
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-static {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v2

    iput-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14259
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14260
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v2, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->access$2300(Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;Landroid/os/Parcel;)V

    .line 14263
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14264
    .local v2, "length":I
    const/4 v3, 0x7

    if-ne v2, v3, :cond_40

    .line 14265
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v3}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14266
    new-array v3, v2, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iput-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14267
    const/4 v3, 0x0

    .local v3, "procState":I
    :goto_20
    if-ge v3, v2, :cond_3f

    .line 14268
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 14269
    invoke-static {v1, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v6

    aput-object v6, v5, v3

    .line 14267
    add-int/lit8 v3, v3, 0x1

    goto :goto_20

    .end local v3    # "procState":I
    :cond_3f
    goto :goto_21

    .line 14273
    :cond_40
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v3}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14274
    const/4 v3, 0x0

    iput-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14276
    :goto_21
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14277
    const/4 v3, 0x7

    if-ne v2, v3, :cond_42

    .line 14278
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v3}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14279
    new-array v3, v2, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iput-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14280
    const/4 v3, 0x0

    .restart local v3    # "procState":I
    :goto_22
    if-ge v3, v2, :cond_41

    .line 14281
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 14282
    invoke-static {v1, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v6

    aput-object v6, v5, v3

    .line 14280
    add-int/lit8 v3, v3, 0x1

    goto :goto_22

    .end local v3    # "procState":I
    :cond_41
    goto :goto_23

    .line 14286
    :cond_42
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v3}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14287
    const/4 v3, 0x0

    iput-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14290
    :goto_23
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    if-eqz v3, :cond_43

    .line 14291
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2400(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-static {v3}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14292
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    invoke-static {v15, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2402(Lcom/android/internal/os/BatteryStatsImpl$Uid;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14293
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2400(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_24

    .line 14295
    :cond_43
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2400(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-static {v3}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14296
    const/4 v3, 0x0

    invoke-static {v15, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2402(Lcom/android/internal/os/BatteryStatsImpl$Uid;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14299
    :goto_24
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    if-eqz v3, :cond_44

    .line 14300
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2500(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-static {v3}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14301
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    invoke-static {v15, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2502(Lcom/android/internal/os/BatteryStatsImpl$Uid;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14302
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2500(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    const/4 v3, 0x0

    goto :goto_25

    .line 14304
    :cond_44
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2500(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-static {v3}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14305
    const/4 v3, 0x0

    invoke-static {v15, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2502(Lcom/android/internal/os/BatteryStatsImpl$Uid;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14308
    :goto_25
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 14309
    .local v5, "NW":I
    sget v6, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    const/4 v7, 0x1

    add-int/2addr v6, v7

    if-gt v5, v6, :cond_57

    .line 14312
    const/4 v6, 0x0

    .local v6, "iw":I
    :goto_26
    if-ge v6, v5, :cond_45

    .line 14313
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v7

    .line 14314
    .local v7, "wlName":Ljava/lang/String;
    invoke-virtual {v15, v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readWakeSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    .line 14312
    .end local v7    # "wlName":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    goto :goto_26

    .line 14317
    .end local v6    # "iw":I
    :cond_45
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 14318
    .local v6, "NS":I
    sget v7, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    const/4 v12, 0x1

    add-int/2addr v7, v12

    if-gt v6, v7, :cond_56

    .line 14321
    const/4 v7, 0x0

    .local v7, "is":I
    :goto_27
    if-ge v7, v6, :cond_46

    .line 14322
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v12

    .line 14323
    .local v12, "name":Ljava/lang/String;
    invoke-virtual {v15, v12, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readSyncSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    .line 14321
    .end local v12    # "name":Ljava/lang/String;
    add-int/lit8 v7, v7, 0x1

    goto :goto_27

    .line 14326
    .end local v7    # "is":I
    :cond_46
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    .line 14327
    .local v7, "NJ":I
    sget v12, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    const/16 v16, 0x1

    add-int/lit8 v12, v12, 0x1

    if-gt v7, v12, :cond_55

    .line 14330
    const/4 v12, 0x0

    .local v12, "ij":I
    :goto_28
    if-ge v12, v7, :cond_47

    .line 14331
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v3

    .line 14332
    .local v3, "name":Ljava/lang/String;
    invoke-virtual {v15, v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readJobSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    .line 14330
    .end local v3    # "name":Ljava/lang/String;
    add-int/lit8 v12, v12, 0x1

    const/4 v3, 0x0

    goto :goto_28

    .line 14335
    .end local v12    # "ij":I
    :cond_47
    invoke-virtual {v15, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readJobCompletionsFromParcelLocked(Landroid/os/Parcel;)V

    .line 14337
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsDeferredEventCount:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14338
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsDeferredCount:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14339
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14340
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-static {v3}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14341
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_29
    sget-object v12, Lcom/android/internal/os/BatteryStatsImpl;->JOB_FRESHNESS_BUCKETS:[J

    array-length v12, v12

    if-ge v3, v12, :cond_49

    .line 14342
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_48

    .line 14343
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    move/from16 v19, v2

    .end local v2    # "length":I
    .local v19, "length":I
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$Counter;

    move/from16 v22, v8

    .end local v8    # "NMS":I
    .local v22, "NMS":I
    iget-object v8, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBsi:Lcom/android/internal/os/BatteryStatsImpl;

    iget-object v8, v8, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$Counter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v2, v12, v3

    .line 14344
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    aget-object v2, v2, v3

    invoke-virtual {v2, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_2a

    .line 14342
    .end local v19    # "length":I
    .end local v22    # "NMS":I
    .restart local v2    # "length":I
    .restart local v8    # "NMS":I
    :cond_48
    move/from16 v19, v2

    move/from16 v22, v8

    .line 14341
    .end local v2    # "length":I
    .end local v8    # "NMS":I
    .restart local v19    # "length":I
    .restart local v22    # "NMS":I
    :goto_2a
    add-int/lit8 v3, v3, 0x1

    move/from16 v2, v19

    move/from16 v8, v22

    goto :goto_29

    .end local v19    # "length":I
    .end local v22    # "NMS":I
    .restart local v2    # "length":I
    .restart local v8    # "NMS":I
    :cond_49
    move/from16 v19, v2

    move/from16 v22, v8

    .line 14348
    .end local v2    # "length":I
    .end local v3    # "i":I
    .end local v8    # "NMS":I
    .restart local v19    # "length":I
    .restart local v22    # "NMS":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14349
    .local v2, "NP":I
    const/16 v3, 0x3e8

    if-gt v2, v3, :cond_54

    .line 14352
    const/4 v8, 0x0

    .local v8, "is":I
    :goto_2b
    if-ge v8, v2, :cond_4b

    .line 14353
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    .line 14354
    .local v12, "seNumber":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v25

    if-eqz v25, :cond_4a

    .line 14355
    move/from16 v16, v14

    const/4 v3, 0x1

    .end local v14    # "uid":I
    .local v16, "uid":I
    invoke-virtual {v15, v12, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getSensorTimerLocked(IZ)Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-result-object v14

    invoke-virtual {v14, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_2c

    .line 14354
    .end local v16    # "uid":I
    .restart local v14    # "uid":I
    :cond_4a
    move/from16 v16, v14

    const/4 v3, 0x1

    .line 14352
    .end local v12    # "seNumber":I
    .end local v14    # "uid":I
    .restart local v16    # "uid":I
    :goto_2c
    add-int/lit8 v8, v8, 0x1

    move/from16 v14, v16

    const/16 v3, 0x3e8

    goto :goto_2b

    .end local v16    # "uid":I
    .restart local v14    # "uid":I
    :cond_4b
    move/from16 v16, v14

    const/4 v3, 0x1

    .line 14359
    .end local v8    # "is":I
    .end local v14    # "uid":I
    .restart local v16    # "uid":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14360
    const/16 v8, 0x3e8

    if-gt v2, v8, :cond_53

    .line 14363
    const/4 v8, 0x0

    .local v8, "ip":I
    :goto_2d
    if-ge v8, v2, :cond_4c

    .line 14364
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v12

    .line 14365
    .local v12, "procName":Ljava/lang/String;
    invoke-virtual {v15, v12}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v14

    .line 14366
    .local v14, "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    move/from16 v25, v4

    .end local v4    # "NKW":I
    .local v25, "NKW":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    iput-wide v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mUserTime:J

    .line 14367
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    iput-wide v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mSystemTime:J

    .line 14368
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    iput-wide v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mForegroundTime:J

    .line 14369
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mStarts:I

    .line 14370
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumCrashes:I

    .line 14371
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumAnrs:I

    .line 14372
    invoke-virtual {v14, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->readExcessivePowerFromParcelLocked(Landroid/os/Parcel;)V

    .line 14363
    .end local v12    # "procName":Ljava/lang/String;
    .end local v14    # "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    add-int/lit8 v8, v8, 0x1

    move/from16 v4, v25

    const/4 v3, 0x1

    goto :goto_2d

    .end local v25    # "NKW":I
    .restart local v4    # "NKW":I
    :cond_4c
    move/from16 v25, v4

    .line 14375
    .end local v4    # "NKW":I
    .end local v8    # "ip":I
    .restart local v25    # "NKW":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14376
    const/16 v3, 0x2710

    if-gt v2, v3, :cond_52

    .line 14379
    const/4 v3, 0x0

    .local v3, "ip":I
    :goto_2e
    if-ge v3, v2, :cond_51

    .line 14380
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v4

    .line 14381
    .local v4, "pkgName":Ljava/lang/String;
    iget-object v8, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    invoke-virtual {v8, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    invoke-static {v8}, Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 14382
    invoke-virtual {v15, v4}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getPackageStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v8

    .line 14383
    .local v8, "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    .line 14384
    .local v12, "NWA":I
    const/16 v14, 0x2710

    if-gt v12, v14, :cond_50

    .line 14387
    iget-object v14, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v14}, Landroid/util/ArrayMap;->clear()V

    .line 14388
    const/4 v14, 0x0

    .local v14, "iwa":I
    :goto_2f
    if-ge v14, v12, :cond_4d

    .line 14389
    move/from16 v26, v6

    .end local v6    # "NS":I
    .local v26, "NS":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v6

    .line 14390
    .local v6, "tag":Ljava/lang/String;
    move/from16 v27, v9

    .end local v9    # "NRPMS":I
    .local v27, "NRPMS":I
    new-instance v9, Lcom/android/internal/os/BatteryStatsImpl$Counter;

    move/from16 v28, v13

    .end local v13    # "NSORPMS":I
    .local v28, "NSORPMS":I
    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v9, v13}, Lcom/android/internal/os/BatteryStatsImpl$Counter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    .line 14391
    .local v9, "c":Lcom/android/internal/os/BatteryStatsImpl$Counter;
    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14392
    iget-object v13, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v13, v6, v9}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14388
    .end local v6    # "tag":Ljava/lang/String;
    .end local v9    # "c":Lcom/android/internal/os/BatteryStatsImpl$Counter;
    add-int/lit8 v14, v14, 0x1

    move/from16 v6, v26

    move/from16 v9, v27

    move/from16 v13, v28

    goto :goto_2f

    .end local v26    # "NS":I
    .end local v27    # "NRPMS":I
    .end local v28    # "NSORPMS":I
    .local v6, "NS":I
    .local v9, "NRPMS":I
    .restart local v13    # "NSORPMS":I
    :cond_4d
    move/from16 v26, v6

    move/from16 v27, v9

    move/from16 v28, v13

    .line 14394
    .end local v6    # "NS":I
    .end local v9    # "NRPMS":I
    .end local v13    # "NSORPMS":I
    .end local v14    # "iwa":I
    .restart local v26    # "NS":I
    .restart local v27    # "NRPMS":I
    .restart local v28    # "NSORPMS":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 14395
    .end local v26    # "NS":I
    .restart local v6    # "NS":I
    const/16 v9, 0x2710

    if-gt v6, v9, :cond_4f

    .line 14398
    const/4 v13, 0x0

    .local v13, "is":I
    :goto_30
    if-ge v13, v6, :cond_4e

    .line 14399
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v14

    .line 14400
    .local v14, "servName":Ljava/lang/String;
    invoke-virtual {v15, v4, v14}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getServiceStatsLocked(Ljava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    move-result-object v9

    .line 14401
    .local v9, "s":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v9, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mStartTime:J

    .line 14402
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v9, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mStarts:I

    .line 14403
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v9, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLaunches:I

    .line 14398
    .end local v9    # "s":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    .end local v14    # "servName":Ljava/lang/String;
    add-int/lit8 v13, v13, 0x1

    const/16 v9, 0x2710

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    goto :goto_30

    .line 14379
    .end local v4    # "pkgName":Ljava/lang/String;
    .end local v8    # "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .end local v12    # "NWA":I
    .end local v13    # "is":I
    :cond_4e
    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v9, v27

    move/from16 v13, v28

    goto/16 :goto_2e

    .line 14396
    .restart local v4    # "pkgName":Ljava/lang/String;
    .restart local v8    # "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .restart local v12    # "NWA":I
    :cond_4f
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "File corrupt: too many services "

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14385
    .end local v27    # "NRPMS":I
    .end local v28    # "NSORPMS":I
    .local v9, "NRPMS":I
    .local v13, "NSORPMS":I
    :cond_50
    move/from16 v26, v6

    .end local v6    # "NS":I
    .restart local v26    # "NS":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "File corrupt: too many wakeup alarms "

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14379
    .end local v4    # "pkgName":Ljava/lang/String;
    .end local v8    # "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .end local v12    # "NWA":I
    .end local v26    # "NS":I
    .restart local v6    # "NS":I
    :cond_51
    move/from16 v26, v6

    move/from16 v27, v9

    move/from16 v28, v13

    .line 14115
    .end local v2    # "NP":I
    .end local v3    # "ip":I
    .end local v5    # "NW":I
    .end local v6    # "NS":I
    .end local v7    # "NJ":I
    .end local v9    # "NRPMS":I
    .end local v13    # "NSORPMS":I
    .end local v15    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v16    # "uid":I
    .end local v19    # "length":I
    .restart local v27    # "NRPMS":I
    .restart local v28    # "NSORPMS":I
    add-int/lit8 v11, v11, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v20

    move/from16 v3, v21

    move/from16 v8, v22

    move/from16 v6, v23

    move/from16 v7, v24

    move/from16 v4, v25

    const/4 v5, 0x0

    const/16 v12, 0x2710

    goto/16 :goto_14

    .line 14377
    .end local v27    # "NRPMS":I
    .end local v28    # "NSORPMS":I
    .restart local v2    # "NP":I
    .restart local v5    # "NW":I
    .restart local v6    # "NS":I
    .restart local v7    # "NJ":I
    .restart local v9    # "NRPMS":I
    .restart local v13    # "NSORPMS":I
    .restart local v15    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v16    # "uid":I
    .restart local v19    # "length":I
    :cond_52
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many packages "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14361
    .end local v25    # "NKW":I
    .local v4, "NKW":I
    :cond_53
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many processes "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14350
    .end local v16    # "uid":I
    .local v14, "uid":I
    :cond_54
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many sensors "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14328
    .end local v19    # "length":I
    .end local v22    # "NMS":I
    .local v2, "length":I
    .local v8, "NMS":I
    :cond_55
    move/from16 v19, v2

    .end local v2    # "length":I
    .restart local v19    # "length":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many job timers "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14319
    .end local v7    # "NJ":I
    .end local v19    # "length":I
    .restart local v2    # "length":I
    :cond_56
    move/from16 v19, v2

    .end local v2    # "length":I
    .restart local v19    # "length":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many syncs "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14310
    .end local v6    # "NS":I
    .end local v19    # "length":I
    .restart local v2    # "length":I
    :cond_57
    move/from16 v19, v2

    .end local v2    # "length":I
    .restart local v19    # "length":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many wake locks "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14407
    .end local v5    # "NW":I
    .end local v11    # "iu":I
    .end local v14    # "uid":I
    .end local v15    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v19    # "length":I
    .end local v20    # "version":I
    .end local v21    # "inclHistory":Z
    .end local v23    # "numTags":I
    .end local v24    # "NPKG":I
    .local v2, "version":I
    .local v3, "inclHistory":Z
    .local v6, "numTags":I
    .local v7, "NPKG":I
    :cond_58
    return-void

    .line 14113
    :cond_59
    move/from16 v20, v2

    .end local v2    # "version":I
    .restart local v20    # "version":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many uids "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14094
    .end local v8    # "NMS":I
    .end local v10    # "NU":I
    .end local v17    # "NWR":I
    .end local v20    # "version":I
    .restart local v2    # "version":I
    .local v11, "NWR":I
    :cond_5a
    move/from16 v20, v2

    move/from16 v17, v11

    .end local v2    # "version":I
    .end local v11    # "NWR":I
    .restart local v17    # "NWR":I
    .restart local v20    # "version":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many wakeup reasons "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v2, v17

    .end local v17    # "NWR":I
    .local v2, "NWR":I
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14083
    .end local v20    # "version":I
    .local v2, "version":I
    :cond_5b
    move/from16 v20, v2

    move/from16 v25, v4

    .end local v2    # "version":I
    .end local v4    # "NKW":I
    .restart local v20    # "version":I
    .restart local v25    # "NKW":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many kernel wake locks "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v2, v25

    .end local v25    # "NKW":I
    .local v2, "NKW":I
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14072
    .end local v20    # "version":I
    .local v2, "version":I
    :cond_5c
    move/from16 v20, v2

    move/from16 v28, v13

    .end local v2    # "version":I
    .end local v13    # "NSORPMS":I
    .restart local v20    # "version":I
    .restart local v28    # "NSORPMS":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many screen-off rpm stats "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v2, v28

    .end local v28    # "NSORPMS":I
    .local v2, "NSORPMS":I
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14062
    .end local v20    # "version":I
    .local v2, "version":I
    :cond_5d
    move/from16 v20, v2

    move/from16 v27, v9

    .end local v2    # "version":I
    .end local v9    # "NRPMS":I
    .restart local v20    # "version":I
    .restart local v27    # "NRPMS":I
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many rpm stats "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v2, v27

    .end local v27    # "NRPMS":I
    .local v2, "NRPMS":I
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public greylist-max-o recordDailyStatsIfNeededLocked(Z)V
    .locals 6
    .param p1, "settled"    # Z

    .line 10266
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    .line 10267
    .local v0, "currentTime":J
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    cmp-long v2, v0, v2

    if-ltz v2, :cond_0

    .line 10268
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsLocked()V

    goto :goto_0

    .line 10269
    :cond_0
    if-eqz p1, :cond_1

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    cmp-long v2, v0, v2

    if-ltz v2, :cond_1

    .line 10270
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsLocked()V

    goto :goto_0

    .line 10271
    :cond_1
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    const-wide/32 v4, 0x5265c00

    sub-long/2addr v2, v4

    cmp-long v2, v0, v2

    if-gez v2, :cond_2

    .line 10272
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsLocked()V

    .line 10274
    :cond_2
    :goto_0
    return-void
.end method

.method public greylist-max-o recordDailyStatsLocked()V
    .locals 10

    .line 10277
    new-instance v0, Landroid/os/BatteryStats$DailyItem;

    invoke-direct {v0}, Landroid/os/BatteryStats$DailyItem;-><init>()V

    .line 10278
    .local v0, "item":Landroid/os/BatteryStats$DailyItem;
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    iput-wide v1, v0, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    .line 10279
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    .line 10280
    const/4 v1, 0x0

    .line 10281
    .local v1, "hasData":Z
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v2, v2, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    if-lez v2, :cond_0

    .line 10282
    const/4 v1, 0x1

    .line 10283
    new-instance v2, Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v3, v3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v4, v4, Landroid/os/BatteryStats$LevelStepTracker;->mStepDurations:[J

    invoke-direct {v2, v3, v4}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I[J)V

    iput-object v2, v0, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    .line 10287
    :cond_0
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v2, v2, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    if-lez v2, :cond_1

    .line 10288
    const/4 v1, 0x1

    .line 10289
    new-instance v2, Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v3, v3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v4, v4, Landroid/os/BatteryStats$LevelStepTracker;->mStepDurations:[J

    invoke-direct {v2, v3, v4}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I[J)V

    iput-object v2, v0, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    .line 10293
    :cond_1
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-eqz v2, :cond_2

    .line 10294
    const/4 v1, 0x1

    .line 10295
    iput-object v2, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    .line 10296
    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 10298
    :cond_2
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v2}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10299
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v2}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10300
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateDailyDeadlineLocked()V

    .line 10302
    if-eqz v1, :cond_4

    .line 10303
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 10304
    .local v2, "startTime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10305
    :goto_0
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    const/16 v5, 0xa

    if-le v4, v5, :cond_3

    .line 10306
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    goto :goto_0

    .line 10308
    :cond_3
    new-instance v4, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v4}, Ljava/io/ByteArrayOutputStream;-><init>()V

    .line 10310
    .local v4, "memStream":Ljava/io/ByteArrayOutputStream;
    :try_start_0
    new-instance v5, Lcom/android/internal/util/FastXmlSerializer;

    invoke-direct {v5}, Lcom/android/internal/util/FastXmlSerializer;-><init>()V

    .line 10311
    .local v5, "out":Lorg/xmlpull/v1/XmlSerializer;
    sget-object v6, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v6}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v6

    invoke-interface {v5, v4, v6}, Lorg/xmlpull/v1/XmlSerializer;->setOutput(Ljava/io/OutputStream;Ljava/lang/String;)V

    .line 10312
    invoke-direct {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->writeDailyItemsLocked(Lorg/xmlpull/v1/XmlSerializer;)V

    .line 10313
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    sub-long/2addr v6, v2

    .line 10314
    .local v6, "initialTime":J
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v8

    new-instance v9, Lcom/android/internal/os/BatteryStatsImpl$3;

    invoke-direct {v9, p0, v4, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$3;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Ljava/io/ByteArrayOutputStream;J)V

    invoke-virtual {v8, v9}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10337
    nop

    .end local v5    # "out":Lorg/xmlpull/v1/XmlSerializer;
    .end local v6    # "initialTime":J
    goto :goto_1

    .line 10336
    :catch_0
    move-exception v5

    .line 10339
    .end local v2    # "startTime":J
    .end local v4    # "memStream":Ljava/io/ByteArrayOutputStream;
    :cond_4
    :goto_1
    return-void
.end method

.method public greylist-max-o removeIsolatedUidLocked(I)V
    .locals 5
    .param p1, "isolatedUid"    # I

    .line 3982
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseIntArray;->indexOfKey(I)I

    move-result v0

    .line 3983
    .local v0, "idx":I
    if-ltz v0, :cond_0

    .line 3984
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v1

    .line 3985
    .local v1, "ownerUid":I
    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v2

    .line 3986
    .local v2, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v2, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->removeIsolatedUid(I)V

    .line 3987
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseIntArray;->removeAt(I)V

    .line 3989
    .end local v1    # "ownerUid":I
    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    invoke-direct {v2, p0, p1, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;-><init>(Lcom/android/internal/os/BatteryStatsImpl;IJ)V

    invoke-interface {v1, v2}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    .line 3990
    return-void
.end method

.method public greylist removeUidStatsLocked(I)V
    .locals 5
    .param p1, "uid"    # I

    .line 13283
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 13284
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-eqz v0, :cond_0

    .line 13285
    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->detachFromTimeBase()V

    .line 13287
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 13288
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    invoke-direct {v2, p0, p1, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;-><init>(Lcom/android/internal/os/BatteryStatsImpl;IJ)V

    invoke-interface {v1, v2}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    .line 13289
    return-void
.end method

.method public greylist-max-o reportExcessiveCpuLocked(ILjava/lang/String;JJ)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "proc"    # Ljava/lang/String;
    .param p3, "overTime"    # J
    .param p5, "usedTime"    # J

    .line 4656
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4657
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 4658
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-eqz v0, :cond_0

    .line 4659
    move-object v1, v0

    move-object v2, p2

    move-wide v3, p3

    move-wide v5, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->reportExcessiveCpuLocked(Ljava/lang/String;JJ)V

    .line 4661
    :cond_0
    return-void
.end method

.method public greylist-max-o resetAllStatsCmdLocked()V
    .locals 10

    .line 10763
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->collectCheckinFile()V

    .line 10765
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->resetAllStatsLocked()V

    .line 10766
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 10767
    .local v0, "mSecUptime":J
    const-wide/16 v2, 0x3e8

    mul-long v4, v0, v2

    .line 10768
    .local v4, "uptime":J
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v6

    .line 10769
    .local v6, "mSecRealtime":J
    mul-long/2addr v2, v6

    .line 10770
    .local v2, "realtime":J
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStartLevel:I

    .line 10771
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 10772
    invoke-virtual {p0, v6, v7, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 10773
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 10775
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v8, v4, v5, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->reset(JJ)V

    .line 10776
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v8, v4, v5, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->reset(JJ)V

    .line 10777
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v8, v8, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v9, 0x80000

    and-int/2addr v8, v9

    if-nez v8, :cond_2

    .line 10778
    iget v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v8}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v8

    const/4 v9, 0x0

    if-eqz v8, :cond_0

    .line 10779
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10780
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10781
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_0

    .line 10782
    :cond_0
    iget v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v8}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v8

    if-eqz v8, :cond_1

    .line 10783
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10784
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10785
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_0

    .line 10787
    :cond_1
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10788
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10789
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 10791
    :goto_0
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 10792
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 10793
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 10795
    :cond_2
    invoke-direct {p0, v6, v7, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->initActiveHistoryEventsLocked(JJ)V

    .line 10796
    return-void
.end method

.method public greylist-max-o scheduleRemoveIsolatedUidLocked(II)V
    .locals 2
    .param p1, "isolatedUid"    # I
    .param p2, "appUid"    # I

    .line 3968
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    const/4 v1, -0x1

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseIntArray;->get(II)I

    move-result v0

    .line 3969
    .local v0, "curUid":I
    if-ne v0, p2, :cond_0

    .line 3970
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    if-eqz v1, :cond_0

    .line 3971
    invoke-interface {v1, p1}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToRemovedUid(I)Ljava/util/concurrent/Future;

    .line 3974
    :cond_0
    return-void
.end method

.method public blacklist setBatteryStateLocked(IIIIIIIIJ)V
    .locals 28
    .param p1, "status"    # I
    .param p2, "health"    # I
    .param p3, "plugType"    # I
    .param p4, "level"    # I
    .param p5, "temp"    # I
    .param p6, "volt"    # I
    .param p7, "chargeUAh"    # I
    .param p8, "chargeFullUAh"    # I
    .param p9, "chargeTimeToFullSeconds"    # J

    .line 12604
    move-object/from16 v9, p0

    move/from16 v10, p1

    move/from16 v11, p2

    move/from16 v12, p3

    move/from16 v13, p4

    move/from16 v14, p6

    move/from16 v15, p7

    move/from16 v8, p8

    const/4 v7, 0x0

    move/from16 v0, p5

    invoke-static {v7, v0}, Ljava/lang/Math;->max(II)I

    move-result v6

    .line 12606
    .end local p5    # "temp":I
    .local v6, "temp":I
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    if-eqz v0, :cond_0

    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    invoke-direct {v9, v0, v10, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->reportChangesToStatsLog(Landroid/os/BatteryStats$HistoryItem;III)V

    .line 12609
    invoke-static {v12, v10}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery(II)Z

    move-result v5

    .line 12610
    .local v5, "onBattery":Z
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 12611
    .local v3, "uptime":J
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 12612
    .local v1, "elapsedRealtime":J
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    const/4 v8, 0x1

    if-nez v0, :cond_3

    .line 12613
    iput-boolean v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 12618
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-ne v5, v0, :cond_2

    .line 12619
    if-eqz v5, :cond_1

    .line 12620
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v17, -0x80001

    and-int v7, v7, v17

    iput v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    goto :goto_1

    .line 12622
    :cond_1
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v17, 0x80000

    or-int v7, v7, v17

    iput v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 12626
    :cond_2
    :goto_1
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v17, 0x1000000

    or-int v7, v7, v17

    iput v7, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 12627
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v7, v10

    iput-byte v7, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12628
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v7, v13

    iput-byte v7, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12629
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput v15, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 12630
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    .line 12632
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargingStateLevel:I

    goto :goto_3

    .line 12633
    :cond_3
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    if-ne v0, v13, :cond_4

    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eq v0, v5, :cond_6

    .line 12634
    :cond_4
    const/16 v0, 0x64

    if-lt v13, v0, :cond_5

    if-eqz v5, :cond_5

    move v0, v8

    goto :goto_2

    :cond_5
    const/4 v0, 0x0

    :goto_2
    invoke-virtual {v9, v0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(Z)V

    .line 12636
    :cond_6
    :goto_3
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v7, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12637
    .local v7, "oldStatus":I
    if-eqz v5, :cond_8

    .line 12638
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 12639
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    if-nez v0, :cond_7

    .line 12640
    iput-boolean v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 12641
    const/16 v17, 0x1

    move-object/from16 v0, p0

    move-wide/from16 v22, v1

    .end local v1    # "elapsedRealtime":J
    .local v22, "elapsedRealtime":J
    move-wide/from16 v24, v3

    .end local v3    # "uptime":J
    .local v24, "uptime":J
    move/from16 v26, v5

    .end local v5    # "onBattery":Z
    .local v26, "onBattery":Z
    move/from16 v5, v17

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    goto :goto_4

    .line 12639
    .end local v22    # "elapsedRealtime":J
    .end local v24    # "uptime":J
    .end local v26    # "onBattery":Z
    .restart local v1    # "elapsedRealtime":J
    .restart local v3    # "uptime":J
    .restart local v5    # "onBattery":Z
    :cond_7
    move-wide/from16 v22, v1

    move-wide/from16 v24, v3

    move/from16 v26, v5

    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    .end local v5    # "onBattery":Z
    .restart local v22    # "elapsedRealtime":J
    .restart local v24    # "uptime":J
    .restart local v26    # "onBattery":Z
    goto :goto_4

    .line 12643
    .end local v22    # "elapsedRealtime":J
    .end local v24    # "uptime":J
    .end local v26    # "onBattery":Z
    .restart local v1    # "elapsedRealtime":J
    .restart local v3    # "uptime":J
    .restart local v5    # "onBattery":Z
    :cond_8
    move-wide/from16 v22, v1

    move-wide/from16 v24, v3

    move/from16 v26, v5

    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    .end local v5    # "onBattery":Z
    .restart local v22    # "elapsedRealtime":J
    .restart local v24    # "uptime":J
    .restart local v26    # "onBattery":Z
    const/16 v0, 0x60

    if-ge v13, v0, :cond_9

    if-eq v10, v8, :cond_9

    .line 12645
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    if-nez v0, :cond_9

    .line 12646
    iput-boolean v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 12647
    const/4 v5, 0x1

    move-object/from16 v0, p0

    move-wide/from16 v1, v22

    move-wide/from16 v3, v24

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    .line 12650
    :cond_9
    :goto_4
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 12651
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    if-gez v0, :cond_a

    .line 12652
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    .line 12655
    :cond_a
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    const/4 v1, 0x2

    move/from16 v5, v26

    .end local v26    # "onBattery":Z
    .restart local v5    # "onBattery":Z
    if-eq v5, v0, :cond_e

    .line 12656
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v13

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12657
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v10

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12658
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v11

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    .line 12659
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v12

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 12660
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-short v2, v6

    iput-short v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    .line 12661
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-char v2, v14

    iput-char v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    .line 12662
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    if-ge v15, v0, :cond_d

    .line 12664
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    sub-int/2addr v0, v15

    int-to-long v2, v0

    .line 12665
    .local v2, "chargeDiff":J
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12666
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12667
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {v9, v0}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v0

    if-eqz v0, :cond_b

    .line 12668
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12670
    :cond_b
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    if-ne v0, v8, :cond_c

    .line 12671
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_5

    .line 12672
    :cond_c
    if-ne v0, v1, :cond_d

    .line 12673
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12676
    .end local v2    # "chargeDiff":J
    :cond_d
    :goto_5
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput v15, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 12677
    move-object/from16 v0, p0

    move-wide/from16 v1, v22

    move-wide/from16 v3, v24

    move/from16 v26, v5

    .end local v5    # "onBattery":Z
    .restart local v26    # "onBattery":Z
    move v15, v6

    .end local v6    # "temp":I
    .local v15, "temp":I
    move v6, v7

    move/from16 v27, v7

    .end local v7    # "oldStatus":I
    .local v27, "oldStatus":I
    move/from16 v7, p4

    move/from16 v8, p7

    invoke-virtual/range {v0 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->setOnBatteryLocked(JJZIII)V

    move/from16 p5, v15

    move-wide/from16 v5, v22

    const/4 v7, 0x1

    goto/16 :goto_b

    .line 12679
    .end local v15    # "temp":I
    .end local v26    # "onBattery":Z
    .end local v27    # "oldStatus":I
    .restart local v5    # "onBattery":Z
    .restart local v6    # "temp":I
    .restart local v7    # "oldStatus":I
    :cond_e
    move/from16 v26, v5

    move v15, v6

    move/from16 v27, v7

    .end local v5    # "onBattery":Z
    .end local v6    # "temp":I
    .end local v7    # "oldStatus":I
    .restart local v15    # "temp":I
    .restart local v26    # "onBattery":Z
    .restart local v27    # "oldStatus":I
    const/4 v0, 0x0

    .line 12680
    .local v0, "changed":Z
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-eq v2, v13, :cond_f

    .line 12681
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v13

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12682
    const/4 v0, 0x1

    .line 12686
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    iget-object v3, v9, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-wide v3, v3, Lcom/android/internal/os/BatteryStatsImpl$Constants;->BATTERY_LEVEL_COLLECTION_DELAY_MS:J

    invoke-interface {v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleSyncDueToBatteryLevelChange(J)Ljava/util/concurrent/Future;

    .line 12689
    :cond_f
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    if-eq v2, v10, :cond_10

    .line 12690
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v10

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12691
    const/4 v0, 0x1

    .line 12693
    :cond_10
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    if-eq v2, v11, :cond_11

    .line 12694
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v11

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    .line 12695
    const/4 v0, 0x1

    .line 12697
    :cond_11
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    if-eq v2, v12, :cond_12

    .line 12698
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v12

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 12699
    const/4 v0, 0x1

    .line 12701
    :cond_12
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-short v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    add-int/lit8 v2, v2, 0xa

    if-ge v15, v2, :cond_13

    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-short v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    add-int/lit8 v2, v2, -0xa

    if-gt v15, v2, :cond_14

    .line 12703
    :cond_13
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-short v3, v15

    iput-short v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    .line 12704
    const/4 v0, 0x1

    .line 12706
    :cond_14
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-char v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    add-int/lit8 v2, v2, 0x14

    if-gt v14, v2, :cond_15

    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-char v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    add-int/lit8 v2, v2, -0x14

    if-ge v14, v2, :cond_16

    .line 12708
    :cond_15
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-char v3, v14

    iput-char v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    .line 12709
    const/4 v0, 0x1

    .line 12711
    :cond_16
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    add-int/lit8 v2, v2, 0xa

    move/from16 v3, p7

    move v4, v15

    .end local v15    # "temp":I
    .local v4, "temp":I
    if-ge v3, v2, :cond_18

    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    add-int/lit8 v2, v2, -0xa

    if-gt v3, v2, :cond_17

    goto :goto_6

    :cond_17
    const/4 v7, 0x1

    goto :goto_8

    .line 12713
    :cond_18
    :goto_6
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    if-ge v3, v2, :cond_1b

    .line 12715
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    sub-int/2addr v2, v3

    int-to-long v5, v2

    .line 12716
    .local v5, "chargeDiff":J
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12717
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12718
    iget v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {v9, v2}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v2

    if-eqz v2, :cond_19

    .line 12719
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12721
    :cond_19
    iget v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    const/4 v7, 0x1

    if-ne v2, v7, :cond_1a

    .line 12722
    iget-object v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_7

    .line 12723
    :cond_1a
    if-ne v2, v1, :cond_1c

    .line 12724
    iget-object v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_7

    .line 12713
    .end local v5    # "chargeDiff":J
    :cond_1b
    const/4 v7, 0x1

    .line 12727
    :cond_1c
    :goto_7
    iget-object v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput v3, v1, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 12728
    const/4 v0, 0x1

    .line 12730
    :goto_8
    iget v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    int-to-long v1, v1

    const/16 v5, 0x30

    shl-long/2addr v1, v5

    iget v5, v9, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    int-to-long v5, v5

    const/16 v8, 0x38

    shl-long/2addr v5, v8

    or-long/2addr v1, v5

    and-int/lit16 v5, v13, 0xff

    int-to-long v5, v5

    const/16 v8, 0x28

    shl-long/2addr v5, v8

    or-long/2addr v1, v5

    .line 12733
    .local v1, "modeBits":J
    if-eqz v26, :cond_1e

    .line 12734
    const/4 v5, 0x0

    invoke-virtual {v9, v5}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v6

    or-int/2addr v0, v6

    .line 12735
    iget v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    if-eq v6, v13, :cond_1d

    iget v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    if-le v8, v13, :cond_1d

    .line 12736
    iget-object v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    sub-int v17, v6, v13

    move-object/from16 v16, v8

    move-wide/from16 v18, v1

    move-wide/from16 v20, v22

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12738
    iget-object v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    sub-int v17, v8, v13

    move-object/from16 v16, v6

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12740
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    .line 12741
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    .line 12742
    iget v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    iput v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 12743
    iput v5, v9, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 12786
    :cond_1d
    move/from16 p5, v4

    goto/16 :goto_a

    .line 12746
    :cond_1e
    const/4 v5, 0x0

    const/16 v6, 0x5a

    if-lt v13, v6, :cond_1f

    .line 12749
    invoke-virtual {v9, v7}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v6

    or-int/2addr v0, v6

    move/from16 p5, v4

    goto :goto_9

    .line 12750
    :cond_1f
    iget-boolean v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    if-nez v6, :cond_22

    .line 12751
    iget v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    if-ge v6, v13, :cond_21

    .line 12755
    iget-object v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    invoke-virtual {v6, v8}, Landroid/os/Handler;->hasCallbacks(Ljava/lang/Runnable;)Z

    move-result v6

    if-nez v6, :cond_20

    .line 12756
    iget-object v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    iget-object v15, v9, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget v15, v15, Lcom/android/internal/os/BatteryStatsImpl$Constants;->BATTERY_CHARGED_DELAY_MS:I

    move/from16 p5, v4

    .end local v4    # "temp":I
    .restart local p5    # "temp":I
    int-to-long v3, v15

    invoke-virtual {v6, v8, v3, v4}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    goto :goto_9

    .line 12755
    .end local p5    # "temp":I
    .restart local v4    # "temp":I
    :cond_20
    move/from16 p5, v4

    .end local v4    # "temp":I
    .restart local p5    # "temp":I
    goto :goto_9

    .line 12760
    .end local p5    # "temp":I
    .restart local v4    # "temp":I
    :cond_21
    move/from16 p5, v4

    .end local v4    # "temp":I
    .restart local p5    # "temp":I
    if-le v6, v13, :cond_23

    .line 12764
    iget-object v3, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v4, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    invoke-virtual {v3, v4}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    goto :goto_9

    .line 12767
    .end local p5    # "temp":I
    .restart local v4    # "temp":I
    :cond_22
    move/from16 p5, v4

    .end local v4    # "temp":I
    .restart local p5    # "temp":I
    iget v3, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    if-le v3, v13, :cond_23

    .line 12772
    invoke-virtual {v9, v5}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v3

    or-int/2addr v0, v3

    .line 12775
    :cond_23
    :goto_9
    iget v3, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    if-eq v3, v13, :cond_24

    iget v4, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    if-ge v4, v13, :cond_24

    .line 12776
    iget-object v4, v9, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    sub-int v17, v13, v3

    move-object/from16 v16, v4

    move-wide/from16 v18, v1

    move-wide/from16 v20, v22

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12778
    iget-object v3, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v4, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    sub-int v17, v13, v4

    move-object/from16 v16, v3

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12780
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    .line 12781
    iget v3, v9, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    iput v3, v9, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 12782
    iput v5, v9, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 12784
    :cond_24
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    .line 12786
    :goto_a
    if-eqz v0, :cond_25

    .line 12787
    move-wide/from16 v5, v22

    move-wide/from16 v3, v24

    .end local v22    # "elapsedRealtime":J
    .end local v24    # "uptime":J
    .restart local v3    # "uptime":J
    .local v5, "elapsedRealtime":J
    invoke-virtual {v9, v5, v6, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    goto :goto_b

    .line 12786
    .end local v3    # "uptime":J
    .end local v5    # "elapsedRealtime":J
    .restart local v22    # "elapsedRealtime":J
    .restart local v24    # "uptime":J
    :cond_25
    move-wide/from16 v5, v22

    move-wide/from16 v3, v24

    .line 12790
    .end local v0    # "changed":Z
    .end local v1    # "modeBits":J
    .end local v22    # "elapsedRealtime":J
    .end local v24    # "uptime":J
    .restart local v3    # "uptime":J
    .restart local v5    # "elapsedRealtime":J
    :goto_b
    if-nez v26, :cond_27

    const/4 v0, 0x5

    if-eq v10, v0, :cond_26

    if-ne v10, v7, :cond_27

    .line 12796
    :cond_26
    const/4 v0, 0x0

    iput-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 12799
    :cond_27
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    const/4 v1, -0x1

    if-ne v0, v1, :cond_28

    .line 12800
    move/from16 v1, p8

    iput v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    goto :goto_c

    .line 12802
    :cond_28
    move/from16 v1, p8

    invoke-static {v0, v1}, Ljava/lang/Math;->min(II)I

    move-result v0

    iput v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 12804
    :goto_c
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    invoke-static {v0, v1}, Ljava/lang/Math;->max(II)I

    move-result v0

    iput v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 12806
    move-wide/from16 v7, p9

    iput-wide v7, v9, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryTimeToFullSeconds:J

    .line 12807
    return-void
.end method

.method public greylist-max-o setCallback(Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;)V
    .locals 0
    .param p1, "cb"    # Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

    .line 10235
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCallback:Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

    .line 10236
    return-void
.end method

.method greylist-max-o setChargingLocked(Z)Z
    .locals 3
    .param p1, "charging"    # Z

    .line 12408
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 12409
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    if-eq v0, p1, :cond_1

    .line 12410
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    .line 12411
    if-eqz p1, :cond_0

    .line 12412
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v2, 0x1000000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    goto :goto_0

    .line 12414
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x1000001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 12416
    :goto_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v1, 0x3

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 12417
    const/4 v0, 0x1

    return v0

    .line 12419
    :cond_1
    const/4 v0, 0x0

    return v0
.end method

.method public greylist-max-o setExternalStatsSyncLocked(Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;)V
    .locals 0
    .param p1, "sync"    # Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 10245
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 10246
    return-void
.end method

.method public greylist-max-o setNoAutoReset(Z)V
    .locals 0
    .param p1, "enabled"    # Z

    .line 4273
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNoAutoReset:Z

    .line 4274
    return-void
.end method

.method protected greylist-max-o setOnBatteryLocked(JJZIII)V
    .locals 17
    .param p1, "mSecRealtime"    # J
    .param p3, "mSecUptime"    # J
    .param p5, "onBattery"    # Z
    .param p6, "oldStatus"    # I
    .param p7, "level"    # I
    .param p8, "chargeUAh"    # I

    .line 12425
    move-object/from16 v7, p0

    move/from16 v8, p5

    move/from16 v9, p7

    const/4 v10, 0x0

    .line 12426
    .local v10, "doWrite":Z
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v1, 0x2

    invoke-virtual {v0, v1}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v11

    .line 12427
    .local v11, "m":Landroid/os/Message;
    iput v8, v11, Landroid/os/Message;->arg1:I

    .line 12428
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v11}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 12430
    const-wide/16 v0, 0x3e8

    mul-long v12, p3, v0

    .line 12431
    .local v12, "uptime":J
    mul-long v14, p1, v0

    .line 12432
    .local v14, "realtime":J
    iget v6, v7, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 12433
    .local v6, "screenState":I
    const/4 v0, 0x1

    const/4 v5, 0x0

    if-eqz v8, :cond_4

    .line 12438
    const/16 v16, 0x0

    .line 12492
    .local v16, "reset":Z
    iget-boolean v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    if-eqz v1, :cond_0

    .line 12493
    invoke-virtual {v7, v5}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    .line 12495
    :cond_0
    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargingStateLevel:I

    .line 12496
    iput-boolean v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    .line 12497
    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    .line 12498
    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    .line 12499
    iget-object v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->clearTime()V

    .line 12500
    iget-object v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->clearTime()V

    .line 12501
    iget v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    iput v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 12502
    iput v5, v7, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 12503
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 12504
    iget-object v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v9

    iput-byte v2, v1, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12505
    iget-object v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, -0x80001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 12508
    if-eqz v16, :cond_1

    .line 12509
    iput-boolean v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 12510
    move-object/from16 v0, p0

    move-wide/from16 v1, p1

    move-wide/from16 v3, p3

    move v8, v5

    move/from16 v5, v16

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    goto :goto_0

    .line 12508
    :cond_1
    move v8, v5

    .line 12512
    :goto_0
    invoke-virtual/range {p0 .. p4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 12513
    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 12514
    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 12515
    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 12516
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 12517
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_1

    .line 12518
    :cond_2
    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 12519
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 12520
    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 12521
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_1

    .line 12523
    :cond_3
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 12524
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 12525
    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 12527
    :goto_1
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 12528
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 12529
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 12530
    const/4 v1, 0x1

    move-object/from16 v0, p0

    move v2, v6

    move-wide v3, v12

    move v8, v6

    .end local v6    # "screenState":I
    .local v8, "screenState":I
    move-wide v5, v14

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 12531
    .end local v16    # "reset":Z
    move/from16 v16, v8

    goto :goto_2

    .line 12532
    .end local v8    # "screenState":I
    .restart local v6    # "screenState":I
    :cond_4
    move v8, v5

    move v5, v6

    .end local v6    # "screenState":I
    .local v5, "screenState":I
    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargingStateLevel:I

    .line 12533
    iput-boolean v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    .line 12534
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 12535
    iget-object v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v9

    iput-byte v2, v1, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12536
    iget-object v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x80000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 12539
    invoke-virtual/range {p0 .. p4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 12540
    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 12541
    iget v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v9, v1, :cond_5

    .line 12542
    iget v2, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    sub-int v3, v1, v9

    sub-int/2addr v3, v0

    add-int/2addr v2, v3

    iput v2, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 12543
    iget v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    sub-int/2addr v1, v9

    add-int/2addr v0, v1

    iput v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 12545
    :cond_5
    invoke-virtual {v7, v5, v5}, Lcom/android/internal/os/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    .line 12546
    const/4 v1, 0x0

    move-object/from16 v0, p0

    move v2, v5

    move-wide v3, v12

    move/from16 v16, v5

    .end local v5    # "screenState":I
    .local v16, "screenState":I
    move-wide v5, v14

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 12547
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 12548
    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    .line 12549
    iput v9, v7, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    .line 12550
    iget v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    iput v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 12551
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 12553
    :goto_2
    if-nez v10, :cond_6

    iget-wide v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    const-wide/32 v2, 0xea60

    add-long/2addr v0, v2

    cmp-long v0, v0, p1

    if-gez v0, :cond_7

    .line 12554
    :cond_6
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    if-eqz v0, :cond_7

    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->getActiveFile()Landroid/util/AtomicFile;

    move-result-object v0

    if-eqz v0, :cond_7

    .line 12555
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->writeAsyncLocked()V

    .line 12558
    :cond_7
    return-void
.end method

.method public greylist-max-o setPowerProfileLocked(Lcom/android/internal/os/PowerProfile;)V
    .locals 6
    .param p1, "profile"    # Lcom/android/internal/os/PowerProfile;

    .line 10213
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    .line 10218
    invoke-virtual {p1}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v0

    .line 10219
    .local v0, "numClusters":I
    new-array v1, v0, [Lcom/android/internal/os/KernelCpuSpeedReader;

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    .line 10220
    const/4 v1, 0x0

    .line 10221
    .local v1, "firstCpuOfCluster":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 10222
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v3, v2}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v3

    .line 10223
    .local v3, "numSpeedSteps":I
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    new-instance v5, Lcom/android/internal/os/KernelCpuSpeedReader;

    invoke-direct {v5, v1, v3}, Lcom/android/internal/os/KernelCpuSpeedReader;-><init>(II)V

    aput-object v5, v4, v2

    .line 10225
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v4, v2}, Lcom/android/internal/os/PowerProfile;->getNumCoresInCpuCluster(I)I

    move-result v4

    add-int/2addr v1, v4

    .line 10221
    .end local v3    # "numSpeedSteps":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 10228
    .end local v2    # "i":I
    :cond_0
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    const/4 v3, -0x1

    if-ne v2, v3, :cond_1

    .line 10230
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v2}, Lcom/android/internal/os/PowerProfile;->getBatteryCapacity()D

    move-result-wide v2

    double-to-int v2, v2

    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 10232
    :cond_1
    return-void
.end method

.method public greylist-max-o setPretendScreenOff(Z)V
    .locals 1
    .param p1, "pretendScreenOff"    # Z

    .line 4277
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPretendScreenOff:Z

    if-eq v0, p1, :cond_1

    .line 4278
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPretendScreenOff:Z

    .line 4279
    if-eqz p1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x2

    :goto_0
    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->noteScreenStateLocked(I)V

    .line 4281
    :cond_1
    return-void
.end method

.method public greylist-max-o setRadioScanningTimeoutLocked(J)V
    .locals 1
    .param p1, "timeout"    # J

    .line 10239
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v0, :cond_0

    .line 10240
    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->setTimeout(J)V

    .line 10242
    :cond_0
    return-void
.end method

.method public greylist-max-o setRecordAllHistoryLocked(Z)V
    .locals 20
    .param p1, "enabled"    # Z

    .line 4234
    move-object/from16 v8, p0

    move/from16 v9, p1

    iput-boolean v9, v8, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    .line 4235
    const/4 v0, 0x1

    if-nez v9, :cond_2

    .line 4237
    iget-object v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/4 v2, 0x5

    invoke-virtual {v1, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->removeEvents(I)V

    .line 4238
    iget-object v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v2, 0xd

    invoke-virtual {v1, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->removeEvents(I)V

    .line 4241
    iget-object v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v1, v0}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v10

    .line 4243
    .local v10, "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-eqz v10, :cond_1

    .line 4244
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v11

    .line 4245
    .local v11, "mSecRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v13

    .line 4246
    .local v13, "mSecUptime":J
    invoke-virtual {v10}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v15

    :goto_0
    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v16, v0

    check-cast v16, Ljava/util/Map$Entry;

    .line 4247
    .local v16, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface/range {v16 .. v16}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    move-object v7, v0

    check-cast v7, Landroid/util/SparseIntArray;

    .line 4248
    .local v7, "uids":Landroid/util/SparseIntArray;
    const/4 v0, 0x0

    move v6, v0

    .local v6, "j":I
    :goto_1
    invoke-virtual {v7}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-ge v6, v0, :cond_0

    .line 4249
    const/16 v5, 0x4001

    .line 4250
    invoke-interface/range {v16 .. v16}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v17, v0

    check-cast v17, Ljava/lang/String;

    invoke-virtual {v7, v6}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v18

    .line 4249
    move-object/from16 v0, p0

    move-wide v1, v11

    move-wide v3, v13

    move/from16 v19, v6

    .end local v6    # "j":I
    .local v19, "j":I
    move-object/from16 v6, v17

    move-object/from16 v17, v7

    .end local v7    # "uids":Landroid/util/SparseIntArray;
    .local v17, "uids":Landroid/util/SparseIntArray;
    move/from16 v7, v18

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4248
    add-int/lit8 v6, v19, 0x1

    move-object/from16 v7, v17

    .end local v19    # "j":I
    .restart local v6    # "j":I
    goto :goto_1

    .end local v17    # "uids":Landroid/util/SparseIntArray;
    .restart local v7    # "uids":Landroid/util/SparseIntArray;
    :cond_0
    move/from16 v19, v6

    move-object/from16 v17, v7

    .line 4252
    .end local v6    # "j":I
    .end local v7    # "uids":Landroid/util/SparseIntArray;
    .end local v16    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    goto :goto_0

    .line 4254
    .end local v10    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v11    # "mSecRealtime":J
    .end local v13    # "mSecUptime":J
    :cond_1
    goto :goto_4

    .line 4256
    :cond_2
    iget-object v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v1, v0}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v10

    .line 4258
    .restart local v10    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-eqz v10, :cond_4

    .line 4259
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v11

    .line 4260
    .restart local v11    # "mSecRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v13

    .line 4261
    .restart local v13    # "mSecUptime":J
    invoke-virtual {v10}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v15

    :goto_2
    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_4

    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v16, v0

    check-cast v16, Ljava/util/Map$Entry;

    .line 4262
    .restart local v16    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface/range {v16 .. v16}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    move-object v7, v0

    check-cast v7, Landroid/util/SparseIntArray;

    .line 4263
    .restart local v7    # "uids":Landroid/util/SparseIntArray;
    const/4 v0, 0x0

    move v6, v0

    .restart local v6    # "j":I
    :goto_3
    invoke-virtual {v7}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-ge v6, v0, :cond_3

    .line 4264
    const v5, 0x8001

    .line 4265
    invoke-interface/range {v16 .. v16}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v17, v0

    check-cast v17, Ljava/lang/String;

    invoke-virtual {v7, v6}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v18

    .line 4264
    move-object/from16 v0, p0

    move-wide v1, v11

    move-wide v3, v13

    move/from16 v19, v6

    .end local v6    # "j":I
    .restart local v19    # "j":I
    move-object/from16 v6, v17

    move-object/from16 v17, v7

    .end local v7    # "uids":Landroid/util/SparseIntArray;
    .restart local v17    # "uids":Landroid/util/SparseIntArray;
    move/from16 v7, v18

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4263
    add-int/lit8 v6, v19, 0x1

    move-object/from16 v7, v17

    .end local v19    # "j":I
    .restart local v6    # "j":I
    goto :goto_3

    .end local v17    # "uids":Landroid/util/SparseIntArray;
    .restart local v7    # "uids":Landroid/util/SparseIntArray;
    :cond_3
    move/from16 v19, v6

    move-object/from16 v17, v7

    .line 4267
    .end local v6    # "j":I
    .end local v7    # "uids":Landroid/util/SparseIntArray;
    .end local v16    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    goto :goto_2

    .line 4270
    .end local v10    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v11    # "mSecRealtime":J
    .end local v13    # "mSecUptime":J
    :cond_4
    :goto_4
    return-void
.end method

.method public greylist-max-o shutdownLocked()V
    .locals 4

    .line 13325
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    invoke-direct {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->recordShutdownLocked(JJ)V

    .line 13326
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->writeSyncLocked()V

    .line 13327
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mShuttingDown:Z

    .line 13328
    return-void
.end method

.method public greylist-max-o startAddingCpuLocked()Z
    .locals 1

    .line 4614
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->cancelCpuSyncDueToWakelockChange()V

    .line 4615
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    return v0
.end method

.method public greylist startIteratingHistoryLocked()Z
    .locals 7

    .line 10637
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->startIteratingHistory()Z

    .line 10638
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    .line 10639
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    .line 10640
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->size()I

    move-result v2

    new-array v2, v2, [Ljava/lang/String;

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    .line 10641
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->size()I

    move-result v2

    new-array v2, v2, [I

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    .line 10642
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    .line 10643
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_0

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 10644
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$HistoryTag;

    .line 10645
    .local v3, "tag":Landroid/os/BatteryStats$HistoryTag;
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    .line 10646
    .local v4, "idx":I
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    iget-object v6, v3, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    aput-object v6, v5, v4

    .line 10647
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    iget v6, v3, Landroid/os/BatteryStats$HistoryTag;->uid:I

    aput v6, v5, v4

    .line 10648
    iget v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    iget-object v6, v3, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {v6}, Ljava/lang/String;->length()I

    move-result v6

    add-int/2addr v6, v1

    add-int/2addr v5, v6

    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    .line 10649
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    .end local v3    # "tag":Landroid/os/BatteryStats$HistoryTag;
    .end local v4    # "idx":I
    goto :goto_0

    .line 10650
    :cond_0
    return v1
.end method

.method public greylist-max-o startIteratingOldHistoryLocked()Z
    .locals 2

    .line 10576
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistory:Landroid/os/BatteryStats$HistoryItem;

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 10577
    return v1

    .line 10579
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 10580
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    .line 10581
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    .line 10582
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    .line 10583
    return v0
.end method

.method greylist-max-o stopAllGpsSignalQualityTimersLocked(I)V
    .locals 4
    .param p1, "except"    # I

    .line 5188
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5189
    .local v0, "elapsedRealtime":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    const/4 v3, 0x2

    if-ge v2, v3, :cond_2

    .line 5190
    if-ne v2, p1, :cond_0

    .line 5191
    goto :goto_2

    .line 5193
    :cond_0
    :goto_1
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 5194
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    .line 5189
    :cond_1
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5197
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method greylist-max-o stopAllPhoneSignalStrengthTimersLocked(I)V
    .locals 4
    .param p1, "except"    # I

    .line 5271
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5272
    .local v0, "elapsedRealtime":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v3

    if-ge v2, v3, :cond_2

    .line 5273
    if-ne v2, p1, :cond_0

    .line 5274
    goto :goto_2

    .line 5276
    :cond_0
    :goto_1
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 5277
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    .line 5272
    :cond_1
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5280
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method greylist-max-o stopAllWifiSignalStrengthTimersLocked(I)V
    .locals 4
    .param p1, "except"    # I

    .line 6066
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6067
    .local v0, "elapsedRealtime":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    const/4 v3, 0x5

    if-ge v2, v3, :cond_2

    .line 6068
    if-ne v2, p1, :cond_0

    .line 6069
    goto :goto_2

    .line 6071
    :cond_0
    :goto_1
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 6072
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    .line 6067
    :cond_1
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 6075
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method public greylist-max-o systemServicesReady(Landroid/content/Context;)V
    .locals 2
    .param p1, "context"    # Landroid/content/Context;

    .line 13335
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Constants;->startObserving(Landroid/content/ContentResolver;)V

    .line 13336
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->registerUsbStateReceiver(Landroid/content/Context;)V

    .line 13339
    invoke-super {p0, p1}, Lcom/android/internal/os/OplusBaseBatteryStatsImpl;->onSystemServicesReady(Landroid/content/Context;)V

    .line 13343
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/OppoDevicePowerStats;->onSystemServicesReady(Landroid/content/Context;)V

    .line 13345
    return-void
.end method

.method public greylist-max-o trackPerProcStateCpuTimes()Z
    .locals 1

    .line 13331
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-boolean v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;->TRACK_CPU_TIMES_BY_PROC_STATE:Z

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public greylist-max-o updateBluetoothStateLocked(Landroid/bluetooth/BluetoothActivityEnergyInfo;)V
    .locals 41
    .param p1, "info"    # Landroid/bluetooth/BluetoothActivityEnergyInfo;

    .line 11618
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    if-eqz v1, :cond_13

    iget-boolean v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-nez v2, :cond_0

    move-object v2, v1

    goto/16 :goto_e

    .line 11622
    :cond_0
    const/4 v2, 0x1

    iput-boolean v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 11624
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    .line 11625
    .local v3, "elapsedRealtimeMs":J
    nop

    .line 11626
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerRxTimeMillis()J

    move-result-wide v5

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v7, v7, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->rxTimeMs:J

    sub-long/2addr v5, v7

    .line 11627
    .local v5, "rxTimeMs":J
    nop

    .line 11628
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerTxTimeMillis()J

    move-result-wide v7

    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v9, v9, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->txTimeMs:J

    sub-long/2addr v7, v9

    .line 11629
    .local v7, "txTimeMs":J
    nop

    .line 11630
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerIdleTimeMillis()J

    move-result-wide v9

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v11, v11, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->idleTimeMs:J

    sub-long/2addr v9, v11

    .line 11639
    .local v9, "idleTimeMs":J
    const-wide/16 v11, 0x0

    .line 11641
    .local v11, "totalScanTimeMs":J
    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v13

    .line 11642
    .local v13, "uidCount":I
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_0
    if-ge v14, v13, :cond_2

    .line 11643
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 11644
    .local v2, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v15, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-nez v15, :cond_1

    .line 11645
    goto :goto_1

    .line 11648
    :cond_1
    iget-object v15, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-object/from16 v16, v2

    const-wide/16 v18, 0x3e8

    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .local v16, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    mul-long v1, v3, v18

    invoke-virtual {v15, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v1

    div-long v1, v1, v18

    add-long/2addr v11, v1

    .line 11642
    .end local v16    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :goto_1
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v1, p1

    const/4 v2, 0x1

    goto :goto_0

    .line 11652
    .end local v14    # "i":I
    :cond_2
    cmp-long v1, v11, v5

    if-lez v1, :cond_3

    const/4 v1, 0x1

    goto :goto_2

    :cond_3
    const/4 v1, 0x0

    .line 11653
    .local v1, "normalizeScanRxTime":Z
    :goto_2
    cmp-long v14, v11, v7

    if-lez v14, :cond_4

    const/16 v17, 0x1

    goto :goto_3

    :cond_4
    const/16 v17, 0x0

    :goto_3
    move/from16 v14, v17

    .line 11660
    .local v14, "normalizeScanTxTime":Z
    move-wide v15, v5

    .line 11661
    .local v15, "leftOverRxTimeMs":J
    move-wide/from16 v20, v7

    .line 11663
    .local v20, "leftOverTxTimeMs":J
    const/16 v17, 0x0

    move/from16 v2, v17

    .local v2, "i":I
    :goto_4
    const-wide/16 v22, 0x0

    if-ge v2, v13, :cond_9

    .line 11664
    move/from16 v24, v13

    .end local v13    # "uidCount":I
    .local v24, "uidCount":I
    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v13, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 11665
    .local v13, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-wide/from16 v25, v9

    .end local v9    # "idleTimeMs":J
    .local v25, "idleTimeMs":J
    iget-object v9, v13, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-nez v9, :cond_5

    .line 11666
    move/from16 v31, v1

    move-wide/from16 v29, v3

    move-wide/from16 v27, v7

    const-wide/16 v18, 0x3e8

    goto :goto_6

    .line 11669
    :cond_5
    iget-object v9, v13, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-wide/from16 v27, v7

    const-wide/16 v18, 0x3e8

    .end local v7    # "txTimeMs":J
    .local v27, "txTimeMs":J
    mul-long v7, v3, v18

    invoke-virtual {v9, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v7

    div-long v7, v7, v18

    .line 11671
    .local v7, "scanTimeSinceMarkMs":J
    cmp-long v9, v7, v22

    if-lez v9, :cond_8

    .line 11673
    iget-object v9, v13, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v9, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->setMark(J)V

    .line 11675
    move-wide v9, v7

    .line 11676
    .local v9, "scanTimeRxSinceMarkMs":J
    move-wide/from16 v22, v7

    .line 11678
    .local v22, "scanTimeTxSinceMarkMs":J
    if-eqz v1, :cond_6

    .line 11682
    mul-long v29, v5, v9

    div-long v9, v29, v11

    .line 11685
    :cond_6
    if-eqz v14, :cond_7

    .line 11689
    mul-long v29, v27, v22

    div-long v22, v29, v11

    move-wide/from16 v29, v3

    move-wide/from16 v3, v22

    goto :goto_5

    .line 11685
    :cond_7
    move-wide/from16 v29, v3

    move-wide/from16 v3, v22

    .line 11692
    .end local v22    # "scanTimeTxSinceMarkMs":J
    .local v3, "scanTimeTxSinceMarkMs":J
    .local v29, "elapsedRealtimeMs":J
    :goto_5
    nop

    .line 11693
    invoke-virtual {v13}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateBluetoothControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v22

    .line 11694
    .local v22, "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    move/from16 v31, v1

    .end local v1    # "normalizeScanRxTime":Z
    .local v31, "normalizeScanRxTime":Z
    invoke-virtual/range {v22 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {v1, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11695
    invoke-virtual/range {v22 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    const/16 v17, 0x0

    aget-object v1, v1, v17

    invoke-virtual {v1, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11697
    sub-long/2addr v15, v9

    .line 11698
    sub-long v20, v20, v3

    goto :goto_6

    .line 11671
    .end local v9    # "scanTimeRxSinceMarkMs":J
    .end local v22    # "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v29    # "elapsedRealtimeMs":J
    .end local v31    # "normalizeScanRxTime":Z
    .restart local v1    # "normalizeScanRxTime":Z
    .local v3, "elapsedRealtimeMs":J
    :cond_8
    move/from16 v31, v1

    move-wide/from16 v29, v3

    .line 11663
    .end local v1    # "normalizeScanRxTime":Z
    .end local v3    # "elapsedRealtimeMs":J
    .end local v7    # "scanTimeSinceMarkMs":J
    .end local v13    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v29    # "elapsedRealtimeMs":J
    .restart local v31    # "normalizeScanRxTime":Z
    :goto_6
    add-int/lit8 v2, v2, 0x1

    move/from16 v13, v24

    move-wide/from16 v9, v25

    move-wide/from16 v7, v27

    move-wide/from16 v3, v29

    move/from16 v1, v31

    goto :goto_4

    .end local v24    # "uidCount":I
    .end local v25    # "idleTimeMs":J
    .end local v27    # "txTimeMs":J
    .end local v29    # "elapsedRealtimeMs":J
    .end local v31    # "normalizeScanRxTime":Z
    .restart local v1    # "normalizeScanRxTime":Z
    .restart local v3    # "elapsedRealtimeMs":J
    .local v7, "txTimeMs":J
    .local v9, "idleTimeMs":J
    .local v13, "uidCount":I
    :cond_9
    move/from16 v31, v1

    move-wide/from16 v29, v3

    move-wide/from16 v27, v7

    move-wide/from16 v25, v9

    move/from16 v24, v13

    .line 11711
    .end local v1    # "normalizeScanRxTime":Z
    .end local v2    # "i":I
    .end local v3    # "elapsedRealtimeMs":J
    .end local v7    # "txTimeMs":J
    .end local v9    # "idleTimeMs":J
    .end local v13    # "uidCount":I
    .restart local v24    # "uidCount":I
    .restart local v25    # "idleTimeMs":J
    .restart local v27    # "txTimeMs":J
    .restart local v29    # "elapsedRealtimeMs":J
    .restart local v31    # "normalizeScanRxTime":Z
    const-wide/16 v1, 0x0

    .line 11712
    .local v1, "totalTxBytes":J
    const-wide/16 v3, 0x0

    .line 11714
    .local v3, "totalRxBytes":J
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getUidTraffic()[Landroid/bluetooth/UidTraffic;

    move-result-object v7

    .line 11715
    .local v7, "uidTraffic":[Landroid/bluetooth/UidTraffic;
    if-eqz v7, :cond_a

    array-length v8, v7

    goto :goto_7

    :cond_a
    const/4 v8, 0x0

    .line 11716
    .local v8, "numUids":I
    :goto_7
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_8
    if-ge v9, v8, :cond_b

    .line 11717
    aget-object v10, v7, v9

    .line 11718
    .local v10, "traffic":Landroid/bluetooth/UidTraffic;
    invoke-virtual {v10}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    move-result-wide v18

    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v13, v13, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->uidRxBytes:Landroid/util/SparseLongArray;

    .line 11719
    move-wide/from16 v32, v11

    .end local v11    # "totalScanTimeMs":J
    .local v32, "totalScanTimeMs":J
    invoke-virtual {v10}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v11

    .line 11718
    invoke-virtual {v13, v11}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v11

    sub-long v11, v18, v11

    .line 11720
    .local v11, "rxBytes":J
    invoke-virtual {v10}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    move-result-wide v18

    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v13, v13, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->uidTxBytes:Landroid/util/SparseLongArray;

    .line 11721
    move/from16 v40, v14

    .end local v14    # "normalizeScanTxTime":Z
    .local v40, "normalizeScanTxTime":Z
    invoke-virtual {v10}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v14

    .line 11720
    invoke-virtual {v13, v14}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v13

    sub-long v13, v18, v13

    .line 11724
    .local v13, "txBytes":J
    move-wide/from16 v18, v5

    .end local v5    # "rxTimeMs":J
    .local v18, "rxTimeMs":J
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v6, 0x4

    aget-object v5, v5, v6

    invoke-virtual {v5, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11725
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v6, 0x5

    aget-object v5, v5, v6

    invoke-virtual {v5, v13, v14}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11728
    invoke-virtual {v10}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v5

    invoke-virtual {v0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    invoke-virtual {v0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v5

    .line 11729
    .local v5, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    const/16 v35, 0x4

    const-wide/16 v38, 0x0

    move-object/from16 v34, v5

    move-wide/from16 v36, v11

    invoke-virtual/range {v34 .. v39}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11730
    const/16 v35, 0x5

    move-wide/from16 v36, v13

    invoke-virtual/range {v34 .. v39}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11733
    add-long/2addr v3, v11

    .line 11734
    add-long/2addr v1, v13

    .line 11716
    .end local v5    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v10    # "traffic":Landroid/bluetooth/UidTraffic;
    .end local v11    # "rxBytes":J
    .end local v13    # "txBytes":J
    add-int/lit8 v9, v9, 0x1

    move-wide/from16 v5, v18

    move-wide/from16 v11, v32

    move/from16 v14, v40

    goto :goto_8

    .end local v18    # "rxTimeMs":J
    .end local v32    # "totalScanTimeMs":J
    .end local v40    # "normalizeScanTxTime":Z
    .local v5, "rxTimeMs":J
    .local v11, "totalScanTimeMs":J
    .restart local v14    # "normalizeScanTxTime":Z
    :cond_b
    move-wide/from16 v18, v5

    move-wide/from16 v32, v11

    move/from16 v40, v14

    .line 11737
    .end local v5    # "rxTimeMs":J
    .end local v9    # "i":I
    .end local v11    # "totalScanTimeMs":J
    .end local v14    # "normalizeScanTxTime":Z
    .restart local v18    # "rxTimeMs":J
    .restart local v32    # "totalScanTimeMs":J
    .restart local v40    # "normalizeScanTxTime":Z
    cmp-long v5, v1, v22

    if-nez v5, :cond_d

    cmp-long v5, v3, v22

    if-eqz v5, :cond_c

    goto :goto_9

    :cond_c
    move-wide/from16 v35, v3

    move-object/from16 v37, v7

    goto/16 :goto_c

    :cond_d
    :goto_9
    cmp-long v5, v15, v22

    if-nez v5, :cond_e

    cmp-long v5, v20, v22

    if-eqz v5, :cond_c

    .line 11739
    :cond_e
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_a
    if-ge v5, v8, :cond_11

    .line 11740
    aget-object v6, v7, v5

    .line 11741
    .local v6, "traffic":Landroid/bluetooth/UidTraffic;
    invoke-virtual {v6}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v9

    .line 11742
    .local v9, "uid":I
    nop

    .line 11743
    invoke-virtual {v6}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    move-result-wide v10

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v12, v12, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->uidRxBytes:Landroid/util/SparseLongArray;

    invoke-virtual {v12, v9}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v12

    sub-long/2addr v10, v12

    .line 11744
    .local v10, "rxBytes":J
    nop

    .line 11745
    invoke-virtual {v6}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    move-result-wide v12

    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v14, v14, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->uidTxBytes:Landroid/util/SparseLongArray;

    invoke-virtual {v14, v9}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v34

    sub-long v12, v12, v34

    .line 11747
    .local v12, "txBytes":J
    invoke-virtual {v0, v9}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v14

    invoke-virtual {v0, v14}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v14

    .line 11748
    .local v14, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    nop

    .line 11749
    invoke-virtual {v14}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateBluetoothControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v34

    .line 11751
    .local v34, "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    cmp-long v35, v3, v22

    if-lez v35, :cond_f

    cmp-long v35, v10, v22

    if-lez v35, :cond_f

    .line 11752
    mul-long v35, v15, v10

    move-object/from16 v38, v6

    move-object/from16 v37, v7

    .end local v6    # "traffic":Landroid/bluetooth/UidTraffic;
    .end local v7    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .local v37, "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .local v38, "traffic":Landroid/bluetooth/UidTraffic;
    div-long v6, v35, v3

    .line 11756
    .local v6, "timeRxMs":J
    move-wide/from16 v35, v3

    .end local v3    # "totalRxBytes":J
    .local v35, "totalRxBytes":J
    invoke-virtual/range {v34 .. v34}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-virtual {v3, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_b

    .line 11751
    .end local v35    # "totalRxBytes":J
    .end local v37    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .end local v38    # "traffic":Landroid/bluetooth/UidTraffic;
    .restart local v3    # "totalRxBytes":J
    .local v6, "traffic":Landroid/bluetooth/UidTraffic;
    .restart local v7    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    :cond_f
    move-wide/from16 v35, v3

    move-object/from16 v38, v6

    move-object/from16 v37, v7

    .line 11759
    .end local v3    # "totalRxBytes":J
    .end local v6    # "traffic":Landroid/bluetooth/UidTraffic;
    .end local v7    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .restart local v35    # "totalRxBytes":J
    .restart local v37    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .restart local v38    # "traffic":Landroid/bluetooth/UidTraffic;
    :goto_b
    cmp-long v3, v1, v22

    if-lez v3, :cond_10

    cmp-long v3, v12, v22

    if-lez v3, :cond_10

    .line 11760
    mul-long v3, v20, v12

    div-long/2addr v3, v1

    .line 11764
    .local v3, "timeTxMs":J
    invoke-virtual/range {v34 .. v34}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v6

    const/4 v7, 0x0

    aget-object v6, v6, v7

    invoke-virtual {v6, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11739
    .end local v3    # "timeTxMs":J
    .end local v9    # "uid":I
    .end local v10    # "rxBytes":J
    .end local v12    # "txBytes":J
    .end local v14    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v34    # "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v38    # "traffic":Landroid/bluetooth/UidTraffic;
    :cond_10
    add-int/lit8 v5, v5, 0x1

    move-wide/from16 v3, v35

    move-object/from16 v7, v37

    goto :goto_a

    .end local v35    # "totalRxBytes":J
    .end local v37    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .local v3, "totalRxBytes":J
    .restart local v7    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    :cond_11
    move-wide/from16 v35, v3

    move-object/from16 v37, v7

    .line 11769
    .end local v3    # "totalRxBytes":J
    .end local v5    # "i":I
    .end local v7    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .restart local v35    # "totalRxBytes":J
    .restart local v37    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    :goto_c
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    move-wide/from16 v5, v18

    .end local v18    # "rxTimeMs":J
    .local v5, "rxTimeMs":J
    invoke-virtual {v3, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11770
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    const/4 v4, 0x0

    aget-object v3, v3, v4

    move-wide/from16 v9, v27

    .end local v27    # "txTimeMs":J
    .local v9, "txTimeMs":J
    invoke-virtual {v3, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11771
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    move-wide/from16 v11, v25

    .end local v25    # "idleTimeMs":J
    .local v11, "idleTimeMs":J
    invoke-virtual {v3, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11774
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string v4, "bluetooth.controller.voltage"

    invoke-virtual {v3, v4}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v3

    const-wide v13, 0x408f400000000000L    # 1000.0

    div-double/2addr v3, v13

    .line 11776
    .local v3, "opVolt":D
    const-wide/16 v13, 0x0

    cmpl-double v7, v3, v13

    if-eqz v7, :cond_12

    .line 11778
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v7

    .line 11779
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerEnergyUsed()J

    move-result-wide v13

    move-wide/from16 v17, v1

    .end local v1    # "totalTxBytes":J
    .local v17, "totalTxBytes":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v1, v1, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->energy:J

    sub-long/2addr v13, v1

    long-to-double v1, v13

    div-double/2addr v1, v3

    double-to-long v1, v1

    .line 11778
    invoke-virtual {v7, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11783
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerEnergyUsed()J

    move-result-wide v13

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    move-wide/from16 v22, v5

    .end local v5    # "rxTimeMs":J
    .local v22, "rxTimeMs":J
    iget-wide v5, v2, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->energy:J

    sub-long/2addr v13, v5

    long-to-double v5, v13

    div-double/2addr v5, v3

    double-to-long v5, v5

    invoke-virtual {v1, v5, v6}, Lcom/android/internal/os/OppoDevicePowerStats;->recordBluetoothPowerDrainMaMs(J)V

    goto :goto_d

    .line 11776
    .end local v17    # "totalTxBytes":J
    .end local v22    # "rxTimeMs":J
    .restart local v1    # "totalTxBytes":J
    .restart local v5    # "rxTimeMs":J
    :cond_12
    move-wide/from16 v17, v1

    move-wide/from16 v22, v5

    .line 11787
    .end local v1    # "totalTxBytes":J
    .end local v5    # "rxTimeMs":J
    .restart local v17    # "totalTxBytes":J
    .restart local v22    # "rxTimeMs":J
    :goto_d
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    move-object/from16 v2, p1

    invoke-virtual {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->set(Landroid/bluetooth/BluetoothActivityEnergyInfo;)V

    .line 11788
    return-void

    .line 11618
    .end local v3    # "opVolt":D
    .end local v8    # "numUids":I
    .end local v9    # "txTimeMs":J
    .end local v11    # "idleTimeMs":J
    .end local v15    # "leftOverRxTimeMs":J
    .end local v17    # "totalTxBytes":J
    .end local v20    # "leftOverTxTimeMs":J
    .end local v22    # "rxTimeMs":J
    .end local v24    # "uidCount":I
    .end local v29    # "elapsedRealtimeMs":J
    .end local v31    # "normalizeScanRxTime":Z
    .end local v32    # "totalScanTimeMs":J
    .end local v35    # "totalRxBytes":J
    .end local v37    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .end local v40    # "normalizeScanTxTime":Z
    :cond_13
    move-object v2, v1

    .line 11619
    :goto_e
    return-void
.end method

.method public greylist-max-o updateClusterSpeedTimes(Landroid/util/SparseLongArray;Z)V
    .locals 19
    .param p1, "updatedUids"    # Landroid/util/SparseLongArray;
    .param p2, "onBattery"    # Z

    .line 12060
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    const-wide/16 v2, 0x0

    .line 12062
    .local v2, "totalCpuClustersTimeMs":J
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length v4, v4

    new-array v4, v4, [[J

    .line 12063
    .local v4, "clusterSpeedTimesMs":[[J
    const/4 v5, 0x0

    .local v5, "cluster":I
    :goto_0
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length v7, v6

    if-ge v5, v7, :cond_1

    .line 12064
    aget-object v6, v6, v5

    invoke-virtual {v6}, Lcom/android/internal/os/KernelCpuSpeedReader;->readDelta()[J

    move-result-object v6

    aput-object v6, v4, v5

    .line 12065
    aget-object v6, v4, v5

    if-eqz v6, :cond_0

    .line 12066
    aget-object v6, v4, v5

    array-length v6, v6

    add-int/lit8 v6, v6, -0x1

    .local v6, "speed":I
    :goto_1
    if-ltz v6, :cond_0

    .line 12067
    aget-object v7, v4, v5

    aget-wide v7, v7, v6

    add-long/2addr v2, v7

    .line 12066
    add-int/lit8 v6, v6, -0x1

    goto :goto_1

    .line 12063
    .end local v6    # "speed":I
    :cond_0
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 12071
    .end local v5    # "cluster":I
    :cond_1
    const-wide/16 v5, 0x0

    cmp-long v5, v2, v5

    if-eqz v5, :cond_a

    .line 12075
    invoke-virtual/range {p1 .. p1}, Landroid/util/SparseLongArray;->size()I

    move-result v5

    .line 12076
    .local v5, "updatedUidsCount":I
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_2
    if-ge v6, v5, :cond_9

    .line 12077
    invoke-virtual {v1, v6}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v7

    invoke-virtual {v0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v7

    .line 12078
    .local v7, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v1, v6}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v8

    .line 12080
    .local v8, "appCpuTimeUs":J
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v10}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v10

    .line 12081
    .local v10, "numClusters":I
    iget-object v11, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v11, :cond_2

    iget-object v11, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v11, v11

    if-eq v11, v10, :cond_3

    .line 12083
    :cond_2
    new-array v11, v10, [[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v11, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 12086
    :cond_3
    const/4 v11, 0x0

    .local v11, "cluster":I
    :goto_3
    array-length v12, v4

    if-ge v11, v12, :cond_8

    .line 12087
    aget-object v12, v4, v11

    array-length v12, v12

    .line 12088
    .local v12, "speedsInCluster":I
    iget-object v13, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v13, v13, v11

    if-eqz v13, :cond_4

    iget-object v13, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v13, v13, v11

    array-length v13, v13

    if-eq v12, v13, :cond_5

    .line 12090
    :cond_4
    iget-object v13, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-array v14, v12, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aput-object v14, v13, v11

    .line 12094
    :cond_5
    iget-object v13, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v13, v13, v11

    .line 12095
    .local v13, "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    const/4 v14, 0x0

    .local v14, "speed":I
    :goto_4
    if-ge v14, v12, :cond_7

    .line 12096
    aget-object v15, v13, v14

    if-nez v15, :cond_6

    .line 12097
    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v15, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v15, v13, v14

    .line 12099
    :cond_6
    aget-object v1, v13, v14

    aget-object v15, v4, v11

    aget-wide v15, v15, v14

    mul-long/2addr v15, v8

    move-object/from16 v17, v4

    move/from16 v18, v5

    .end local v4    # "clusterSpeedTimesMs":[[J
    .end local v5    # "updatedUidsCount":I
    .local v17, "clusterSpeedTimesMs":[[J
    .local v18, "updatedUidsCount":I
    div-long v4, v15, v2

    move/from16 v15, p2

    invoke-virtual {v1, v4, v5, v15}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12095
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v1, p1

    move-object/from16 v4, v17

    move/from16 v5, v18

    goto :goto_4

    .end local v17    # "clusterSpeedTimesMs":[[J
    .end local v18    # "updatedUidsCount":I
    .restart local v4    # "clusterSpeedTimesMs":[[J
    .restart local v5    # "updatedUidsCount":I
    :cond_7
    move/from16 v15, p2

    move-object/from16 v17, v4

    move/from16 v18, v5

    .line 12086
    .end local v4    # "clusterSpeedTimesMs":[[J
    .end local v5    # "updatedUidsCount":I
    .end local v12    # "speedsInCluster":I
    .end local v13    # "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    .end local v14    # "speed":I
    .restart local v17    # "clusterSpeedTimesMs":[[J
    .restart local v18    # "updatedUidsCount":I
    add-int/lit8 v11, v11, 0x1

    move-object/from16 v1, p1

    goto :goto_3

    .end local v17    # "clusterSpeedTimesMs":[[J
    .end local v18    # "updatedUidsCount":I
    .restart local v4    # "clusterSpeedTimesMs":[[J
    .restart local v5    # "updatedUidsCount":I
    :cond_8
    move/from16 v15, p2

    move-object/from16 v17, v4

    move/from16 v18, v5

    .line 12076
    .end local v4    # "clusterSpeedTimesMs":[[J
    .end local v5    # "updatedUidsCount":I
    .end local v7    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v8    # "appCpuTimeUs":J
    .end local v10    # "numClusters":I
    .end local v11    # "cluster":I
    .restart local v17    # "clusterSpeedTimesMs":[[J
    .restart local v18    # "updatedUidsCount":I
    add-int/lit8 v6, v6, 0x1

    move-object/from16 v1, p1

    goto :goto_2

    .end local v17    # "clusterSpeedTimesMs":[[J
    .end local v18    # "updatedUidsCount":I
    .restart local v4    # "clusterSpeedTimesMs":[[J
    .restart local v5    # "updatedUidsCount":I
    :cond_9
    move/from16 v15, p2

    move-object/from16 v17, v4

    move/from16 v18, v5

    .end local v4    # "clusterSpeedTimesMs":[[J
    .end local v5    # "updatedUidsCount":I
    .restart local v17    # "clusterSpeedTimesMs":[[J
    .restart local v18    # "updatedUidsCount":I
    goto :goto_5

    .line 12071
    .end local v6    # "i":I
    .end local v17    # "clusterSpeedTimesMs":[[J
    .end local v18    # "updatedUidsCount":I
    .restart local v4    # "clusterSpeedTimesMs":[[J
    :cond_a
    move/from16 v15, p2

    move-object/from16 v17, v4

    .line 12107
    .end local v4    # "clusterSpeedTimesMs":[[J
    .restart local v17    # "clusterSpeedTimesMs":[[J
    :goto_5
    return-void
.end method

.method public greylist-max-o updateCpuTimeLocked(ZZ)V
    .locals 5
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z

    .line 11956
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-nez v0, :cond_0

    .line 11957
    return-void

    .line 11964
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    if-nez v1, :cond_1

    .line 11965
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readFreqs(Lcom/android/internal/os/PowerProfile;)[J

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    .line 11971
    :cond_1
    const/4 v0, 0x0

    .line 11972
    .local v0, "partialTimersToConsider":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;>;"
    if-eqz p2, :cond_3

    .line 11973
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    move-object v0, v1

    .line 11974
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_3

    .line 11975
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 11981
    .local v2, "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    iget-boolean v3, v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    if-eqz v3, :cond_2

    iget-object v3, v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    if-eqz v3, :cond_2

    iget-object v3, v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    iget v3, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    const/16 v4, 0x3e8

    if-eq v3, v4, :cond_2

    .line 11982
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11974
    .end local v2    # "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    :cond_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 11986
    .end local v1    # "i":I
    :cond_3
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->markPartialTimersAsEligible()V

    .line 11990
    const/4 v1, 0x0

    if-nez p1, :cond_6

    .line 11991
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 11992
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 11993
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v2, v2, 0x2

    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 11994
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-boolean v2, v2, Lcom/android/internal/os/BatteryStatsImpl$Constants;->TRACK_CPU_ACTIVE_CLUSTER_TIME:Z

    if-eqz v2, :cond_4

    .line 11995
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 11996
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->readDelta(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    .line 11997
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v1, v1, 0x2

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 11999
    :cond_4
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length v1, v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "cluster":I
    :goto_1
    if-ltz v1, :cond_5

    .line 12000
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    aget-object v2, v2, v1

    invoke-virtual {v2}, Lcom/android/internal/os/KernelCpuSpeedReader;->readDelta()[J

    .line 11999
    add-int/lit8 v1, v1, -0x1

    goto :goto_1

    .line 12002
    .end local v1    # "cluster":I
    :cond_5
    return-void

    .line 12005
    :cond_6
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;->refreshUserIds()V

    .line 12006
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->perClusterTimesAvailable()Z

    move-result v2

    if-eqz v2, :cond_7

    .line 12007
    goto :goto_2

    :cond_7
    new-instance v1, Landroid/util/SparseLongArray;

    invoke-direct {v1}, Landroid/util/SparseLongArray;-><init>()V

    .line 12008
    .local v1, "updatedUids":Landroid/util/SparseLongArray;
    :goto_2
    invoke-virtual {p0, v0, v1, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readKernelUidCpuTimesLocked(Ljava/util/ArrayList;Landroid/util/SparseLongArray;Z)V

    .line 12011
    if-eqz v1, :cond_8

    .line 12012
    invoke-virtual {p0, v1, p1}, Lcom/android/internal/os/BatteryStatsImpl;->updateClusterSpeedTimes(Landroid/util/SparseLongArray;Z)V

    .line 12014
    :cond_8
    invoke-virtual {p0, v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl;->readKernelUidCpuFreqTimesLocked(Ljava/util/ArrayList;ZZ)V

    .line 12015
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v2, v2, 0x2

    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 12016
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-boolean v2, v2, Lcom/android/internal/os/BatteryStatsImpl$Constants;->TRACK_CPU_ACTIVE_CLUSTER_TIME:Z

    if-eqz v2, :cond_9

    .line 12017
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readKernelUidCpuActiveTimesLocked(Z)V

    .line 12018
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readKernelUidCpuClusterTimesLocked(Z)V

    .line 12019
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v2, v2, 0x2

    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 12021
    :cond_9
    return-void
.end method

.method public greylist-max-o updateDailyDeadlineLocked()V
    .locals 6

    .line 10250
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    .line 10251
    .local v0, "currentTime":J
    invoke-static {}, Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;

    move-result-object v2

    .line 10252
    .local v2, "calDeadline":Ljava/util/Calendar;
    invoke-virtual {v2, v0, v1}, Ljava/util/Calendar;->setTimeInMillis(J)V

    .line 10255
    const/4 v3, 0x6

    invoke-virtual {v2, v3}, Ljava/util/Calendar;->get(I)I

    move-result v4

    const/4 v5, 0x1

    add-int/2addr v4, v5

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10256
    const/16 v3, 0xe

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10257
    const/16 v3, 0xd

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10258
    const/16 v3, 0xc

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10259
    const/16 v3, 0xb

    invoke-virtual {v2, v3, v5}, Ljava/util/Calendar;->set(II)V

    .line 10260
    invoke-virtual {v2}, Ljava/util/Calendar;->getTimeInMillis()J

    move-result-wide v4

    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 10261
    const/4 v4, 0x3

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10262
    invoke-virtual {v2}, Ljava/util/Calendar;->getTimeInMillis()J

    move-result-wide v3

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 10263
    return-void
.end method

.method greylist-max-o updateDischargeScreenLevelsLocked(II)V
    .locals 0
    .param p1, "oldState"    # I
    .param p2, "newState"    # I

    .line 10956
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->updateOldDischargeScreenLevelLocked(I)V

    .line 10957
    invoke-direct {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->updateNewDischargeScreenLevelLocked(I)V

    .line 10958
    return-void
.end method

.method public greylist-max-o updateKernelMemoryBandwidthLocked()V
    .locals 8

    .line 11915
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;->updateStats()V

    .line 11916
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;->getBandwidthEntries()Landroid/util/LongSparseLongArray;

    move-result-object v0

    .line 11917
    .local v0, "bandwidthEntries":Landroid/util/LongSparseLongArray;
    invoke-virtual {v0}, Landroid/util/LongSparseLongArray;->size()I

    move-result v1

    .line 11919
    .local v1, "bandwidthEntryCount":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v1, :cond_1

    .line 11921
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->keyAt(I)J

    move-result-wide v4

    invoke-virtual {v3, v4, v5}, Landroid/util/LongSparseArray;->indexOfKey(J)I

    move-result v3

    move v4, v3

    .local v4, "index":I
    if-ltz v3, :cond_0

    .line 11922
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v3, v4}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .local v3, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_1

    .line 11924
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_0
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    .line 11925
    .restart local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->keyAt(I)J

    move-result-wide v6

    invoke-virtual {v5, v6, v7, v3}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    .line 11927
    :goto_1
    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->valueAt(I)J

    move-result-wide v5

    const/4 v7, 0x1

    invoke-virtual {v3, v5, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11919
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 11936
    .end local v2    # "i":I
    .end local v4    # "index":I
    :cond_1
    return-void
.end method

.method public greylist-max-o updateKernelWakelocksLocked()V
    .locals 10

    .line 11859
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    invoke-virtual {v0, v1}, Lcom/android/internal/os/KernelWakelockReader;->readKernelWakelockStats(Lcom/android/internal/os/KernelWakelockStats;)Lcom/android/internal/os/KernelWakelockStats;

    move-result-object v0

    .line 11861
    .local v0, "wakelockStats":Lcom/android/internal/os/KernelWakelockStats;
    const-string v1, "BatteryStatsImpl"

    if-nez v0, :cond_0

    .line 11863
    const-string v2, "Couldn\'t get kernel wake lock stats"

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11864
    return-void

    .line 11867
    :cond_0
    invoke-virtual {v0}, Lcom/android/internal/os/KernelWakelockStats;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_2

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    .line 11868
    .local v3, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/KernelWakelockStats$Entry;>;"
    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 11869
    .local v4, "name":Ljava/lang/String;
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/KernelWakelockStats$Entry;

    .line 11871
    .local v5, "kws":Lcom/android/internal/os/KernelWakelockStats$Entry;
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v6, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 11872
    .local v6, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v6, :cond_1

    .line 11873
    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v7, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v6, v7

    .line 11874
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v7, v4, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 11877
    :cond_1
    iget-wide v7, v5, Lcom/android/internal/os/KernelWakelockStats$Entry;->mTotalTime:J

    iget v9, v5, Lcom/android/internal/os/KernelWakelockStats$Entry;->mCount:I

    invoke-virtual {v6, v7, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11878
    iget v7, v5, Lcom/android/internal/os/KernelWakelockStats$Entry;->mVersion:I

    invoke-virtual {v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->setUpdateVersion(I)V

    .line 11879
    .end local v3    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/KernelWakelockStats$Entry;>;"
    .end local v4    # "name":Ljava/lang/String;
    .end local v5    # "kws":Lcom/android/internal/os/KernelWakelockStats$Entry;
    .end local v6    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_0

    .line 11881
    :cond_2
    const/4 v2, 0x0

    .line 11884
    .local v2, "numWakelocksSetStale":I
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_1
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_4

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/Map$Entry;

    .line 11885
    .local v4, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 11886
    .local v5, "st":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->getUpdateVersion()I

    move-result v6

    iget v7, v0, Lcom/android/internal/os/KernelWakelockStats;->kernelWakelockVersion:I

    if-eq v6, v7, :cond_3

    .line 11887
    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->endSample()V

    .line 11888
    add-int/lit8 v2, v2, 0x1

    .line 11890
    .end local v4    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v5    # "st":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_3
    goto :goto_1

    .line 11893
    :cond_4
    invoke-virtual {v0}, Lcom/android/internal/os/KernelWakelockStats;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_5

    .line 11894
    const-string v3, "All kernel wakelocks had time of zero"

    invoke-static {v1, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 11897
    :cond_5
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->size()I

    move-result v3

    if-ne v2, v3, :cond_6

    .line 11898
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "All kernel wakelocks were set stale. new version="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v0, Lcom/android/internal/os/KernelWakelockStats;->kernelWakelockVersion:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 11901
    :cond_6
    return-void
.end method

.method public greylist-max-o updateMobileRadioState(Landroid/telephony/ModemActivityInfo;)V
    .locals 38
    .param p1, "activityInfo"    # Landroid/telephony/ModemActivityInfo;

    .line 11355
    move-object/from16 v1, p0

    invoke-direct/range {p0 .. p1}, Lcom/android/internal/os/BatteryStatsImpl;->getDeltaModemActivityInfo(Landroid/telephony/ModemActivityInfo;)Landroid/telephony/ModemActivityInfo;

    move-result-object v2

    .line 11358
    .local v2, "deltaInfo":Landroid/telephony/ModemActivityInfo;
    invoke-direct {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->addModemTxPowerToHistory(Landroid/telephony/ModemActivityInfo;)V

    .line 11361
    const/4 v3, 0x0

    .line 11362
    .local v3, "delta":Landroid/net/NetworkStats;
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v4

    .line 11363
    :try_start_0
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    invoke-direct {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl;->readNetworkStatsLocked([Ljava/lang/String;)Landroid/net/NetworkStats;

    move-result-object v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_7

    .line 11364
    .local v0, "latestStats":Landroid/net/NetworkStats;
    if-eqz v0, :cond_0

    .line 11365
    :try_start_1
    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11366
    invoke-interface {v6}, Landroid/util/Pools$Pool;->acquire()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/net/NetworkStats;

    .line 11365
    const/4 v7, 0x0

    invoke-static {v0, v5, v7, v7, v6}, Landroid/net/NetworkStats;->subtract(Landroid/net/NetworkStats;Landroid/net/NetworkStats;Landroid/net/NetworkStats$NonMonotonicObserver;Ljava/lang/Object;Landroid/net/NetworkStats;)Landroid/net/NetworkStats;

    move-result-object v5

    move-object v3, v5

    .line 11367
    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    invoke-interface {v5, v6}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11368
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 11370
    .end local v0    # "latestStats":Landroid/net/NetworkStats;
    :catchall_0
    move-exception v0

    move-object/from16 v26, v2

    goto/16 :goto_10

    :cond_0
    :goto_0
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_7

    .line 11372
    monitor-enter p0

    .line 11373
    :try_start_3
    iget-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_5

    if-nez v0, :cond_2

    .line 11374
    if-eqz v3, :cond_1

    .line 11375
    :try_start_4
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v0, v3}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11377
    :cond_1
    monitor-exit p0

    return-void

    .line 11380
    :cond_2
    const/4 v0, 0x5

    const/4 v4, 0x1

    if-eqz v2, :cond_6

    .line 11381
    iput-boolean v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 11382
    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v5

    .line 11383
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v6

    int-to-long v6, v6

    .line 11382
    invoke-virtual {v5, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11384
    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getSleepTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v5

    .line 11385
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v6

    int-to-long v6, v6

    .line 11384
    invoke-virtual {v5, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11386
    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v5

    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()I

    move-result v6

    int-to-long v6, v6

    invoke-virtual {v5, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11387
    const/4 v5, 0x0

    .local v5, "lvl":I
    :goto_1
    if-ge v5, v0, :cond_3

    .line 11388
    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v6

    aget-object v6, v6, v5

    .line 11389
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getTransmitPowerInfo()Ljava/util/List;

    move-result-object v7

    .line 11390
    invoke-interface {v7, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/telephony/ModemActivityInfo$TransmitPower;

    invoke-virtual {v7}, Landroid/telephony/ModemActivityInfo$TransmitPower;->getTimeInMillis()I

    move-result v7

    int-to-long v7, v7

    .line 11389
    invoke-virtual {v6, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11387
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 11394
    .end local v5    # "lvl":I
    :cond_3
    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v6, "modem.controller.voltage"

    invoke-virtual {v5, v6}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v5

    const-wide v7, 0x408f400000000000L    # 1000.0

    div-double/2addr v5, v7

    .line 11396
    .local v5, "opVolt":D
    const-wide/16 v7, 0x0

    cmpl-double v7, v5, v7

    if-eqz v7, :cond_5

    .line 11397
    nop

    .line 11398
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v7

    int-to-double v7, v7

    iget-object v9, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v10, "modem.controller.sleep"

    .line 11399
    invoke-virtual {v9, v10}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v9

    mul-double/2addr v7, v9

    .line 11400
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v9

    int-to-double v9, v9

    iget-object v11, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v12, "modem.controller.idle"

    .line 11401
    invoke-virtual {v11, v12}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v11

    mul-double/2addr v9, v11

    add-double/2addr v7, v9

    .line 11402
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()I

    move-result v9

    int-to-double v9, v9

    iget-object v11, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v12, "modem.controller.rx"

    .line 11403
    invoke-virtual {v11, v12}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v11

    mul-double/2addr v9, v11

    add-double/2addr v7, v9

    .line 11404
    .local v7, "energyUsed":D
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getTransmitPowerInfo()Ljava/util/List;

    move-result-object v9

    .line 11405
    .local v9, "txPowerInfo":Ljava/util/List;, "Ljava/util/List<Landroid/telephony/ModemActivityInfo$TransmitPower;>;"
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_2
    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v11

    .line 11406
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v12

    .line 11405
    invoke-static {v11, v12}, Ljava/lang/Math;->min(II)I

    move-result v11

    if-ge v10, v11, :cond_4

    .line 11407
    invoke-interface {v9, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/telephony/ModemActivityInfo$TransmitPower;

    invoke-virtual {v11}, Landroid/telephony/ModemActivityInfo$TransmitPower;->getTimeInMillis()I

    move-result v11

    int-to-double v11, v11

    iget-object v13, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v14, "modem.controller.tx"

    .line 11408
    invoke-virtual {v13, v14, v10}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;I)D

    move-result-wide v13

    mul-double/2addr v11, v13

    add-double/2addr v7, v11

    .line 11406
    add-int/lit8 v10, v10, 0x1

    goto :goto_2

    .line 11412
    .end local v10    # "i":I
    :cond_4
    iget-object v10, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v10}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v10

    double-to-long v11, v7

    invoke-virtual {v10, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11416
    iget-object v10, v1, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    double-to-long v11, v7

    invoke-virtual {v10, v11, v12}, Lcom/android/internal/os/OppoDevicePowerStats;->recordMobilePowerDrainMaMs(J)V

    .line 11417
    iget-object v10, v1, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    invoke-virtual {v10, v2}, Lcom/android/internal/os/OppoDevicePowerStats;->updateMobileRadioState(Landroid/telephony/ModemActivityInfo;)V

    .line 11422
    iget-object v10, v1, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    .line 11423
    invoke-virtual {v10}, Lcom/android/internal/os/RailStats;->getCellularTotalEnergyUseduWs()J

    move-result-wide v10

    long-to-double v10, v10

    div-double/2addr v10, v5

    double-to-long v10, v10

    .line 11424
    .local v10, "monitoredRailChargeConsumedMaMs":J
    iget-object v12, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v12}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getMonitoredRailChargeConsumedMaMs()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v12

    invoke-virtual {v12, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11426
    iget-object v12, v1, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v13, v12, Landroid/os/BatteryStats$HistoryItem;->modemRailChargeMah:D

    move-wide/from16 v16, v5

    .end local v5    # "opVolt":D
    .local v16, "opVolt":D
    long-to-double v4, v10

    const-wide v18, 0x414b774000000000L    # 3600000.0

    div-double v4, v4, v18

    add-double/2addr v13, v4

    iput-wide v13, v12, Landroid/os/BatteryStats$HistoryItem;->modemRailChargeMah:D

    .line 11428
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v4

    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v12

    invoke-virtual {v1, v4, v5, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 11429
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v4}, Lcom/android/internal/os/RailStats;->resetCellularTotalEnergyUsed()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    goto :goto_4

    .line 11396
    .end local v7    # "energyUsed":D
    .end local v9    # "txPowerInfo":Ljava/util/List;, "Ljava/util/List<Landroid/telephony/ModemActivityInfo$TransmitPower;>;"
    .end local v10    # "monitoredRailChargeConsumedMaMs":J
    .end local v16    # "opVolt":D
    .restart local v5    # "opVolt":D
    :cond_5
    move-wide/from16 v16, v5

    .end local v5    # "opVolt":D
    .restart local v16    # "opVolt":D
    goto :goto_4

    .line 11550
    .end local v16    # "opVolt":D
    :catchall_1
    move-exception v0

    :goto_3
    move-object/from16 v26, v2

    goto/16 :goto_f

    .line 11432
    :cond_6
    :goto_4
    :try_start_5
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v4

    .line 11433
    .local v4, "elapsedRealtimeMs":J
    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    const-wide/16 v7, 0x3e8

    mul-long/2addr v7, v4

    invoke-virtual {v6, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v6

    .line 11435
    .local v6, "radioTime":J
    iget-object v8, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v8, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->setMark(J)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    .line 11438
    const-wide/16 v8, 0x0

    cmp-long v10, v6, v8

    if-gez v10, :cond_8

    .line 11439
    if-eqz v3, :cond_7

    .line 11440
    :try_start_6
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v0, v3}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11441
    const/4 v0, 0x0

    move-object v3, v0

    .line 11443
    :cond_7
    const-string v0, "BatteryStatsImpl"

    const-string v8, "Invalid RadioTime, return."

    invoke-static {v0, v8}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11444
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    return-void

    .line 11448
    :cond_8
    const-wide/16 v10, 0x0

    .line 11449
    .local v10, "totalRxPackets":J
    const-wide/16 v12, 0x0

    .line 11450
    .local v12, "totalTxPackets":J
    if-eqz v3, :cond_15

    .line 11451
    :try_start_7
    new-instance v14, Landroid/net/NetworkStats$Entry;

    invoke-direct {v14}, Landroid/net/NetworkStats$Entry;-><init>()V

    .line 11452
    .local v14, "entry":Landroid/net/NetworkStats$Entry;
    invoke-virtual {v3}, Landroid/net/NetworkStats;->size()I

    move-result v16
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_5

    move/from16 v17, v16

    .line 11453
    .local v17, "size":I
    const/16 v16, 0x0

    move/from16 v15, v16

    .local v15, "i":I
    :goto_5
    move/from16 v0, v17

    .end local v17    # "size":I
    .local v0, "size":I
    if-ge v15, v0, :cond_b

    .line 11454
    :try_start_8
    invoke-virtual {v3, v15, v14}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    move-result-object v17

    move-object/from16 v14, v17

    .line 11455
    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    const-wide/16 v20, 0x0

    cmp-long v8, v8, v20

    if-nez v8, :cond_9

    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    cmp-long v8, v8, v20

    if-nez v8, :cond_9

    .line 11456
    move-wide/from16 v28, v4

    goto/16 :goto_6

    .line 11465
    :cond_9
    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    add-long/2addr v10, v8

    .line 11466
    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    add-long/2addr v12, v8

    .line 11468
    iget v8, v14, Landroid/net/NetworkStats$Entry;->uid:I

    invoke-virtual {v1, v8}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v8

    invoke-virtual {v1, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v22

    .line 11469
    .local v22, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    const/16 v23, 0x0

    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->rxBytes:J

    move-wide/from16 v28, v4

    .end local v4    # "elapsedRealtimeMs":J
    .local v28, "elapsedRealtimeMs":J
    iget-wide v4, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-wide/from16 v24, v8

    move-wide/from16 v26, v4

    invoke-virtual/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11471
    const/16 v31, 0x1

    iget-wide v4, v14, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v30, v22

    move-wide/from16 v32, v4

    move-wide/from16 v34, v8

    invoke-virtual/range {v30 .. v35}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11473
    iget v4, v14, Landroid/net/NetworkStats$Entry;->set:I

    if-nez v4, :cond_a

    .line 11474
    const/16 v31, 0x6

    iget-wide v4, v14, Landroid/net/NetworkStats$Entry;->rxBytes:J

    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-object/from16 v30, v22

    move-wide/from16 v32, v4

    move-wide/from16 v34, v8

    invoke-virtual/range {v30 .. v35}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11476
    const/16 v33, 0x7

    iget-wide v4, v14, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v32, v22

    move-wide/from16 v34, v4

    move-wide/from16 v36, v8

    invoke-virtual/range {v32 .. v37}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11480
    :cond_a
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v5, 0x0

    aget-object v4, v4, v5

    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->rxBytes:J

    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11482
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v5, 0x1

    aget-object v4, v4, v5

    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->txBytes:J

    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11484
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v8, 0x0

    aget-object v4, v4, v8

    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11486
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v5, 0x1

    aget-object v4, v4, v5

    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 11453
    .end local v22    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :goto_6
    add-int/lit8 v15, v15, 0x1

    move/from16 v17, v0

    move-wide/from16 v4, v28

    const/4 v0, 0x5

    const-wide/16 v8, 0x0

    goto/16 :goto_5

    .end local v28    # "elapsedRealtimeMs":J
    .restart local v4    # "elapsedRealtimeMs":J
    :cond_b
    move-wide/from16 v28, v4

    .line 11492
    .end local v4    # "elapsedRealtimeMs":J
    .end local v15    # "i":I
    .restart local v28    # "elapsedRealtimeMs":J
    :try_start_9
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    iget-object v8, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v9, 0x3

    aget-object v8, v8, v9

    .line 11493
    move-wide v15, v6

    const/4 v9, 0x0

    .end local v6    # "radioTime":J
    .local v15, "radioTime":J
    invoke-virtual {v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v5

    .line 11492
    const/4 v7, 0x1

    invoke-virtual {v4, v7, v5, v6}, Lcom/android/internal/os/OppoDevicePowerStats;->recordNetworkActivityBytes(IJ)V

    .line 11494
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v6, 0x2

    aget-object v5, v5, v6

    .line 11495
    const/4 v6, 0x0

    invoke-virtual {v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v7

    .line 11494
    invoke-virtual {v4, v6, v7, v8}, Lcom/android/internal/os/OppoDevicePowerStats;->recordNetworkActivityBytes(IJ)V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_5

    .line 11499
    add-long v4, v10, v12

    .line 11500
    .local v4, "totalPackets":J
    const-wide/16 v6, 0x0

    cmp-long v8, v4, v6

    if-lez v8, :cond_13

    .line 11501
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_7
    if-ge v6, v0, :cond_12

    .line 11502
    :try_start_a
    invoke-virtual {v3, v6, v14}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    move-result-object v7

    move-object v14, v7

    .line 11503
    iget-wide v7, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    const-wide/16 v19, 0x0

    cmp-long v7, v7, v19

    if-nez v7, :cond_c

    :try_start_b
    iget-wide v7, v14, Landroid/net/NetworkStats$Entry;->txPackets:J
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_1

    cmp-long v7, v7, v19

    if-nez v7, :cond_c

    .line 11504
    move/from16 v17, v0

    move-object/from16 v26, v2

    goto/16 :goto_b

    .line 11507
    :cond_c
    :try_start_c
    iget v7, v14, Landroid/net/NetworkStats$Entry;->uid:I

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v7

    .line 11510
    .local v7, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v8, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move/from16 v17, v0

    .end local v0    # "size":I
    .restart local v17    # "size":I
    iget-wide v0, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    add-long/2addr v8, v0

    .line 11511
    .local v8, "appPackets":J
    mul-long v0, v15, v8

    div-long/2addr v0, v4

    .line 11512
    .local v0, "appRadioTime":J
    invoke-virtual {v7, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteMobileRadioActiveTimeLocked(J)V

    .line 11516
    sub-long/2addr v15, v0

    .line 11517
    sub-long/2addr v4, v8

    .line 11519
    if-eqz v2, :cond_11

    .line 11520
    nop

    .line 11521
    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateModemControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v19
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_4

    .line 11522
    .local v19, "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    const-wide/16 v20, 0x0

    cmp-long v22, v10, v20

    if-lez v22, :cond_e

    move-wide/from16 v22, v0

    .end local v0    # "appRadioTime":J
    .local v22, "appRadioTime":J
    :try_start_d
    iget-wide v0, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    cmp-long v0, v0, v20

    if-lez v0, :cond_d

    .line 11523
    iget-wide v0, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    .line 11524
    move-wide/from16 v24, v4

    .end local v4    # "totalPackets":J
    .local v24, "totalPackets":J
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()I

    move-result v4

    int-to-long v4, v4

    mul-long/2addr v0, v4

    div-long/2addr v0, v10

    .line 11525
    .local v0, "rxMs":J
    invoke-virtual/range {v19 .. v19}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_2

    goto :goto_8

    .line 11522
    .end local v0    # "rxMs":J
    .end local v24    # "totalPackets":J
    .restart local v4    # "totalPackets":J
    :cond_d
    move-wide/from16 v24, v4

    .end local v4    # "totalPackets":J
    .restart local v24    # "totalPackets":J
    goto :goto_8

    .line 11550
    .end local v6    # "i":I
    .end local v7    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v8    # "appPackets":J
    .end local v10    # "totalRxPackets":J
    .end local v12    # "totalTxPackets":J
    .end local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v15    # "radioTime":J
    .end local v17    # "size":I
    .end local v19    # "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v22    # "appRadioTime":J
    .end local v24    # "totalPackets":J
    .end local v28    # "elapsedRealtimeMs":J
    :catchall_2
    move-exception v0

    move-object/from16 v1, p0

    goto/16 :goto_3

    .line 11522
    .local v0, "appRadioTime":J
    .restart local v4    # "totalPackets":J
    .restart local v6    # "i":I
    .restart local v7    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v8    # "appPackets":J
    .restart local v10    # "totalRxPackets":J
    .restart local v12    # "totalTxPackets":J
    .restart local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .restart local v15    # "radioTime":J
    .restart local v17    # "size":I
    .restart local v19    # "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .restart local v28    # "elapsedRealtimeMs":J
    :cond_e
    move-wide/from16 v22, v0

    move-wide/from16 v24, v4

    .line 11528
    .end local v0    # "appRadioTime":J
    .end local v4    # "totalPackets":J
    .restart local v22    # "appRadioTime":J
    .restart local v24    # "totalPackets":J
    :goto_8
    const-wide/16 v0, 0x0

    cmp-long v4, v12, v0

    if-lez v4, :cond_10

    :try_start_e
    iget-wide v4, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    cmp-long v4, v4, v0

    if-lez v4, :cond_10

    .line 11529
    const/4 v0, 0x0

    .local v0, "lvl":I
    :goto_9
    const/4 v1, 0x5

    if-ge v0, v1, :cond_f

    .line 11530
    iget-wide v4, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    .line 11531
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getTransmitPowerInfo()Ljava/util/List;

    move-result-object v1

    .line 11532
    invoke-interface {v1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/telephony/ModemActivityInfo$TransmitPower;

    invoke-virtual {v1}, Landroid/telephony/ModemActivityInfo$TransmitPower;->getTimeInMillis()I

    move-result v1
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_4

    move-object/from16 v26, v2

    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .local v26, "deltaInfo":Landroid/telephony/ModemActivityInfo;
    int-to-long v1, v1

    mul-long/2addr v4, v1

    .line 11533
    .local v4, "txMs":J
    :try_start_f
    div-long v1, v4, v12

    .line 11534
    .end local v4    # "txMs":J
    .local v1, "txMs":J
    invoke-virtual/range {v19 .. v19}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    aget-object v4, v4, v0

    invoke-virtual {v4, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_3

    .line 11529
    .end local v1    # "txMs":J
    add-int/lit8 v0, v0, 0x1

    move-object/from16 v2, v26

    goto :goto_9

    .line 11550
    .end local v0    # "lvl":I
    .end local v6    # "i":I
    .end local v7    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v8    # "appPackets":J
    .end local v10    # "totalRxPackets":J
    .end local v12    # "totalTxPackets":J
    .end local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v15    # "radioTime":J
    .end local v17    # "size":I
    .end local v19    # "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v22    # "appRadioTime":J
    .end local v24    # "totalPackets":J
    .end local v28    # "elapsedRealtimeMs":J
    :catchall_3
    move-exception v0

    move-object/from16 v1, p0

    goto :goto_f

    .line 11529
    .end local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v0    # "lvl":I
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v6    # "i":I
    .restart local v7    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v8    # "appPackets":J
    .restart local v10    # "totalRxPackets":J
    .restart local v12    # "totalTxPackets":J
    .restart local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .restart local v15    # "radioTime":J
    .restart local v17    # "size":I
    .restart local v19    # "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .restart local v22    # "appRadioTime":J
    .restart local v24    # "totalPackets":J
    .restart local v28    # "elapsedRealtimeMs":J
    :cond_f
    move-object/from16 v26, v2

    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    goto :goto_a

    .line 11528
    .end local v0    # "lvl":I
    .end local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :cond_10
    move-object/from16 v26, v2

    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    goto :goto_a

    .line 11519
    .end local v19    # "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v22    # "appRadioTime":J
    .end local v24    # "totalPackets":J
    .end local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .local v0, "appRadioTime":J
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .local v4, "totalPackets":J
    :cond_11
    move-wide/from16 v22, v0

    move-object/from16 v26, v2

    move-wide/from16 v24, v4

    .line 11501
    .end local v0    # "appRadioTime":J
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .end local v4    # "totalPackets":J
    .end local v7    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v8    # "appPackets":J
    .restart local v24    # "totalPackets":J
    .restart local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :goto_a
    move-wide/from16 v4, v24

    .end local v24    # "totalPackets":J
    .restart local v4    # "totalPackets":J
    :goto_b
    add-int/lit8 v6, v6, 0x1

    move-object/from16 v1, p0

    move/from16 v0, v17

    move-object/from16 v2, v26

    goto/16 :goto_7

    .line 11550
    .end local v4    # "totalPackets":J
    .end local v6    # "i":I
    .end local v10    # "totalRxPackets":J
    .end local v12    # "totalTxPackets":J
    .end local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v15    # "radioTime":J
    .end local v17    # "size":I
    .end local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .end local v28    # "elapsedRealtimeMs":J
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :catchall_4
    move-exception v0

    move-object/from16 v26, v2

    move-object/from16 v1, p0

    goto :goto_f

    .line 11501
    .local v0, "size":I
    .restart local v4    # "totalPackets":J
    .restart local v6    # "i":I
    .restart local v10    # "totalRxPackets":J
    .restart local v12    # "totalTxPackets":J
    .restart local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .restart local v15    # "radioTime":J
    .restart local v28    # "elapsedRealtimeMs":J
    :cond_12
    move/from16 v17, v0

    move-object/from16 v26, v2

    .end local v0    # "size":I
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v17    # "size":I
    .restart local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    move-wide v6, v15

    goto :goto_c

    .line 11500
    .end local v6    # "i":I
    .end local v17    # "size":I
    .end local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v0    # "size":I
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :cond_13
    move/from16 v17, v0

    move-object/from16 v26, v2

    .end local v0    # "size":I
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v17    # "size":I
    .restart local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    move-wide v6, v15

    .line 11541
    .end local v15    # "radioTime":J
    .local v6, "radioTime":J
    :goto_c
    const-wide/16 v0, 0x0

    cmp-long v0, v6, v0

    if-lez v0, :cond_14

    .line 11543
    move-object/from16 v1, p0

    :try_start_10
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11544
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const-wide/16 v8, 0x1

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_d

    .line 11541
    :cond_14
    move-object/from16 v1, p0

    .line 11547
    :goto_d
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v0, v3}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11548
    const/4 v0, 0x0

    move-object v3, v0

    .end local v3    # "delta":Landroid/net/NetworkStats;
    .local v0, "delta":Landroid/net/NetworkStats;
    goto :goto_e

    .line 11450
    .end local v0    # "delta":Landroid/net/NetworkStats;
    .end local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v17    # "size":I
    .end local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .end local v28    # "elapsedRealtimeMs":J
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v3    # "delta":Landroid/net/NetworkStats;
    .local v4, "elapsedRealtimeMs":J
    :cond_15
    move-object/from16 v26, v2

    move-wide/from16 v28, v4

    move-wide v15, v6

    .line 11550
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .end local v4    # "elapsedRealtimeMs":J
    .end local v6    # "radioTime":J
    .end local v10    # "totalRxPackets":J
    .end local v12    # "totalTxPackets":J
    .restart local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :goto_e
    monitor-exit p0

    .line 11551
    return-void

    .line 11550
    .end local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :catchall_5
    move-exception v0

    move-object/from16 v26, v2

    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :goto_f
    monitor-exit p0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_6

    throw v0

    :catchall_6
    move-exception v0

    goto :goto_f

    .line 11370
    .end local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :catchall_7
    move-exception v0

    move-object/from16 v26, v2

    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v26    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :goto_10
    :try_start_11
    monitor-exit v4
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_8

    throw v0

    :catchall_8
    move-exception v0

    goto :goto_10
.end method

.method public greylist-max-o updateProcStateCpuTimes(ZZ)V
    .locals 10
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z

    .line 462
    monitor-enter p0

    .line 463
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-boolean v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;->TRACK_CPU_TIMES_BY_PROC_STATE:Z

    if-nez v0, :cond_0

    .line 464
    monitor-exit p0

    return-void

    .line 466
    :cond_0
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->initKernelSingleUidTimeReaderLocked()Z

    move-result v0

    if-nez v0, :cond_1

    .line 467
    monitor-exit p0

    return-void

    .line 471
    :cond_1
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsPerProcessStateCpuDataStale:Z

    if-eqz v0, :cond_2

    .line 472
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0}, Landroid/util/SparseIntArray;->clear()V

    .line 473
    monitor-exit p0

    return-void

    .line 476
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-nez v0, :cond_3

    .line 477
    monitor-exit p0

    return-void

    .line 479
    :cond_3
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0}, Landroid/util/SparseIntArray;->clone()Landroid/util/SparseIntArray;

    move-result-object v0

    .line 480
    .local v0, "uidStates":Landroid/util/SparseIntArray;
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v1}, Landroid/util/SparseIntArray;->clear()V

    .line 481
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 482
    invoke-virtual {v0}, Landroid/util/SparseIntArray;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_9

    .line 483
    invoke-virtual {v0, v1}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v2

    .line 484
    .local v2, "uid":I
    invoke-virtual {v0, v1}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v3

    .line 487
    .local v3, "procState":I
    monitor-enter p0

    .line 491
    :try_start_1
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getAvailableUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    .line 492
    .local v4, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-nez v4, :cond_4

    .line 493
    monitor-exit p0

    goto :goto_4

    .line 495
    :cond_4
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mChildUids:Landroid/util/IntArray;

    if-nez v5, :cond_5

    .line 496
    const/4 v5, 0x0

    .local v5, "isolatedUids":[I
    goto :goto_2

    .line 498
    .end local v5    # "isolatedUids":[I
    :cond_5
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mChildUids:Landroid/util/IntArray;

    invoke-virtual {v5}, Landroid/util/IntArray;->toArray()[I

    move-result-object v5

    .line 499
    .restart local v5    # "isolatedUids":[I
    array-length v6, v5

    add-int/lit8 v6, v6, -0x1

    .local v6, "j":I
    :goto_1
    if-ltz v6, :cond_6

    .line 500
    iget-object v7, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mChildUids:Landroid/util/IntArray;

    invoke-virtual {v7, v6}, Landroid/util/IntArray;->get(I)I

    move-result v7

    aput v7, v5, v6

    .line 499
    add-int/lit8 v6, v6, -0x1

    goto :goto_1

    .line 503
    .end local v6    # "j":I
    :cond_6
    :goto_2
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 504
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v6, v2}, Lcom/android/internal/os/KernelSingleUidTimeReader;->readDeltaMs(I)[J

    move-result-object v6

    .line 505
    .local v6, "cpuTimesMs":[J
    if-eqz v5, :cond_7

    .line 506
    array-length v7, v5

    add-int/lit8 v7, v7, -0x1

    .local v7, "j":I
    :goto_3
    if-ltz v7, :cond_7

    .line 507
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    aget v9, v5, v7

    .line 508
    invoke-virtual {v8, v9}, Lcom/android/internal/os/KernelSingleUidTimeReader;->readDeltaMs(I)[J

    move-result-object v8

    .line 507
    invoke-virtual {p0, v6, v8}, Lcom/android/internal/os/BatteryStatsImpl;->addCpuTimes([J[J)[J

    move-result-object v6

    .line 506
    add-int/lit8 v7, v7, -0x1

    goto :goto_3

    .line 511
    .end local v7    # "j":I
    :cond_7
    if-eqz p1, :cond_8

    if-eqz v6, :cond_8

    .line 512
    monitor-enter p0

    .line 513
    :try_start_2
    invoke-static {v4, v3, v6, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$200(Lcom/android/internal/os/BatteryStatsImpl$Uid;I[JZ)V

    .line 514
    invoke-static {v4, v3, v6, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$300(Lcom/android/internal/os/BatteryStatsImpl$Uid;I[JZ)V

    .line 515
    monitor-exit p0

    goto :goto_4

    :catchall_0
    move-exception v7

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v7

    .line 482
    .end local v2    # "uid":I
    .end local v3    # "procState":I
    .end local v4    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v5    # "isolatedUids":[I
    .end local v6    # "cpuTimesMs":[J
    :cond_8
    :goto_4
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 503
    .restart local v2    # "uid":I
    .restart local v3    # "procState":I
    :catchall_1
    move-exception v4

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v4

    .line 518
    .end local v1    # "i":I
    .end local v2    # "uid":I
    .end local v3    # "procState":I
    :cond_9
    return-void

    .line 481
    .end local v0    # "uidStates":Landroid/util/SparseIntArray;
    :catchall_2
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v0
.end method

.method public blacklist updateRailStatsLocked()V
    .locals 2

    .line 11849
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRailEnergyDataCallback:Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v0}, Lcom/android/internal/os/RailStats;->isRailStatsAvailable()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 11852
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRailEnergyDataCallback:Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-interface {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$RailEnergyDataCallback;->fillRailDataStats(Lcom/android/internal/os/RailStats;)V

    .line 11853
    return-void

    .line 11850
    :cond_1
    :goto_0
    return-void
.end method

.method public greylist-max-o updateRpmStatsLocked()V
    .locals 18

    .line 11796
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    if-nez v1, :cond_0

    return-void

    .line 11797
    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    .line 11798
    .local v1, "now":J
    iget-wide v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    sub-long v3, v1, v3

    const-wide/16 v5, 0x3e8

    cmp-long v3, v3, v5

    if-ltz v3, :cond_1

    .line 11799
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    invoke-interface {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;->fillLowPowerStats(Lcom/android/internal/os/RpmStats;)V

    .line 11800
    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 11804
    :cond_1
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    iget-object v3, v3, Lcom/android/internal/os/RpmStats;->mPlatformLowPowerStats:Ljava/util/Map;

    invoke-interface {v3}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    const-string v7, "."

    if-eqz v4, :cond_3

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/Map$Entry;

    .line 11807
    .local v4, "pstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;>;"
    invoke-interface {v4}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Ljava/lang/String;

    .line 11808
    .local v8, "pName":Ljava/lang/String;
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget-wide v9, v9, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mTimeMs:J

    mul-long/2addr v9, v5

    .line 11809
    .local v9, "pTimeUs":J
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget v11, v11, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mCount:I

    .line 11810
    .local v11, "pCount":I
    invoke-virtual {v0, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v12

    invoke-virtual {v12, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11817
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget-object v12, v12, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mVoters:Ljava/util/Map;

    invoke-interface {v12}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v12

    invoke-interface {v12}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v12

    :goto_1
    invoke-interface {v12}, Ljava/util/Iterator;->hasNext()Z

    move-result v13

    if-eqz v13, :cond_2

    invoke-interface {v12}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Ljava/util/Map$Entry;

    .line 11818
    .local v13, "voter":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    new-instance v14, Ljava/lang/StringBuilder;

    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v14, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v14, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v13}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Ljava/lang/String;

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v14

    .line 11819
    .local v14, "vName":Ljava/lang/String;
    invoke-interface {v13}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/internal/os/RpmStats$PowerStateElement;

    move-wide/from16 v16, v1

    .end local v1    # "now":J
    .local v16, "now":J
    iget-wide v1, v15, Lcom/android/internal/os/RpmStats$PowerStateElement;->mTimeMs:J

    mul-long/2addr v1, v5

    .line 11820
    .local v1, "vTimeUs":J
    invoke-interface {v13}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget v15, v15, Lcom/android/internal/os/RpmStats$PowerStateElement;->mCount:I

    .line 11821
    .local v15, "vCount":I
    invoke-virtual {v0, v14}, Lcom/android/internal/os/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v5

    invoke-virtual {v5, v1, v2, v15}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11825
    .end local v1    # "vTimeUs":J
    .end local v13    # "voter":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    .end local v14    # "vName":Ljava/lang/String;
    .end local v15    # "vCount":I
    move-wide/from16 v1, v16

    const-wide/16 v5, 0x3e8

    goto :goto_1

    .line 11817
    .end local v16    # "now":J
    .local v1, "now":J
    :cond_2
    move-wide/from16 v16, v1

    .line 11826
    .end local v1    # "now":J
    .end local v4    # "pstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;>;"
    .end local v8    # "pName":Ljava/lang/String;
    .end local v9    # "pTimeUs":J
    .end local v11    # "pCount":I
    .restart local v16    # "now":J
    const-wide/16 v5, 0x3e8

    goto/16 :goto_0

    .line 11829
    .end local v16    # "now":J
    .restart local v1    # "now":J
    :cond_3
    move-wide/from16 v16, v1

    .end local v1    # "now":J
    .restart local v16    # "now":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    iget-object v1, v1, Lcom/android/internal/os/RpmStats;->mSubsystemLowPowerStats:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_2
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_5

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 11831
    .local v2, "subsys":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateSubsystem;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 11833
    .local v3, "subsysName":Ljava/lang/String;
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/RpmStats$PowerStateSubsystem;

    iget-object v4, v4, Lcom/android/internal/os/RpmStats$PowerStateSubsystem;->mStates:Ljava/util/Map;

    invoke-interface {v4}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_3
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_4

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/util/Map$Entry;

    .line 11834
    .local v5, "sstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v5}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Ljava/lang/String;

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 11835
    .local v6, "name":Ljava/lang/String;
    invoke-interface {v5}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget-wide v8, v8, Lcom/android/internal/os/RpmStats$PowerStateElement;->mTimeMs:J

    const-wide/16 v10, 0x3e8

    mul-long/2addr v8, v10

    .line 11836
    .local v8, "timeUs":J
    invoke-interface {v5}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget v12, v12, Lcom/android/internal/os/RpmStats$PowerStateElement;->mCount:I

    .line 11837
    .local v12, "count":I
    invoke-virtual {v0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v13

    invoke-virtual {v13, v8, v9, v12}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11841
    .end local v5    # "sstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    .end local v6    # "name":Ljava/lang/String;
    .end local v8    # "timeUs":J
    .end local v12    # "count":I
    goto :goto_3

    .line 11833
    :cond_4
    const-wide/16 v10, 0x3e8

    .line 11842
    .end local v2    # "subsys":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateSubsystem;>;"
    .end local v3    # "subsysName":Ljava/lang/String;
    goto :goto_2

    .line 11843
    :cond_5
    return-void
.end method

.method public greylist-max-o updateTimeBasesLocked(ZIJJ)V
    .locals 18
    .param p1, "unplugged"    # Z
    .param p2, "screenState"    # I
    .param p3, "uptime"    # J
    .param p5, "realtime"    # J

    .line 3908
    move-object/from16 v0, p0

    move/from16 v7, p1

    move-wide/from16 v8, p3

    move-wide/from16 v10, p5

    move/from16 v12, p2

    invoke-virtual {v0, v12}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    const/4 v13, 0x1

    xor-int/2addr v1, v13

    move v14, v1

    .line 3909
    .local v14, "screenOff":Z
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    const/4 v15, 0x0

    if-eq v7, v1, :cond_0

    move v1, v13

    goto :goto_0

    :cond_0
    move v1, v15

    :goto_0
    move/from16 v16, v1

    .line 3910
    .local v16, "updateOnBatteryTimeBase":Z
    if-eqz v7, :cond_1

    if-eqz v14, :cond_1

    move v1, v13

    goto :goto_1

    :cond_1
    move v1, v15

    :goto_1
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 3911
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v2

    if-eq v1, v2, :cond_2

    move v1, v13

    goto :goto_2

    :cond_2
    move v1, v15

    :goto_2
    move/from16 v17, v1

    .line 3913
    .local v17, "updateOnBatteryScreenOffTimeBase":Z
    if-nez v17, :cond_3

    if-eqz v16, :cond_8

    .line 3914
    :cond_3
    if-eqz v17, :cond_4

    .line 3915
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateKernelWakelocksLocked()V

    .line 3916
    invoke-direct/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateBatteryPropertiesLocked()V

    .line 3921
    :cond_4
    if-eqz v16, :cond_5

    .line 3922
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateRpmStatsLocked()V

    .line 3930
    :cond_5
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move/from16 v2, p1

    move-wide/from16 v3, p3

    move-wide/from16 v5, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->setRunning(ZJJ)Z

    .line 3931
    if-eqz v16, :cond_6

    .line 3932
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    sub-int/2addr v1, v13

    .local v1, "i":I
    :goto_3
    if-ltz v1, :cond_6

    .line 3933
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-virtual {v2, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->updateOnBatteryBgTimeBase(JJ)Z

    .line 3932
    add-int/lit8 v1, v1, -0x1

    goto :goto_3

    .line 3936
    .end local v1    # "i":I
    :cond_6
    if-eqz v17, :cond_8

    .line 3937
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    if-eqz v7, :cond_7

    if-eqz v14, :cond_7

    move v2, v13

    goto :goto_4

    :cond_7
    move v2, v15

    :goto_4
    move-wide/from16 v3, p3

    move-wide/from16 v5, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->setRunning(ZJJ)Z

    .line 3938
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    sub-int/2addr v1, v13

    .restart local v1    # "i":I
    :goto_5
    if-ltz v1, :cond_8

    .line 3939
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-virtual {v2, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->updateOnBatteryScreenOffBgTimeBase(JJ)Z

    .line 3938
    add-int/lit8 v1, v1, -0x1

    goto :goto_5

    .line 3943
    .end local v1    # "i":I
    :cond_8
    return-void
.end method

.method public blacklist updateWifiState(Landroid/os/connectivity/WifiActivityEnergyInfo;)V
    .locals 48
    .param p1, "info"    # Landroid/os/connectivity/WifiActivityEnergyInfo;

    .line 11049
    move-object/from16 v1, p0

    const/4 v2, 0x0

    .line 11050
    .local v2, "delta":Landroid/net/NetworkStats;
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v3

    .line 11051
    :try_start_0
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    invoke-direct {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl;->readNetworkStatsLocked([Ljava/lang/String;)Landroid/net/NetworkStats;

    move-result-object v0

    .line 11052
    .local v0, "latestStats":Landroid/net/NetworkStats;
    if-eqz v0, :cond_0

    .line 11053
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11054
    invoke-interface {v5}, Landroid/util/Pools$Pool;->acquire()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/net/NetworkStats;

    .line 11053
    const/4 v6, 0x0

    invoke-static {v0, v4, v6, v6, v5}, Landroid/net/NetworkStats;->subtract(Landroid/net/NetworkStats;Landroid/net/NetworkStats;Landroid/net/NetworkStats$NonMonotonicObserver;Ljava/lang/Object;Landroid/net/NetworkStats;)Landroid/net/NetworkStats;

    move-result-object v4

    move-object v2, v4

    .line 11055
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    invoke-interface {v4, v5}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11056
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 11058
    .end local v0    # "latestStats":Landroid/net/NetworkStats;
    :cond_0
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_4

    .line 11060
    monitor-enter p0

    .line 11061
    :try_start_1
    iget-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-nez v0, :cond_2

    .line 11062
    if-eqz v2, :cond_1

    .line 11063
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v0, v2}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11065
    :cond_1
    monitor-exit p0

    return-void

    .line 11068
    :cond_2
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    .line 11069
    .local v3, "elapsedRealtimeMs":J
    new-instance v0, Landroid/util/SparseLongArray;

    invoke-direct {v0}, Landroid/util/SparseLongArray;-><init>()V

    .line 11070
    .local v0, "rxPackets":Landroid/util/SparseLongArray;
    new-instance v5, Landroid/util/SparseLongArray;

    invoke-direct {v5}, Landroid/util/SparseLongArray;-><init>()V

    .line 11071
    .local v5, "txPackets":Landroid/util/SparseLongArray;
    const-wide/16 v6, 0x0

    .line 11072
    .local v6, "totalTxPackets":J
    const-wide/16 v8, 0x0

    .line 11073
    .local v8, "totalRxPackets":J
    if-eqz v2, :cond_9

    .line 11074
    new-instance v13, Landroid/net/NetworkStats$Entry;

    invoke-direct {v13}, Landroid/net/NetworkStats$Entry;-><init>()V

    .line 11075
    .local v13, "entry":Landroid/net/NetworkStats$Entry;
    invoke-virtual {v2}, Landroid/net/NetworkStats;->size()I

    move-result v14

    .line 11076
    .local v14, "size":I
    const/4 v15, 0x0

    .local v15, "i":I
    :goto_0
    if-ge v15, v14, :cond_8

    .line 11077
    invoke-virtual {v2, v15, v13}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    move-result-object v18

    move-object/from16 v13, v18

    .line 11085
    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    const-wide/16 v18, 0x0

    cmp-long v10, v10, v18

    if-nez v10, :cond_3

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    cmp-long v10, v10, v18

    if-nez v10, :cond_3

    .line 11087
    move-wide/from16 v26, v3

    goto/16 :goto_2

    .line 11090
    :cond_3
    iget v10, v13, Landroid/net/NetworkStats$Entry;->uid:I

    invoke-virtual {v1, v10}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v10

    invoke-virtual {v1, v10}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v20

    .line 11091
    .local v20, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    const-wide/16 v18, 0x0

    cmp-long v10, v10, v18

    if-eqz v10, :cond_5

    .line 11092
    const/16 v21, 0x2

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    move-wide/from16 v26, v3

    .end local v3    # "elapsedRealtimeMs":J
    .local v26, "elapsedRealtimeMs":J
    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-wide/from16 v22, v10

    move-wide/from16 v24, v3

    invoke-virtual/range {v20 .. v25}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11094
    iget v3, v13, Landroid/net/NetworkStats$Entry;->set:I

    if-nez v3, :cond_4

    .line 11095
    const/16 v29, 0x8

    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-object/from16 v28, v20

    move-wide/from16 v30, v3

    move-wide/from16 v32, v10

    invoke-virtual/range {v28 .. v33}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11098
    :cond_4
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v4, 0x2

    aget-object v3, v3, v4

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11100
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v4, 0x2

    aget-object v3, v3, v4

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11102
    invoke-virtual/range {v20 .. v20}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUid()I

    move-result v3

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    invoke-virtual {v0, v3, v10, v11}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 11106
    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    add-long/2addr v8, v3

    goto :goto_1

    .line 11091
    .end local v26    # "elapsedRealtimeMs":J
    .restart local v3    # "elapsedRealtimeMs":J
    :cond_5
    move-wide/from16 v26, v3

    .line 11109
    .end local v3    # "elapsedRealtimeMs":J
    .restart local v26    # "elapsedRealtimeMs":J
    :goto_1
    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    const-wide/16 v10, 0x0

    cmp-long v3, v3, v10

    if-eqz v3, :cond_7

    .line 11110
    const/16 v29, 0x3

    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v28, v20

    move-wide/from16 v30, v3

    move-wide/from16 v32, v10

    invoke-virtual/range {v28 .. v33}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11112
    iget v3, v13, Landroid/net/NetworkStats$Entry;->set:I

    if-nez v3, :cond_6

    .line 11113
    const/16 v29, 0x9

    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v28, v20

    move-wide/from16 v30, v3

    move-wide/from16 v32, v10

    invoke-virtual/range {v28 .. v33}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11116
    :cond_6
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v4, 0x3

    aget-object v3, v3, v4

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11118
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v4, 0x3

    aget-object v3, v3, v4

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11121
    invoke-virtual/range {v20 .. v20}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUid()I

    move-result v3

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    invoke-virtual {v5, v3, v10, v11}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 11125
    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    add-long/2addr v6, v3

    .line 11076
    .end local v20    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_7
    :goto_2
    add-int/lit8 v15, v15, 0x1

    move-wide/from16 v3, v26

    goto/16 :goto_0

    .end local v26    # "elapsedRealtimeMs":J
    .restart local v3    # "elapsedRealtimeMs":J
    :cond_8
    move-wide/from16 v26, v3

    .line 11130
    .end local v3    # "elapsedRealtimeMs":J
    .end local v15    # "i":I
    .restart local v26    # "elapsedRealtimeMs":J
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v10, 0x3

    aget-object v4, v4, v10

    .line 11131
    move-wide/from16 v20, v6

    const/4 v11, 0x0

    .end local v6    # "totalTxPackets":J
    .local v20, "totalTxPackets":J
    invoke-virtual {v4, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v6

    .line 11130
    invoke-virtual {v3, v10, v6, v7}, Lcom/android/internal/os/OppoDevicePowerStats;->recordNetworkActivityBytes(IJ)V

    .line 11132
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v6, 0x2

    aget-object v4, v4, v6

    .line 11133
    const/4 v7, 0x0

    invoke-virtual {v4, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v10

    .line 11132
    invoke-virtual {v3, v6, v10, v11}, Lcom/android/internal/os/OppoDevicePowerStats;->recordNetworkActivityBytes(IJ)V

    .line 11135
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v3, v2}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    .line 11136
    const/4 v2, 0x0

    move-wide/from16 v6, v20

    goto :goto_3

    .line 11073
    .end local v13    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v14    # "size":I
    .end local v20    # "totalTxPackets":J
    .end local v26    # "elapsedRealtimeMs":J
    .restart local v3    # "elapsedRealtimeMs":J
    .restart local v6    # "totalTxPackets":J
    :cond_9
    move-wide/from16 v26, v3

    .line 11140
    .end local v3    # "elapsedRealtimeMs":J
    .restart local v26    # "elapsedRealtimeMs":J
    :goto_3
    if-eqz p1, :cond_13

    .line 11141
    const/4 v3, 0x1

    :try_start_2
    iput-boolean v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 11144
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerTxDurationMillis()J

    move-result-wide v3

    .line 11145
    .local v3, "txTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerRxDurationMillis()J

    move-result-wide v10

    .line 11146
    .local v10, "rxTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerScanDurationMillis()J

    move-result-wide v12

    .line 11147
    .local v12, "scanTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerIdleDurationMillis()J

    move-result-wide v14
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11148
    .local v14, "idleTimeMs":J
    add-long v20, v3, v10

    add-long v20, v20, v14

    .line 11150
    .local v20, "totalTimeMs":J
    move-wide/from16 v22, v10

    .line 11151
    .local v22, "leftOverRxTimeMs":J
    move-wide/from16 v24, v3

    .line 11162
    .local v24, "leftOverTxTimeMs":J
    const-wide/16 v28, 0x0

    .line 11163
    .local v28, "totalWifiLockTimeMs":J
    const-wide/16 v30, 0x0

    .line 11167
    .local v30, "totalScanTimeMs":J
    move-object/from16 v17, v2

    .end local v2    # "delta":Landroid/net/NetworkStats;
    .local v17, "delta":Landroid/net/NetworkStats;
    :try_start_3
    iget-object v2, v1, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 11168
    .local v2, "uidStatsSize":I
    const/16 v32, 0x0

    move-wide/from16 v46, v12

    move/from16 v12, v32

    move-wide/from16 v32, v46

    .local v12, "i":I
    .local v32, "scanTimeMs":J
    :goto_4
    const-wide/16 v34, 0x3e8

    if-ge v12, v2, :cond_a

    .line 11169
    iget-object v13, v1, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v13, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 11172
    .local v13, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-wide/from16 v36, v8

    .end local v8    # "totalRxPackets":J
    .local v36, "totalRxPackets":J
    iget-object v8, v13, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-wide/from16 v38, v6

    .end local v6    # "totalTxPackets":J
    .local v38, "totalTxPackets":J
    mul-long v6, v26, v34

    invoke-virtual {v8, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v6

    div-long v6, v6, v34

    add-long v30, v30, v6

    .line 11176
    iget-object v6, v13, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    mul-long v7, v26, v34

    invoke-virtual {v6, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v6

    div-long v6, v6, v34
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    add-long v28, v28, v6

    .line 11168
    .end local v13    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v12, v12, 0x1

    move-wide/from16 v8, v36

    move-wide/from16 v6, v38

    goto :goto_4

    .end local v36    # "totalRxPackets":J
    .end local v38    # "totalTxPackets":J
    .restart local v6    # "totalTxPackets":J
    .restart local v8    # "totalRxPackets":J
    :cond_a
    move-wide/from16 v38, v6

    move-wide/from16 v36, v8

    .line 11192
    .end local v6    # "totalTxPackets":J
    .end local v8    # "totalRxPackets":J
    .end local v12    # "i":I
    .restart local v36    # "totalRxPackets":J
    .restart local v38    # "totalTxPackets":J
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_5
    if-ge v6, v2, :cond_f

    .line 11193
    :try_start_4
    iget-object v7, v1, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v7, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 11195
    .local v7, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v8, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    mul-long v12, v26, v34

    invoke-virtual {v8, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v8

    div-long v8, v8, v34

    .line 11197
    .local v8, "scanTimeSinceMarkMs":J
    const-wide/16 v12, 0x0

    cmp-long v40, v8, v12

    if-lez v40, :cond_d

    .line 11199
    iget-object v12, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-object v13, v0

    move-wide/from16 v0, v26

    .end local v26    # "elapsedRealtimeMs":J
    .local v0, "elapsedRealtimeMs":J
    .local v13, "rxPackets":Landroid/util/SparseLongArray;
    invoke-virtual {v12, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->setMark(J)V

    .line 11201
    move-wide/from16 v26, v8

    .line 11202
    .local v26, "scanRxTimeSinceMarkMs":J
    move-wide/from16 v40, v8

    .line 11211
    .local v40, "scanTxTimeSinceMarkMs":J
    cmp-long v12, v30, v10

    if-lez v12, :cond_b

    .line 11212
    mul-long v42, v10, v26

    div-long v42, v42, v30

    move-wide/from16 v26, v42

    move-wide/from16 v42, v8

    move-wide/from16 v8, v26

    goto :goto_6

    .line 11211
    :cond_b
    move-wide/from16 v42, v8

    move-wide/from16 v8, v26

    .line 11215
    .end local v26    # "scanRxTimeSinceMarkMs":J
    .local v8, "scanRxTimeSinceMarkMs":J
    .local v42, "scanTimeSinceMarkMs":J
    :goto_6
    cmp-long v12, v30, v3

    if-lez v12, :cond_c

    .line 11216
    mul-long v26, v3, v40

    div-long v26, v26, v30

    move-wide/from16 v40, v26

    move-wide/from16 v26, v3

    move v4, v2

    move-wide/from16 v2, v40

    goto :goto_7

    .line 11215
    :cond_c
    move-wide/from16 v26, v3

    move v4, v2

    move-wide/from16 v2, v40

    .line 11226
    .end local v3    # "txTimeMs":J
    .end local v40    # "scanTxTimeSinceMarkMs":J
    .local v2, "scanTxTimeSinceMarkMs":J
    .local v4, "uidStatsSize":I
    .local v26, "txTimeMs":J
    :goto_7
    nop

    .line 11227
    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v12

    .line 11228
    .local v12, "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    move/from16 v40, v4

    .end local v4    # "uidStatsSize":I
    .local v40, "uidStatsSize":I
    invoke-virtual {v12}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11229
    invoke-virtual {v12}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    const/16 v16, 0x0

    aget-object v4, v4, v16

    invoke-virtual {v4, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11231
    sub-long v22, v22, v8

    .line 11232
    sub-long v24, v24, v2

    goto :goto_8

    .line 11197
    .end local v12    # "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v13    # "rxPackets":Landroid/util/SparseLongArray;
    .end local v40    # "uidStatsSize":I
    .end local v42    # "scanTimeSinceMarkMs":J
    .local v0, "rxPackets":Landroid/util/SparseLongArray;
    .local v2, "uidStatsSize":I
    .restart local v3    # "txTimeMs":J
    .local v8, "scanTimeSinceMarkMs":J
    .local v26, "elapsedRealtimeMs":J
    :cond_d
    move-object v13, v0

    move/from16 v40, v2

    move-wide/from16 v42, v8

    move-wide/from16 v0, v26

    move-wide/from16 v26, v3

    .line 11237
    .end local v2    # "uidStatsSize":I
    .end local v3    # "txTimeMs":J
    .end local v8    # "scanTimeSinceMarkMs":J
    .local v0, "elapsedRealtimeMs":J
    .restart local v13    # "rxPackets":Landroid/util/SparseLongArray;
    .local v26, "txTimeMs":J
    .restart local v40    # "uidStatsSize":I
    .restart local v42    # "scanTimeSinceMarkMs":J
    :goto_8
    iget-object v2, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    mul-long v3, v0, v34

    .line 11238
    invoke-virtual {v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v2

    div-long v2, v2, v34

    .line 11240
    .local v2, "wifiLockTimeSinceMarkMs":J
    const-wide/16 v8, 0x0

    cmp-long v4, v2, v8

    if-lez v4, :cond_e

    .line 11242
    iget-object v4, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    .line 11244
    mul-long v18, v2, v14

    div-long v18, v18, v28

    move-wide/from16 v44, v18

    .line 11250
    .local v44, "myIdleTimeMs":J
    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    .line 11251
    move-wide/from16 v8, v44

    .end local v44    # "myIdleTimeMs":J
    .local v8, "myIdleTimeMs":J
    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11192
    .end local v2    # "wifiLockTimeSinceMarkMs":J
    .end local v7    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v8    # "myIdleTimeMs":J
    .end local v42    # "scanTimeSinceMarkMs":J
    :cond_e
    add-int/lit8 v6, v6, 0x1

    move-wide/from16 v3, v26

    move/from16 v2, v40

    move-wide/from16 v26, v0

    move-object v0, v13

    move-object/from16 v1, p0

    goto/16 :goto_5

    .line 11324
    .end local v0    # "elapsedRealtimeMs":J
    .end local v5    # "txPackets":Landroid/util/SparseLongArray;
    .end local v6    # "i":I
    .end local v10    # "rxTimeMs":J
    .end local v13    # "rxPackets":Landroid/util/SparseLongArray;
    .end local v14    # "idleTimeMs":J
    .end local v20    # "totalTimeMs":J
    .end local v22    # "leftOverRxTimeMs":J
    .end local v24    # "leftOverTxTimeMs":J
    .end local v26    # "txTimeMs":J
    .end local v28    # "totalWifiLockTimeMs":J
    .end local v30    # "totalScanTimeMs":J
    .end local v32    # "scanTimeMs":J
    .end local v36    # "totalRxPackets":J
    .end local v38    # "totalTxPackets":J
    .end local v40    # "uidStatsSize":I
    :catchall_0
    move-exception v0

    move-object/from16 v1, p0

    goto/16 :goto_c

    .line 11192
    .local v0, "rxPackets":Landroid/util/SparseLongArray;
    .local v2, "uidStatsSize":I
    .restart local v3    # "txTimeMs":J
    .restart local v5    # "txPackets":Landroid/util/SparseLongArray;
    .restart local v6    # "i":I
    .restart local v10    # "rxTimeMs":J
    .restart local v14    # "idleTimeMs":J
    .restart local v20    # "totalTimeMs":J
    .restart local v22    # "leftOverRxTimeMs":J
    .restart local v24    # "leftOverTxTimeMs":J
    .local v26, "elapsedRealtimeMs":J
    .restart local v28    # "totalWifiLockTimeMs":J
    .restart local v30    # "totalScanTimeMs":J
    .restart local v32    # "scanTimeMs":J
    .restart local v36    # "totalRxPackets":J
    .restart local v38    # "totalTxPackets":J
    :cond_f
    move-object v13, v0

    move/from16 v40, v2

    move-wide/from16 v0, v26

    move-wide/from16 v26, v3

    .line 11262
    .end local v2    # "uidStatsSize":I
    .end local v3    # "txTimeMs":J
    .end local v6    # "i":I
    .local v0, "elapsedRealtimeMs":J
    .restart local v13    # "rxPackets":Landroid/util/SparseLongArray;
    .local v26, "txTimeMs":J
    .restart local v40    # "uidStatsSize":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_9
    invoke-virtual {v5}, Landroid/util/SparseLongArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_10

    .line 11263
    invoke-virtual {v5, v2}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    move-wide v6, v0

    move-object/from16 v1, p0

    .end local v0    # "elapsedRealtimeMs":J
    .local v6, "elapsedRealtimeMs":J
    :try_start_5
    invoke-virtual {v1, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 11264
    .local v0, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v5, v2}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v3

    mul-long v3, v3, v24

    div-long v3, v3, v38

    .line 11269
    .local v3, "myTxTimeMs":J
    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v8

    const/4 v9, 0x0

    aget-object v8, v8, v9

    .line 11270
    invoke-virtual {v8, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11262
    .end local v0    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v3    # "myTxTimeMs":J
    add-int/lit8 v2, v2, 0x1

    move-wide v0, v6

    goto :goto_9

    .end local v6    # "elapsedRealtimeMs":J
    .local v0, "elapsedRealtimeMs":J
    :cond_10
    move-wide v6, v0

    move-object/from16 v1, p0

    .line 11275
    .end local v0    # "elapsedRealtimeMs":J
    .end local v2    # "i":I
    .restart local v6    # "elapsedRealtimeMs":J
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_a
    invoke-virtual {v13}, Landroid/util/SparseLongArray;->size()I

    move-result v2

    if-ge v0, v2, :cond_11

    .line 11276
    invoke-virtual {v13, v0}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v2

    .line 11277
    .local v2, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v13, v0}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v3

    mul-long v3, v3, v22

    div-long v3, v3, v36

    .line 11282
    .local v3, "myRxTimeMs":J
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v8

    .line 11283
    invoke-virtual {v8, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11275
    .end local v2    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v3    # "myRxTimeMs":J
    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    .line 11290
    .end local v0    # "i":I
    :cond_11
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    .line 11291
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerRxDurationMillis()J

    move-result-wide v2

    .line 11290
    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11292
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    const/4 v2, 0x0

    aget-object v0, v0, v2

    .line 11293
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerTxDurationMillis()J

    move-result-wide v2

    .line 11292
    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11294
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getScanTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    .line 11295
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerScanDurationMillis()J

    move-result-wide v2

    .line 11294
    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11296
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    .line 11297
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerIdleDurationMillis()J

    move-result-wide v2

    .line 11296
    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11300
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v2, "wifi.controller.voltage"

    invoke-virtual {v0, v2}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v2

    const-wide v8, 0x408f400000000000L    # 1000.0

    div-double/2addr v2, v8

    .line 11302
    .local v2, "opVolt":D
    const-wide/16 v8, 0x0

    cmpl-double v0, v2, v8

    if-eqz v0, :cond_12

    .line 11304
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    .line 11305
    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerEnergyUsedMicroJoules()J

    move-result-wide v8

    long-to-double v8, v8

    div-double/2addr v8, v2

    double-to-long v8, v8

    .line 11304
    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11310
    :cond_12
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerEnergyUsedMicroJoules()J

    move-result-wide v8

    long-to-double v8, v8

    div-double/2addr v8, v2

    double-to-long v8, v8

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/OppoDevicePowerStats;->recordWifiPowerDrainMaMs(J)V

    .line 11315
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    .line 11316
    invoke-virtual {v0}, Lcom/android/internal/os/RailStats;->getWifiTotalEnergyUseduWs()J

    move-result-wide v8

    long-to-double v8, v8

    div-double/2addr v8, v2

    double-to-long v8, v8

    .line 11317
    .local v8, "monitoredRailChargeConsumedMaMs":J
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getMonitoredRailChargeConsumedMaMs()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11319
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    move-wide/from16 v18, v2

    .end local v2    # "opVolt":D
    .local v18, "opVolt":D
    iget-wide v2, v0, Landroid/os/BatteryStats$HistoryItem;->wifiRailChargeMah:D

    move-object v12, v5

    .end local v5    # "txPackets":Landroid/util/SparseLongArray;
    .local v12, "txPackets":Landroid/util/SparseLongArray;
    long-to-double v4, v8

    const-wide v34, 0x414b774000000000L    # 3600000.0

    div-double v4, v4, v34

    add-double/2addr v2, v4

    iput-wide v2, v0, Landroid/os/BatteryStats$HistoryItem;->wifiRailChargeMah:D

    .line 11321
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v2

    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v4

    invoke-virtual {v1, v2, v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 11322
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v0}, Lcom/android/internal/os/RailStats;->resetWifiTotalEnergyUsed()V

    goto :goto_b

    .line 11324
    .end local v6    # "elapsedRealtimeMs":J
    .end local v8    # "monitoredRailChargeConsumedMaMs":J
    .end local v10    # "rxTimeMs":J
    .end local v12    # "txPackets":Landroid/util/SparseLongArray;
    .end local v13    # "rxPackets":Landroid/util/SparseLongArray;
    .end local v14    # "idleTimeMs":J
    .end local v17    # "delta":Landroid/net/NetworkStats;
    .end local v18    # "opVolt":D
    .end local v20    # "totalTimeMs":J
    .end local v22    # "leftOverRxTimeMs":J
    .end local v24    # "leftOverTxTimeMs":J
    .end local v26    # "txTimeMs":J
    .end local v28    # "totalWifiLockTimeMs":J
    .end local v30    # "totalScanTimeMs":J
    .end local v32    # "scanTimeMs":J
    .end local v36    # "totalRxPackets":J
    .end local v38    # "totalTxPackets":J
    .end local v40    # "uidStatsSize":I
    .local v2, "delta":Landroid/net/NetworkStats;
    :catchall_1
    move-exception v0

    move-object/from16 v17, v2

    .end local v2    # "delta":Landroid/net/NetworkStats;
    .restart local v17    # "delta":Landroid/net/NetworkStats;
    goto :goto_d

    .line 11140
    .end local v17    # "delta":Landroid/net/NetworkStats;
    .local v0, "rxPackets":Landroid/util/SparseLongArray;
    .restart local v2    # "delta":Landroid/net/NetworkStats;
    .restart local v5    # "txPackets":Landroid/util/SparseLongArray;
    .local v6, "totalTxPackets":J
    .local v8, "totalRxPackets":J
    .local v26, "elapsedRealtimeMs":J
    :cond_13
    move-object v13, v0

    move-object/from16 v17, v2

    move-object v12, v5

    move-wide/from16 v38, v6

    move-wide/from16 v36, v8

    move-wide/from16 v6, v26

    .line 11324
    .end local v0    # "rxPackets":Landroid/util/SparseLongArray;
    .end local v2    # "delta":Landroid/net/NetworkStats;
    .end local v5    # "txPackets":Landroid/util/SparseLongArray;
    .end local v6    # "totalTxPackets":J
    .end local v8    # "totalRxPackets":J
    .end local v26    # "elapsedRealtimeMs":J
    .restart local v17    # "delta":Landroid/net/NetworkStats;
    :goto_b
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 11325
    return-void

    .line 11324
    :catchall_2
    move-exception v0

    :goto_c
    move-object/from16 v2, v17

    goto :goto_d

    .end local v17    # "delta":Landroid/net/NetworkStats;
    .restart local v2    # "delta":Landroid/net/NetworkStats;
    :catchall_3
    move-exception v0

    :goto_d
    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_3

    throw v0

    .line 11058
    :catchall_4
    move-exception v0

    :try_start_7
    monitor-exit v3
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_4

    throw v0
.end method

.method public greylist-max-o writeAsyncLocked()V
    .locals 1

    .line 13599
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeStatsLocked(Z)V

    .line 13600
    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryLocked(Z)V

    .line 13601
    return-void
.end method

.method blacklist writeHistoryBuffer(Landroid/os/Parcel;ZZ)V
    .locals 4
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclData"    # Z
    .param p3, "andOldHistory"    # Z

    .line 13876
    const/16 v0, 0xba

    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 13877
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    add-long/2addr v0, v2

    invoke-virtual {p1, v0, v1}, Landroid/os/Parcel;->writeLong(J)V

    .line 13878
    const/4 v0, 0x0

    if-nez p2, :cond_0

    .line 13879
    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 13880
    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 13881
    return-void

    .line 13884
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    move-result v1

    invoke-virtual {p1, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 13887
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    move-result v2

    invoke-virtual {p1, v1, v0, v2}, Landroid/os/Parcel;->appendFrom(Landroid/os/Parcel;II)V

    .line 13889
    if-eqz p3, :cond_1

    .line 13890
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->writeOldHistory(Landroid/os/Parcel;)V

    .line 13892
    :cond_1
    return-void
.end method

.method public greylist-max-o writeHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;Landroid/os/BatteryStats$HistoryItem;)V
    .locals 24
    .param p1, "dest"    # Landroid/os/Parcel;
    .param p2, "cur"    # Landroid/os/BatteryStats$HistoryItem;
    .param p3, "last"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3247
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    if-eqz v3, :cond_22

    iget-byte v5, v2, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    if-eqz v5, :cond_0

    goto/16 :goto_e

    .line 3253
    :cond_0
    iget-wide v5, v2, Landroid/os/BatteryStats$HistoryItem;->time:J

    iget-wide v7, v3, Landroid/os/BatteryStats$HistoryItem;->time:J

    sub-long/2addr v5, v7

    .line 3254
    .local v5, "deltaTime":J
    invoke-direct {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v7

    .line 3255
    .local v7, "lastBatteryLevelInt":I
    invoke-direct {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v8

    .line 3258
    .local v8, "lastStateInt":I
    const-wide/16 v9, 0x0

    cmp-long v9, v5, v9

    if-ltz v9, :cond_3

    const-wide/32 v9, 0x7fffffff

    cmp-long v9, v5, v9

    if-lez v9, :cond_1

    goto :goto_0

    .line 3260
    :cond_1
    const-wide/32 v9, 0x7fffd

    cmp-long v9, v5, v9

    if-ltz v9, :cond_2

    .line 3261
    const v9, 0x7fffe

    .local v9, "deltaTimeToken":I
    goto :goto_1

    .line 3263
    .end local v9    # "deltaTimeToken":I
    :cond_2
    long-to-int v9, v5

    .restart local v9    # "deltaTimeToken":I
    goto :goto_1

    .line 3259
    .end local v9    # "deltaTimeToken":I
    :cond_3
    :goto_0
    const v9, 0x7ffff

    .line 3265
    .restart local v9    # "deltaTimeToken":I
    :goto_1
    iget v10, v2, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v11, -0x2000000

    and-int/2addr v10, v11

    or-int/2addr v10, v9

    .line 3266
    .local v10, "firstToken":I
    iget-byte v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    iget-byte v12, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-le v11, v12, :cond_4

    .line 3267
    const/4 v11, 0x1

    goto :goto_2

    :cond_4
    const/4 v11, 0x0

    .line 3268
    .local v11, "includeStepDetails":I
    :goto_2
    if-nez v11, :cond_6

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    if-nez v12, :cond_5

    goto :goto_3

    :cond_5
    const/4 v12, 0x0

    goto :goto_4

    :cond_6
    :goto_3
    const/4 v12, 0x1

    .line 3270
    .local v12, "computeStepDetails":Z
    :goto_4
    invoke-direct {v0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v14

    or-int/2addr v14, v11

    .line 3271
    .local v14, "batteryLevelInt":I
    if-eq v14, v7, :cond_7

    const/4 v15, 0x1

    goto :goto_5

    :cond_7
    const/4 v15, 0x0

    .line 3272
    .local v15, "batteryLevelIntChanged":Z
    :goto_5
    if-eqz v15, :cond_8

    .line 3273
    const/high16 v16, 0x80000

    or-int v10, v10, v16

    .line 3275
    :cond_8
    invoke-direct {v0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v13

    .line 3276
    .local v13, "stateInt":I
    if-eq v13, v8, :cond_9

    const/16 v17, 0x1

    goto :goto_6

    :cond_9
    const/16 v17, 0x0

    .line 3277
    .local v17, "stateIntChanged":Z
    :goto_6
    if-eqz v17, :cond_a

    .line 3278
    const/high16 v18, 0x100000

    or-int v10, v10, v18

    .line 3280
    :cond_a
    iget v4, v2, Landroid/os/BatteryStats$HistoryItem;->states2:I

    move/from16 v19, v7

    .end local v7    # "lastBatteryLevelInt":I
    .local v19, "lastBatteryLevelInt":I
    iget v7, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    if-eq v4, v7, :cond_b

    const/4 v4, 0x1

    goto :goto_7

    :cond_b
    const/4 v4, 0x0

    .line 3281
    .local v4, "state2IntChanged":Z
    :goto_7
    if-eqz v4, :cond_c

    .line 3282
    const/high16 v7, 0x200000

    or-int/2addr v10, v7

    .line 3284
    :cond_c
    iget-object v7, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-nez v7, :cond_d

    iget-object v7, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v7, :cond_e

    .line 3285
    :cond_d
    const/high16 v7, 0x400000

    or-int/2addr v10, v7

    .line 3287
    :cond_e
    iget v7, v2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v7, :cond_f

    .line 3288
    const/high16 v7, 0x800000

    or-int/2addr v10, v7

    .line 3291
    :cond_f
    iget v7, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    move/from16 v20, v8

    .end local v8    # "lastStateInt":I
    .local v20, "lastStateInt":I
    iget v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    if-eq v7, v8, :cond_10

    const/16 v16, 0x1

    goto :goto_8

    :cond_10
    const/16 v16, 0x0

    :goto_8
    move/from16 v7, v16

    .line 3292
    .local v7, "batteryChargeChanged":Z
    if-eqz v7, :cond_11

    .line 3293
    const/high16 v8, 0x1000000

    or-int/2addr v10, v8

    .line 3295
    :cond_11
    invoke-virtual {v1, v10}, Landroid/os/Parcel;->writeInt(I)V

    .line 3299
    const v8, 0x7fffe

    if-lt v9, v8, :cond_13

    .line 3300
    if-ne v9, v8, :cond_12

    .line 3302
    long-to-int v8, v5

    invoke-virtual {v1, v8}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_9

    .line 3305
    :cond_12
    invoke-virtual {v1, v5, v6}, Landroid/os/Parcel;->writeLong(J)V

    .line 3308
    :cond_13
    :goto_9
    if-eqz v15, :cond_14

    .line 3309
    invoke-virtual {v1, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 3316
    :cond_14
    if-eqz v17, :cond_15

    .line 3317
    invoke-virtual {v1, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 3325
    :cond_15
    if-eqz v4, :cond_16

    .line 3326
    iget v8, v2, Landroid/os/BatteryStats$HistoryItem;->states2:I

    invoke-virtual {v1, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 3330
    :cond_16
    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-nez v8, :cond_17

    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v8, :cond_1a

    .line 3333
    :cond_17
    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v8, :cond_18

    .line 3334
    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v0, v8}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    move-result v8

    .local v8, "wakeLockIndex":I
    goto :goto_a

    .line 3338
    .end local v8    # "wakeLockIndex":I
    :cond_18
    const v8, 0xffff

    .line 3340
    .restart local v8    # "wakeLockIndex":I
    :goto_a
    iget-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v3, :cond_19

    .line 3341
    iget-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    move-result v3

    .local v3, "wakeReasonIndex":I
    goto :goto_b

    .line 3345
    .end local v3    # "wakeReasonIndex":I
    :cond_19
    const v3, 0xffff

    .line 3347
    .restart local v3    # "wakeReasonIndex":I
    :goto_b
    shl-int/lit8 v16, v3, 0x10

    move/from16 v18, v3

    .end local v3    # "wakeReasonIndex":I
    .local v18, "wakeReasonIndex":I
    or-int v3, v16, v8

    invoke-virtual {v1, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 3349
    .end local v8    # "wakeLockIndex":I
    .end local v18    # "wakeReasonIndex":I
    :cond_1a
    iget v3, v2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v3, :cond_1b

    .line 3350
    iget-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    move-result v3

    .line 3351
    .local v3, "index":I
    iget v8, v2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    const v16, 0xffff

    and-int v8, v8, v16

    shl-int/lit8 v16, v3, 0x10

    or-int v8, v8, v16

    .line 3352
    .local v8, "codeAndIndex":I
    invoke-virtual {v1, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 3357
    .end local v3    # "index":I
    .end local v8    # "codeAndIndex":I
    :cond_1b
    if-eqz v12, :cond_1f

    .line 3358
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    if-eqz v8, :cond_1c

    .line 3359
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3360
    invoke-interface {v8}, Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;->getPlatformLowPowerStats()Ljava/lang/String;

    move-result-object v8

    iput-object v8, v3, Landroid/os/BatteryStats$HistoryStepDetails;->statPlatformIdleState:Ljava/lang/String;

    .line 3364
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    .line 3365
    invoke-interface {v8}, Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;->getSubsystemLowPowerStats()Ljava/lang/String;

    move-result-object v8

    iput-object v8, v3, Landroid/os/BatteryStats$HistoryStepDetails;->statSubsystemPowerState:Ljava/lang/String;

    .line 3370
    :cond_1c
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v0, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->computeHistoryStepDetails(Landroid/os/BatteryStats$HistoryStepDetails;Landroid/os/BatteryStats$HistoryStepDetails;)V

    .line 3373
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    if-eqz v3, :cond_1d

    .line 3374
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    invoke-virtual {v3}, Lcom/android/internal/os/OppoDevicePowerStats;->onBatteryStepDrained()V

    .line 3375
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOppoDevicePowerStats:Lcom/android/internal/os/OppoDevicePowerStats;

    invoke-virtual {v3}, Lcom/android/internal/os/OppoDevicePowerStats;->getDevicePowerStatsDeltaString()Ljava/lang/String;

    move-result-object v3

    .line 3376
    .local v3, "powerdetails":Ljava/lang/String;
    const-string v8, "BatteryStatsImpl"

    invoke-static {v8, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3377
    const-string v8, "\n                 "

    .line 3378
    .local v8, "prefix":Ljava/lang/String;
    move/from16 v21, v4

    .end local v4    # "state2IntChanged":Z
    .local v21, "state2IntChanged":Z
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    move-wide/from16 v22, v5

    .end local v5    # "deltaTime":J
    .local v22, "deltaTime":J
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iget-object v6, v6, Landroid/os/BatteryStats$HistoryStepDetails;->statSubsystemPowerState:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    iput-object v5, v4, Landroid/os/BatteryStats$HistoryStepDetails;->statSubsystemPowerState:Ljava/lang/String;

    goto :goto_c

    .line 3373
    .end local v3    # "powerdetails":Ljava/lang/String;
    .end local v8    # "prefix":Ljava/lang/String;
    .end local v21    # "state2IntChanged":Z
    .end local v22    # "deltaTime":J
    .restart local v4    # "state2IntChanged":Z
    .restart local v5    # "deltaTime":J
    :cond_1d
    move/from16 v21, v4

    move-wide/from16 v22, v5

    .line 3381
    .end local v4    # "state2IntChanged":Z
    .end local v5    # "deltaTime":J
    .restart local v21    # "state2IntChanged":Z
    .restart local v22    # "deltaTime":J
    :goto_c
    if-eqz v11, :cond_1e

    .line 3382
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-virtual {v3, v1}, Landroid/os/BatteryStats$HistoryStepDetails;->writeToParcel(Landroid/os/Parcel;)V

    .line 3384
    :cond_1e
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iput-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3385
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    const/4 v3, 0x0

    goto :goto_d

    .line 3387
    .end local v21    # "state2IntChanged":Z
    .end local v22    # "deltaTime":J
    .restart local v4    # "state2IntChanged":Z
    .restart local v5    # "deltaTime":J
    :cond_1f
    move/from16 v21, v4

    move-wide/from16 v22, v5

    .end local v4    # "state2IntChanged":Z
    .end local v5    # "deltaTime":J
    .restart local v21    # "state2IntChanged":Z
    .restart local v22    # "deltaTime":J
    const/4 v3, 0x0

    iput-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3389
    :goto_d
    iget-byte v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    iget-byte v5, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-ge v4, v5, :cond_20

    .line 3390
    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3392
    :cond_20
    iget-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput-byte v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 3394
    if-eqz v7, :cond_21

    .line 3396
    iget v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    invoke-virtual {v1, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 3398
    :cond_21
    iget-wide v3, v2, Landroid/os/BatteryStats$HistoryItem;->modemRailChargeMah:D

    invoke-virtual {v1, v3, v4}, Landroid/os/Parcel;->writeDouble(D)V

    .line 3399
    iget-wide v3, v2, Landroid/os/BatteryStats$HistoryItem;->wifiRailChargeMah:D

    invoke-virtual {v1, v3, v4}, Landroid/os/Parcel;->writeDouble(D)V

    .line 3400
    return-void

    .line 3248
    .end local v7    # "batteryChargeChanged":Z
    .end local v9    # "deltaTimeToken":I
    .end local v10    # "firstToken":I
    .end local v11    # "includeStepDetails":I
    .end local v12    # "computeStepDetails":Z
    .end local v13    # "stateInt":I
    .end local v14    # "batteryLevelInt":I
    .end local v15    # "batteryLevelIntChanged":Z
    .end local v17    # "stateIntChanged":Z
    .end local v19    # "lastBatteryLevelInt":I
    .end local v20    # "lastStateInt":I
    .end local v21    # "state2IntChanged":Z
    .end local v22    # "deltaTime":J
    :cond_22
    :goto_e
    const v3, 0x7fffd

    invoke-virtual {v1, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 3249
    const/4 v3, 0x0

    invoke-virtual {v2, v1, v3}, Landroid/os/BatteryStats$HistoryItem;->writeToParcel(Landroid/os/Parcel;I)V

    .line 3250
    return-void
.end method

.method blacklist writeHistoryLocked(Z)V
    .locals 4
    .param p1, "sync"    # Z

    .line 13631
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->getActiveFile()Landroid/util/AtomicFile;

    move-result-object v0

    if-nez v0, :cond_0

    .line 13632
    const-string v0, "BatteryStatsImpl"

    const-string/jumbo v1, "writeHistoryLocked: no history file associated with this instance"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13634
    return-void

    .line 13637
    :cond_0
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mShuttingDown:Z

    if-eqz v0, :cond_1

    .line 13638
    return-void

    .line 13641
    :cond_1
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    .line 13642
    .local v0, "p":Landroid/os/Parcel;
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 13643
    .local v1, "start":J
    const/4 v3, 0x1

    invoke-virtual {p0, v0, v3, v3}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryBuffer(Landroid/os/Parcel;ZZ)V

    .line 13648
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsHistory;->getActiveFile()Landroid/util/AtomicFile;

    move-result-object v3

    invoke-virtual {p0, v0, v3, p1}, Lcom/android/internal/os/BatteryStatsImpl;->writeParcelToFileLocked(Landroid/os/Parcel;Landroid/util/AtomicFile;Z)V

    .line 13649
    return-void
.end method

.method greylist-max-o writeOldHistory(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "out"    # Landroid/os/Parcel;

    .line 13896
    return-void
.end method

.method blacklist writeParcelToFileLocked(Landroid/os/Parcel;Landroid/util/AtomicFile;Z)V
    .locals 2
    .param p1, "p"    # Landroid/os/Parcel;
    .param p2, "file"    # Landroid/util/AtomicFile;
    .param p3, "sync"    # Z

    .line 13652
    if-eqz p3, :cond_0

    .line 13653
    invoke-direct {p0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl;->commitPendingDataToDisk(Landroid/os/Parcel;Landroid/util/AtomicFile;)V

    goto :goto_0

    .line 13655
    :cond_0
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$4;

    invoke-direct {v1, p0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$4;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Parcel;Landroid/util/AtomicFile;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 13661
    :goto_0
    return-void
.end method

.method blacklist writeStatsLocked(Z)V
    .locals 5
    .param p1, "sync"    # Z

    .line 13609
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    if-nez v0, :cond_0

    .line 13610
    const-string v0, "BatteryStatsImpl"

    const-string/jumbo v1, "writeStatsLocked: no file associated with this instance"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13612
    return-void

    .line 13615
    :cond_0
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mShuttingDown:Z

    if-eqz v0, :cond_1

    .line 13616
    return-void

    .line 13619
    :cond_1
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    .line 13620
    .local v0, "p":Landroid/os/Parcel;
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 13621
    .local v1, "start":J
    const/4 v3, 0x0

    invoke-virtual {p0, v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->writeSummaryToParcel(Landroid/os/Parcel;Z)V

    .line 13626
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    .line 13627
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    invoke-virtual {p0, v0, v3, p1}, Lcom/android/internal/os/BatteryStatsImpl;->writeParcelToFileLocked(Landroid/os/Parcel;Landroid/util/AtomicFile;Z)V

    .line 13628
    return-void
.end method

.method public greylist-max-o writeSummaryToParcel(Landroid/os/Parcel;Z)V
    .locals 26
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclHistory"    # Z

    .line 14416
    move-object/from16 v0, p0

    move-object/from16 v7, p1

    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 14420
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getStartClockTime()J

    .line 14422
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long v8, v1, v3

    .line 14423
    .local v8, "NOW_SYS":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    mul-long v10, v1, v3

    .line 14425
    .local v10, "NOWREAL_SYS":J
    const/16 v1, 0xba

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14427
    invoke-virtual/range {p1 .. p2}, Landroid/os/Parcel;->writeBoolean(Z)V

    .line 14428
    const/4 v12, 0x1

    if-eqz p2, :cond_0

    .line 14429
    invoke-virtual {v0, v7, v12, v12}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryBuffer(Landroid/os/Parcel;ZZ)V

    .line 14430
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsHistory;->writeToParcel(Landroid/os/Parcel;)V

    .line 14433
    :cond_0
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14434
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14435
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$HistoryTag;

    .line 14436
    .local v3, "tag":Landroid/os/BatteryStats$HistoryTag;
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14437
    iget-object v4, v3, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14438
    iget v4, v3, Landroid/os/BatteryStats$HistoryTag;->uid:I

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14439
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    .end local v3    # "tag":Landroid/os/BatteryStats$HistoryTag;
    goto :goto_0

    .line 14441
    :cond_1
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14442
    const/4 v13, 0x0

    invoke-virtual {v0, v8, v9, v13}, Lcom/android/internal/os/BatteryStatsImpl;->computeUptime(JI)J

    move-result-wide v1

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14443
    invoke-virtual {v0, v10, v11, v13}, Lcom/android/internal/os/BatteryStatsImpl;->computeRealtime(JI)J

    move-result-wide v1

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14444
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14445
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14446
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14447
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v2, p1

    move-wide v3, v8

    move-wide v5, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14448
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14449
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14450
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14451
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14452
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14453
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14454
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14455
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14456
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14457
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14458
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenOnSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14459
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenOffSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14460
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenDozeSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14461
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14462
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14463
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14464
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14465
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14466
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14467
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14468
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14469
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14470
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-eqz v1, :cond_3

    .line 14471
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 14472
    .local v1, "NPKG":I
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14473
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v1, :cond_2

    .line 14474
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$PackageChange;

    .line 14475
    .local v3, "pc":Landroid/os/BatteryStats$PackageChange;
    iget-object v4, v3, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14476
    iget-boolean v4, v3, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14477
    iget-wide v4, v3, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    invoke-virtual {v7, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    .line 14473
    .end local v3    # "pc":Landroid/os/BatteryStats$PackageChange;
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 14479
    .end local v1    # "NPKG":I
    .end local v2    # "i":I
    :cond_2
    goto :goto_2

    .line 14480
    :cond_3
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14482
    :goto_2
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14483
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14484
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14486
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14487
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14488
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_3
    const/4 v14, 0x5

    if-ge v1, v14, :cond_4

    .line 14489
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14488
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 14491
    .end local v1    # "i":I
    :cond_4
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14492
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14493
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14494
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14495
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14496
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14497
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14498
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14499
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14500
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_4
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v2

    if-ge v1, v2, :cond_5

    .line 14501
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14500
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 14503
    .end local v1    # "i":I
    :cond_5
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14504
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_5
    sget v2, Lcom/android/internal/os/BatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v1, v2, :cond_6

    .line 14505
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14504
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 14507
    .end local v1    # "i":I
    :cond_6
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_6
    const/16 v15, 0xa

    if-ge v1, v15, :cond_7

    .line 14508
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14509
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14507
    add-int/lit8 v1, v1, 0x1

    goto :goto_6

    .line 14511
    .end local v1    # "i":I
    :cond_7
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14512
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14513
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14514
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14515
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14516
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14517
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14518
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14519
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_7
    const/16 v2, 0x8

    if-ge v1, v2, :cond_8

    .line 14520
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14519
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 14522
    .end local v1    # "i":I
    :cond_8
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_8
    const/16 v2, 0xd

    if-ge v1, v2, :cond_9

    .line 14523
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14522
    add-int/lit8 v1, v1, 0x1

    goto :goto_8

    .line 14525
    .end local v1    # "i":I
    :cond_9
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_9
    if-ge v1, v14, :cond_a

    .line 14526
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14525
    add-int/lit8 v1, v1, 0x1

    goto :goto_9

    .line 14528
    .end local v1    # "i":I
    :cond_a
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14529
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    .line 14530
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_a
    const/4 v2, 0x2

    if-ge v1, v2, :cond_b

    .line 14531
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14530
    add-int/lit8 v1, v1, 0x1

    goto :goto_a

    .line 14533
    .end local v1    # "i":I
    :cond_b
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    .line 14534
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    .line 14535
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14536
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14537
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14539
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14540
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14541
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14542
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14544
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14545
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_b
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14546
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Timer;

    .line 14547
    .local v3, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    if-eqz v3, :cond_c

    .line 14548
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14549
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14550
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_c

    .line 14552
    :cond_c
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14554
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    :goto_c
    goto :goto_b

    .line 14555
    :cond_d
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14556
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_d
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_f

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14557
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Timer;

    .line 14558
    .restart local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    if-eqz v3, :cond_e

    .line 14559
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14560
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14561
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_e

    .line 14563
    :cond_e
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14565
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    :goto_e
    goto :goto_d

    .line 14567
    :cond_f
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14568
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_f
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_11

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14569
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Timer;

    .line 14570
    .local v3, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    if-eqz v3, :cond_10

    .line 14571
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14572
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14573
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_10

    .line 14575
    :cond_10
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14577
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    :goto_10
    goto :goto_f

    .line 14579
    :cond_11
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14580
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_11
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_13

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14581
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 14582
    .local v3, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_12

    .line 14583
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14584
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14585
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_12

    .line 14587
    :cond_12
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14589
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_12
    goto :goto_11

    .line 14591
    :cond_13
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14592
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_13
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2}, Landroid/util/LongSparseArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_15

    .line 14593
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2, v1}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Timer;

    .line 14594
    .local v2, "kmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    if-eqz v2, :cond_14

    .line 14595
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14596
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v3, v1}, Landroid/util/LongSparseArray;->keyAt(I)J

    move-result-wide v3

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 14597
    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_14

    .line 14599
    :cond_14
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14592
    .end local v2    # "kmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    :goto_14
    add-int/lit8 v1, v1, 0x1

    goto :goto_13

    .line 14603
    .end local v1    # "i":I
    :cond_15
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v5

    .line 14604
    .local v5, "NU":I
    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14605
    const/4 v1, 0x0

    move v6, v1

    .local v6, "iu":I
    :goto_15
    if-ge v6, v5, :cond_49

    .line 14606
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v6}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14607
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    move-object v3, v1

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 14609
    .local v3, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v1, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mOnBatteryBackgroundTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v2, p1

    move-object v15, v3

    .end local v3    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .local v15, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-wide v3, v8

    move/from16 v16, v5

    move/from16 v17, v6

    .end local v5    # "NU":I
    .end local v6    # "iu":I
    .local v16, "NU":I
    .local v17, "iu":I
    move-wide v5, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14610
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mOnBatteryScreenOffBackgroundTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14612
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_16

    .line 14613
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14614
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_16

    .line 14616
    :cond_16
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14618
    :goto_16
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_17

    .line 14619
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14620
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_17

    .line 14622
    :cond_17
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14624
    :goto_17
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_18

    .line 14625
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14626
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_18

    .line 14628
    :cond_18
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14630
    :goto_18
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_19
    if-ge v1, v14, :cond_1a

    .line 14631
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    if-eqz v2, :cond_19

    .line 14632
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14633
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1a

    .line 14635
    :cond_19
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14630
    :goto_1a
    add-int/lit8 v1, v1, 0x1

    goto :goto_19

    .line 14638
    .end local v1    # "i":I
    :cond_1a
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1b

    .line 14639
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14640
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1b

    .line 14642
    :cond_1b
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14644
    :goto_1b
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1c

    .line 14645
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14646
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1c

    .line 14648
    :cond_1c
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14650
    :goto_1c
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVideoTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1d

    .line 14651
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14652
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVideoTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1d

    .line 14654
    :cond_1d
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14656
    :goto_1d
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFlashlightTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1e

    .line 14657
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14658
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFlashlightTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1e

    .line 14660
    :cond_1e
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14662
    :goto_1e
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCameraTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1f

    .line 14663
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14664
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCameraTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1f

    .line 14666
    :cond_1f
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14670
    :goto_1f
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_20

    .line 14671
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14672
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_20

    .line 14674
    :cond_20
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14676
    :goto_20
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mForegroundServiceTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_21

    .line 14677
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14678
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mForegroundServiceTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_21

    .line 14680
    :cond_21
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14682
    :goto_21
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mAggregatedPartialWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_22

    .line 14683
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14684
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mAggregatedPartialWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_22

    .line 14686
    :cond_22
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14688
    :goto_22
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_23

    .line 14689
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14690
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_23

    .line 14692
    :cond_23
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14694
    :goto_23
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothUnoptimizedScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_24

    .line 14695
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14696
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothUnoptimizedScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_24

    .line 14698
    :cond_24
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14700
    :goto_24
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanResultCounter:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    if-eqz v1, :cond_25

    .line 14701
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14702
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanResultCounter:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_25

    .line 14704
    :cond_25
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14706
    :goto_25
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanResultBgCounter:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    if-eqz v1, :cond_26

    .line 14707
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14708
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanResultBgCounter:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_26

    .line 14710
    :cond_26
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14712
    :goto_26
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_27
    const/4 v2, 0x7

    if-ge v1, v2, :cond_28

    .line 14713
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    if-eqz v2, :cond_27

    .line 14714
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14715
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_28

    .line 14717
    :cond_27
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14712
    :goto_28
    add-int/lit8 v1, v1, 0x1

    goto :goto_27

    .line 14722
    .end local v1    # "i":I
    :cond_28
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVibratorOnTimer:Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;

    if-eqz v1, :cond_29

    .line 14723
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14724
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVibratorOnTimer:Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_29

    .line 14726
    :cond_29
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14729
    :goto_29
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    if-nez v1, :cond_2a

    .line 14730
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_2b

    .line 14732
    :cond_2a
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14733
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_2a
    sget v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->NUM_USER_ACTIVITY_TYPES:I

    if-ge v1, v2, :cond_2b

    .line 14734
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14733
    add-int/lit8 v1, v1, 0x1

    goto :goto_2a

    .line 14738
    .end local v1    # "i":I
    :cond_2b
    :goto_2b
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-nez v1, :cond_2c

    .line 14739
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    const/16 v2, 0xa

    goto :goto_2d

    .line 14741
    :cond_2c
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14742
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_2c
    const/16 v2, 0xa

    if-ge v1, v2, :cond_2d

    .line 14743
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14744
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14742
    add-int/lit8 v1, v1, 0x1

    goto :goto_2c

    .line 14746
    .end local v1    # "i":I
    :cond_2d
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14747
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14750
    :goto_2d
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14751
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14753
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v1, :cond_31

    .line 14754
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14755
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14756
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v3, v1

    move v4, v13

    :goto_2e
    if-ge v4, v3, :cond_32

    aget-object v5, v1, v4

    .line 14757
    .local v5, "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    if-eqz v5, :cond_2f

    .line 14758
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14759
    array-length v6, v5

    invoke-virtual {v7, v6}, Landroid/os/Parcel;->writeInt(I)V

    .line 14760
    array-length v6, v5

    move v2, v13

    :goto_2f
    if-ge v2, v6, :cond_30

    aget-object v14, v5, v2

    .line 14761
    .local v14, "c":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    if-eqz v14, :cond_2e

    .line 14762
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14763
    invoke-virtual {v14, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_30

    .line 14765
    :cond_2e
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14760
    .end local v14    # "c":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    :goto_30
    add-int/lit8 v2, v2, 0x1

    const/4 v14, 0x5

    goto :goto_2f

    .line 14769
    :cond_2f
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14756
    .end local v5    # "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    :cond_30
    add-int/lit8 v4, v4, 0x1

    const/16 v2, 0xa

    const/4 v14, 0x5

    goto :goto_2e

    .line 14773
    :cond_31
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14777
    :cond_32
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14778
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14780
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14781
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->access$2600(Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;Landroid/os/Parcel;)V

    .line 14784
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v1, :cond_33

    .line 14785
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14786
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    array-length v2, v1

    move v3, v13

    :goto_31
    if-ge v3, v2, :cond_34

    aget-object v4, v1, v3

    .line 14787
    .local v4, "counters":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;
    invoke-static {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14786
    .end local v4    # "counters":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;
    add-int/lit8 v3, v3, 0x1

    goto :goto_31

    .line 14790
    :cond_33
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14792
    :cond_34
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v1, :cond_35

    .line 14793
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14794
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    array-length v2, v1

    move v3, v13

    :goto_32
    if-ge v3, v2, :cond_36

    aget-object v4, v1, v3

    .line 14795
    .restart local v4    # "counters":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;
    invoke-static {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14794
    .end local v4    # "counters":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;
    add-int/lit8 v3, v3, 0x1

    goto :goto_32

    .line 14798
    :cond_35
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14801
    :cond_36
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2400(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    if-eqz v1, :cond_37

    .line 14802
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14803
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2400(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_33

    .line 14805
    :cond_37
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14808
    :goto_33
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2500(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    if-eqz v1, :cond_38

    .line 14809
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14810
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2500(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_34

    .line 14812
    :cond_38
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14815
    :goto_34
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWakelockStats:Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    .line 14816
    .local v1, "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v2

    .line 14817
    .local v2, "NW":I
    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14818
    const/4 v3, 0x0

    .local v3, "iw":I
    :goto_35
    if-ge v3, v2, :cond_3d

    .line 14819
    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14820
    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;

    .line 14821
    .local v4, "wl":Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerFull:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v5, :cond_39

    .line 14822
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14823
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerFull:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_36

    .line 14825
    :cond_39
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14827
    :goto_36
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerPartial:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-eqz v5, :cond_3a

    .line 14828
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14829
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerPartial:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v5, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_37

    .line 14831
    :cond_3a
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14833
    :goto_37
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerWindow:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v5, :cond_3b

    .line 14834
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14835
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerWindow:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_38

    .line 14837
    :cond_3b
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14839
    :goto_38
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerDraw:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v5, :cond_3c

    .line 14840
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14841
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerDraw:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_39

    .line 14843
    :cond_3c
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14818
    .end local v4    # "wl":Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;
    :goto_39
    add-int/lit8 v3, v3, 0x1

    goto :goto_35

    .line 14847
    .end local v3    # "iw":I
    :cond_3d
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSyncStats:Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v3

    .line 14848
    .local v3, "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v4

    .line 14849
    .local v4, "NS":I
    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14850
    const/4 v5, 0x0

    .local v5, "is":I
    :goto_3a
    if-ge v5, v4, :cond_3e

    .line 14851
    invoke-virtual {v3, v5}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    invoke-virtual {v7, v6}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14852
    invoke-virtual {v3, v5}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v6, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14850
    add-int/lit8 v5, v5, 0x1

    goto :goto_3a

    .line 14855
    .end local v5    # "is":I
    :cond_3e
    iget-object v5, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobStats:Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v5

    .line 14856
    .local v5, "jobStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    move-result v6

    .line 14857
    .local v6, "NJ":I
    invoke-virtual {v7, v6}, Landroid/os/Parcel;->writeInt(I)V

    .line 14858
    const/4 v14, 0x0

    .local v14, "ij":I
    :goto_3b
    if-ge v14, v6, :cond_3f

    .line 14859
    invoke-virtual {v5, v14}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v18

    move-object/from16 v13, v18

    check-cast v13, Ljava/lang/String;

    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14860
    invoke-virtual {v5, v14}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v13, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14858
    add-int/lit8 v14, v14, 0x1

    const/4 v13, 0x0

    goto :goto_3b

    .line 14863
    .end local v14    # "ij":I
    :cond_3f
    invoke-virtual {v15, v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->writeJobCompletionsToParcelLocked(Landroid/os/Parcel;)V

    .line 14865
    iget-object v13, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsDeferredEventCount:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v13, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14866
    iget-object v13, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsDeferredCount:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v13, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14867
    iget-object v13, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v13, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14868
    const/4 v13, 0x0

    .local v13, "i":I
    :goto_3c
    sget-object v14, Lcom/android/internal/os/BatteryStatsImpl;->JOB_FRESHNESS_BUCKETS:[J

    array-length v14, v14

    if-ge v13, v14, :cond_41

    .line 14869
    iget-object v14, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    aget-object v14, v14, v13

    if-eqz v14, :cond_40

    .line 14870
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14871
    iget-object v14, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    aget-object v14, v14, v13

    invoke-virtual {v14, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_3d

    .line 14873
    :cond_40
    const/4 v14, 0x0

    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 14868
    :goto_3d
    add-int/lit8 v13, v13, 0x1

    goto :goto_3c

    .line 14877
    .end local v13    # "i":I
    :cond_41
    iget-object v13, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v13

    .line 14878
    .local v13, "NSE":I
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 14879
    const/4 v14, 0x0

    .local v14, "ise":I
    :goto_3e
    if-ge v14, v13, :cond_43

    .line 14880
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v14}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v12

    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14881
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;

    .line 14882
    .local v12, "se":Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;
    move-object/from16 v19, v1

    .end local v1    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    .local v19, "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;->mTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_42

    .line 14883
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14884
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;->mTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    const/4 v1, 0x0

    goto :goto_3f

    .line 14886
    :cond_42
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14879
    .end local v12    # "se":Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;
    :goto_3f
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v1, v19

    const/4 v12, 0x1

    goto :goto_3e

    .end local v19    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    .restart local v1    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    :cond_43
    move-object/from16 v19, v1

    const/4 v1, 0x0

    .line 14890
    .end local v1    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    .end local v14    # "ise":I
    .restart local v19    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    iget-object v12, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v12}, Landroid/util/ArrayMap;->size()I

    move-result v12

    .line 14891
    .local v12, "NP":I
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 14892
    const/4 v14, 0x0

    .local v14, "ip":I
    :goto_40
    if-ge v14, v12, :cond_44

    .line 14893
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v1, v14}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14894
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v1, v14}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    .line 14895
    .local v1, "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    move/from16 v20, v2

    move-object/from16 v21, v3

    .end local v2    # "NW":I
    .end local v3    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .local v20, "NW":I
    .local v21, "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    iget-wide v2, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mUserTime:J

    invoke-virtual {v7, v2, v3}, Landroid/os/Parcel;->writeLong(J)V

    .line 14896
    iget-wide v2, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mSystemTime:J

    invoke-virtual {v7, v2, v3}, Landroid/os/Parcel;->writeLong(J)V

    .line 14897
    iget-wide v2, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mForegroundTime:J

    invoke-virtual {v7, v2, v3}, Landroid/os/Parcel;->writeLong(J)V

    .line 14898
    iget v2, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mStarts:I

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14899
    iget v2, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumCrashes:I

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14900
    iget v2, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumAnrs:I

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14901
    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->writeExcessivePowerToParcelLocked(Landroid/os/Parcel;)V

    .line 14892
    .end local v1    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    add-int/lit8 v14, v14, 0x1

    move/from16 v2, v20

    move-object/from16 v3, v21

    const/4 v1, 0x0

    goto :goto_40

    .end local v20    # "NW":I
    .end local v21    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .restart local v2    # "NW":I
    .restart local v3    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    :cond_44
    move/from16 v20, v2

    move-object/from16 v21, v3

    .line 14904
    .end local v2    # "NW":I
    .end local v3    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .end local v14    # "ip":I
    .restart local v20    # "NW":I
    .restart local v21    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    iget-object v1, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    .line 14905
    .end local v12    # "NP":I
    .local v1, "NP":I
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14906
    if-lez v1, :cond_48

    .line 14908
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    invoke-virtual {v2}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_41
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_47

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    .line 14909
    .local v3, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Ljava/lang/String;

    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14910
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    .line 14911
    .local v12, "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    iget-object v14, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v14}, Landroid/util/ArrayMap;->size()I

    move-result v14

    .line 14912
    .local v14, "NWA":I
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 14913
    const/16 v22, 0x0

    move/from16 v23, v1

    move/from16 v1, v22

    .local v1, "iwa":I
    .local v23, "NP":I
    :goto_42
    if-ge v1, v14, :cond_45

    .line 14914
    move-object/from16 v22, v2

    iget-object v2, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14915
    iget-object v2, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14913
    add-int/lit8 v1, v1, 0x1

    move-object/from16 v2, v22

    goto :goto_42

    :cond_45
    move-object/from16 v22, v2

    .line 14917
    .end local v1    # "iwa":I
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v4

    .line 14918
    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14919
    const/4 v1, 0x0

    .local v1, "is":I
    :goto_43
    if-ge v1, v4, :cond_46

    .line 14920
    iget-object v2, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14921
    iget-object v2, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    .line 14922
    .local v2, "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    move-object/from16 v24, v3

    .end local v3    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    .local v24, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 14923
    move/from16 v25, v4

    .end local v4    # "NS":I
    .local v25, "NS":I
    invoke-virtual {v3, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide v3

    .line 14922
    invoke-virtual {v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->getStartTimeToNowLocked(J)J

    move-result-wide v3

    .line 14924
    .local v3, "time":J
    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 14925
    iget v0, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mStarts:I

    invoke-virtual {v7, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 14926
    iget v0, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLaunches:I

    invoke-virtual {v7, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 14919
    .end local v2    # "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    .end local v3    # "time":J
    add-int/lit8 v1, v1, 0x1

    move-object/from16 v0, p0

    move-object/from16 v3, v24

    move/from16 v4, v25

    goto :goto_43

    .end local v24    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    .end local v25    # "NS":I
    .local v3, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    .restart local v4    # "NS":I
    :cond_46
    move-object/from16 v24, v3

    move/from16 v25, v4

    .line 14928
    .end local v1    # "is":I
    .end local v3    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    .end local v4    # "NS":I
    .end local v12    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .end local v14    # "NWA":I
    .restart local v25    # "NS":I
    move-object/from16 v0, p0

    move-object/from16 v2, v22

    move/from16 v1, v23

    goto/16 :goto_41

    .line 14908
    .end local v23    # "NP":I
    .end local v25    # "NS":I
    .local v1, "NP":I
    .restart local v4    # "NS":I
    :cond_47
    move/from16 v23, v1

    .end local v1    # "NP":I
    .restart local v23    # "NP":I
    goto :goto_44

    .line 14906
    .end local v23    # "NP":I
    .restart local v1    # "NP":I
    :cond_48
    move/from16 v23, v1

    .line 14605
    .end local v1    # "NP":I
    .end local v4    # "NS":I
    .end local v5    # "jobStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .end local v6    # "NJ":I
    .end local v13    # "NSE":I
    .end local v15    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v19    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    .end local v20    # "NW":I
    .end local v21    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    :goto_44
    add-int/lit8 v6, v17, 0x1

    const/4 v12, 0x1

    const/4 v13, 0x0

    const/4 v14, 0x5

    const/16 v15, 0xa

    move-object/from16 v0, p0

    move/from16 v5, v16

    .end local v17    # "iu":I
    .local v6, "iu":I
    goto/16 :goto_15

    .line 14931
    .end local v6    # "iu":I
    .end local v16    # "NU":I
    .local v5, "NU":I
    :cond_49
    return-void
.end method

.method public greylist-max-o writeSyncLocked()V
    .locals 1

    .line 13604
    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeStatsLocked(Z)V

    .line 13605
    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryLocked(Z)V

    .line 13606
    return-void
.end method

.method public whitelist test-api writeToParcel(Landroid/os/Parcel;I)V
    .locals 1
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "flags"    # I

    .line 15149
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->writeToParcelLocked(Landroid/os/Parcel;ZI)V

    .line 15150
    return-void
.end method

.method greylist-max-o writeToParcelLocked(Landroid/os/Parcel;ZI)V
    .locals 19
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclUids"    # Z
    .param p3, "flags"    # I

    .line 15159
    move-object/from16 v0, p0

    move-object/from16 v7, p1

    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 15163
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getStartClockTime()J

    .line 15165
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long v8, v1, v3

    .line 15166
    .local v8, "uSecUptime":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    mul-long v10, v1, v3

    .line 15167
    .local v10, "uSecRealtime":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtime(J)J

    move-result-wide v12

    .line 15168
    .local v12, "batteryRealtime":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtime(J)J

    move-result-wide v14

    .line 15170
    .local v14, "batteryScreenOffRealtime":J
    const v1, -0x458a8b8b

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15172
    const/4 v5, 0x1

    const/4 v6, 0x0

    invoke-virtual {v0, v7, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryBuffer(Landroid/os/Parcel;ZZ)V

    .line 15173
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBatteryStatsHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsHistory;->writeToParcel(Landroid/os/Parcel;)V

    .line 15175
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15176
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15177
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15178
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15179
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15180
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15181
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15182
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15183
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15184
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15185
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15186
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15187
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v2, p1

    move-wide v3, v8

    move-wide/from16 v16, v12

    move v13, v5

    move v12, v6

    .end local v12    # "batteryRealtime":J
    .local v16, "batteryRealtime":J
    move-wide v5, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeToParcel(Landroid/os/Parcel;JJ)V

    .line 15188
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeToParcel(Landroid/os/Parcel;JJ)V

    .line 15190
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15191
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15192
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    const/4 v2, 0x5

    if-ge v1, v2, :cond_0

    .line 15193
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15192
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 15195
    .end local v1    # "i":I
    :cond_0
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15196
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15197
    iget-wide v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 15198
    iget-wide v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 15199
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15200
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15201
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15202
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15203
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15204
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_1
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v3

    if-ge v1, v3, :cond_1

    .line 15205
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15204
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 15207
    .end local v1    # "i":I
    :cond_1
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15208
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_2
    sget v3, Lcom/android/internal/os/BatteryStatsImpl;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v1, v3, :cond_2

    .line 15209
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15208
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 15211
    .end local v1    # "i":I
    :cond_2
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_3
    const/16 v3, 0xa

    if-ge v1, v3, :cond_3

    .line 15212
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15213
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15211
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 15215
    .end local v1    # "i":I
    :cond_3
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15216
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15217
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15218
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15219
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15220
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15221
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15222
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15223
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_4
    const/16 v3, 0x8

    if-ge v1, v3, :cond_4

    .line 15224
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15223
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 15226
    .end local v1    # "i":I
    :cond_4
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_5
    const/16 v3, 0xd

    if-ge v1, v3, :cond_5

    .line 15227
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15226
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 15229
    .end local v1    # "i":I
    :cond_5
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_6
    if-ge v1, v2, :cond_6

    .line 15230
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15229
    add-int/lit8 v1, v1, 0x1

    goto :goto_6

    .line 15232
    .end local v1    # "i":I
    :cond_6
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15233
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7, v12}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    .line 15234
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_7
    const/4 v2, 0x2

    if-ge v1, v2, :cond_7

    .line 15235
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15234
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 15237
    .end local v1    # "i":I
    :cond_7
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7, v12}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    .line 15238
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7, v12}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    .line 15239
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15240
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15241
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15243
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15244
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15245
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15246
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15247
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15248
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15249
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15250
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15251
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15252
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15253
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15254
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15255
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15256
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15257
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15258
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15259
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 15260
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 15261
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15262
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15263
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15264
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15265
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15266
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15268
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15269
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_8
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_9

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15270
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 15271
    .local v3, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_8

    .line 15272
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 15273
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15274
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_9

    .line 15276
    :cond_8
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15278
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_9
    goto :goto_8

    .line 15279
    :cond_9
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15280
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_a
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_b

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15281
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 15282
    .restart local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_a

    .line 15283
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 15284
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15285
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_b

    .line 15287
    :cond_a
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15289
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_b
    goto :goto_a

    .line 15291
    :cond_b
    if-eqz p2, :cond_10

    .line 15292
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15293
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_c
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15294
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 15295
    .local v3, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_c

    .line 15296
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 15297
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15298
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_d

    .line 15300
    :cond_c
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15302
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_d
    goto :goto_c

    .line 15303
    :cond_d
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15304
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_e
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_f

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15305
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 15306
    .local v3, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_e

    .line 15307
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 15308
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15309
    invoke-virtual {v3, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_f

    .line 15311
    :cond_e
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15313
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_f
    goto :goto_e

    :cond_f
    goto :goto_10

    .line 15315
    :cond_10
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15316
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15319
    :goto_10
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15320
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_11
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2}, Landroid/util/LongSparseArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_12

    .line 15321
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2, v1}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 15322
    .local v2, "kmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v2, :cond_11

    .line 15323
    invoke-virtual {v7, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 15324
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v3, v1}, Landroid/util/LongSparseArray;->keyAt(I)J

    move-result-wide v3

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 15325
    invoke-virtual {v2, v7, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_12

    .line 15327
    :cond_11
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15320
    .end local v2    # "kmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_12
    add-int/lit8 v1, v1, 0x1

    goto :goto_11

    .line 15331
    .end local v1    # "i":I
    :cond_12
    if-eqz p2, :cond_14

    .line 15332
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v12

    .line 15333
    .local v12, "size":I
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15334
    const/4 v1, 0x0

    move v13, v1

    .local v13, "i":I
    :goto_13
    if-ge v13, v12, :cond_13

    .line 15335
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v13}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15336
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v13}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v18, v1

    check-cast v18, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 15338
    .local v18, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-object/from16 v1, v18

    move-object/from16 v2, p1

    move-wide v3, v8

    move-wide v5, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->writeToParcelLocked(Landroid/os/Parcel;JJ)V

    .line 15334
    .end local v18    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v13, v13, 0x1

    goto :goto_13

    .line 15340
    .end local v12    # "size":I
    .end local v13    # "i":I
    :cond_13
    goto :goto_14

    .line 15341
    :cond_14
    invoke-virtual {v7, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 15343
    :goto_14
    return-void
.end method

.method public greylist-max-o writeToParcelWithoutUids(Landroid/os/Parcel;I)V
    .locals 1
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "flags"    # I

    .line 15153
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->writeToParcelLocked(Landroid/os/Parcel;ZI)V

    .line 15154
    return-void
.end method
